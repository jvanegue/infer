[
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "`__i` is copied into field `iter` but is not modified afterwards.",
        "suggestion": "Rather than copying into the field, move into it instead.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 891,
        "column": 43,
        "procedure": "std::insert_iterator<bsl::unordered_map<bsl::basic_string<char,std::char_traits<char>,bsl::allocator<char>> const ,BloombergLP::mqbi::QueueHandle::StreamInfo,bsl::hash<bsl::basic_string<char,std::char_traits<char>,bsl::allocator<char>> const >,bsl::equal_to<bsl::basic_string<char,std::char_traits<char>,bsl::allocator<char>> const >,bsl::allocator<bsl::pair<bsl::basic_string<char,std::char_traits<char>,bsl::allocator<char>> const ,BloombergLP::mqbi::QueueHandle::StreamInfo>>>>::insert_iterator",
        "procedure_start_line": 890,
        "file": "/usr/include/c++/11/bits/stl_iterator.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "src/groups/mqb/mqbblp/mqbblp_rootqueueengine.cpp",
                "line_number": 1083,
                "column_number": 19,
                "description": "first instantiated at"
            },
            {
                "level": 0,
                "filename": "/usr/include/c++/11/bits/stl_iterator.h",
                "line_number": 891,
                "column_number": 43,
                "description": "copied here (with type `BloombergLP::bslstl::HashTableIterator<bsl::pair<bsl::basic_string<char,std::char_traits<char>,bsl::allocator<char>> const ,BloombergLP::mqbi::QueueHandle::StreamInfo>,long>&`)"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "stl_iterator.h|insert_iterator|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "0ae2b53bb2086d826a07fda45b55ec91",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "BloombergLP::bslstl::HashTableIterator<bsl::pair<bsl::basic_string<char,std::char_traits<char>,bsl::allocator<char>> const ,BloombergLP::mqbi::QueueHandle::StreamInfo>,long>&"
        },
        "autofix": {
            "original": "iter(__i)",
            "replacement": "iter(std::move(__i))"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `__i` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 982,
        "column": 5,
        "procedure": "std::inserter<e82c78affe9a6de0>",
        "procedure_start_line": 982,
        "file": "/usr/include/c++/11/bits/stl_iterator.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "/usr/include/c++/11/bits/stl_iterator.h",
                "line_number": 982,
                "column_number": 5,
                "description": "Parameter __i with type `BloombergLP::bslstl::HashTableIterator<bsl::pair<bsl::basic_string<char,std::char_traits<char>,bsl::allocator<char>> const ,BloombergLP::mqbi::QueueHandle::StreamInfo>,long>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "stl_iterator.h|std::inserter<e82c78affe9a6de0>|PULSE_CONST_REFABLE",
        "node_key": "c1d780a30890a1959aa2c529d08326c6",
        "hash": "de6e51964465661d6654f87e31355b68",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "BloombergLP::bslstl::HashTableIterator<bsl::pair<bsl::basic_string<char,std::char_traits<char>,bsl::allocator<char>> const ,BloombergLP::mqbi::QueueHandle::StreamInfo>,long>"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `__i` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 984,
        "column": 47,
        "procedure": "std::inserter<e82c78affe9a6de0>",
        "procedure_start_line": 982,
        "file": "/usr/include/c++/11/bits/stl_iterator.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "src/groups/mqb/mqbblp/mqbblp_rootqueueengine.cpp",
                "line_number": 1083,
                "column_number": 24,
                "description": "first instantiated at"
            },
            {
                "level": 0,
                "filename": "/usr/include/c++/11/bits/stl_iterator.h",
                "line_number": 984,
                "column_number": 47,
                "description": "copied here (with type `BloombergLP::bslstl::HashTableIterator<bsl::pair<bsl::basic_string<char,std::char_traits<char>,bsl::allocator<char>> const ,BloombergLP::mqbi::QueueHandle::StreamInfo>,long>&`)"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "stl_iterator.h|std::inserter<e82c78affe9a6de0>|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "c1d780a30890a1959aa2c529d08326c6",
        "hash": "d0149a98530bb1603434f622933f2818",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "BloombergLP::bslstl::HashTableIterator<bsl::pair<bsl::basic_string<char,std::char_traits<char>,bsl::allocator<char>> const ,BloombergLP::mqbi::QueueHandle::StreamInfo>,long>&"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "`std::forward()` is copied into field `second` but is not modified afterwards.",
        "suggestion": "Rather than copying into the field, move into it instead.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 337,
        "column": 22,
        "procedure": "std::pair<BloombergLP::mqbu::StorageKey,BloombergLP::mqbs::DataStoreConfigQueueInfo>::pair<97de7c3abcd31023>",
        "procedure_start_line": 336,
        "file": "/usr/include/c++/11/bits/stl_pair.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "/usr/include/c++/11/bits/stl_pair.h",
                "line_number": 567,
                "column_number": 5,
                "description": "first instantiated at"
            },
            {
                "level": 0,
                "filename": "/usr/include/c++/11/bits/stl_pair.h",
                "line_number": 337,
                "column_number": 22,
                "description": "copied here (with type `BloombergLP::mqbs::DataStoreConfigQueueInfo&`)"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "stl_pair.h|pair<97de7c3abcd31023>|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "24b6e6bf9b580ad5f30bf9419892378e",
        "hash": "d003708210ee8c8ddc7f21c5bc326a53",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "BloombergLP::mqbs::DataStoreConfigQueueInfo&"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "`std::forward()` is copied into field `first` but is not modified afterwards.",
        "suggestion": "Rather than copying into the field, move into it instead.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 353,
        "column": 4,
        "procedure": "std::pair<BloombergLP::bmqc::OrderedHashMap_SequentialIterator<BloombergLP::bmqc::OrderedHashMapWithHistory<e12e38d4ad2bc727>::Value>,_Bool>::pair<44a498e709d1c84b>",
        "procedure_start_line": 352,
        "file": "/usr/include/c++/11/bits/stl_pair.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "/usr/include/c++/11/bits/stl_pair.h",
                "line_number": 567,
                "column_number": 5,
                "description": "first instantiated at"
            },
            {
                "level": 0,
                "filename": "/usr/include/c++/11/bits/stl_pair.h",
                "line_number": 353,
                "column_number": 4,
                "description": "copied here (with type `BloombergLP::bmqc::OrderedHashMap_SequentialIterator<BloombergLP::bmqc::OrderedHashMapWithHistory<e12e38d4ad2bc727>::Value>&`)"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "stl_pair.h|pair<44a498e709d1c84b>|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "8b82f96f7ffce2dffd5f30bedd09eed3",
        "hash": "9ed6b595390f04973702d1af9329b01f",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "BloombergLP::bmqc::OrderedHashMap_SequentialIterator<BloombergLP::bmqc::OrderedHashMapWithHistory<e12e38d4ad2bc727>::Value>&"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "`std::forward()` is copied into field `second` but is not modified afterwards.",
        "suggestion": "Rather than copying into the field, move into it instead.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 353,
        "column": 35,
        "procedure": "std::pair<BloombergLP::mqbs::DataStoreRecordKey,BloombergLP::mqbs::DataStoreRecord>::pair<f21c00dac11a6534>",
        "procedure_start_line": 352,
        "file": "/usr/include/c++/11/bits/stl_pair.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "/usr/include/c++/11/bits/stl_pair.h",
                "line_number": 567,
                "column_number": 5,
                "description": "first instantiated at"
            },
            {
                "level": 0,
                "filename": "/usr/include/c++/11/bits/stl_pair.h",
                "line_number": 353,
                "column_number": 35,
                "description": "copied here (with type `BloombergLP::mqbs::DataStoreRecord&`)"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "stl_pair.h|pair<f21c00dac11a6534>|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "24b6e6bf9b580ad5f30bf9419892378e",
        "hash": "d1be9876459aac76e439860d9f501444",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "BloombergLP::mqbs::DataStoreRecord&"
        }
    },
    {
        "bug_type": "NULLPTR_DEREFERENCE",
        "qualifier": "The call to `BloombergLP_bmqeval_simpleevaluator_FlexLexer::yy_create_buffer` may trigger the following issue: `b->yy_ch_buf` could be null (from the call to `BloombergLP_bmqeval_simpleevaluator_FlexLexer::yy_create_buffer()` on line 1432) and is dereferenced in the call to `BloombergLP_bmqeval_simpleevaluator_FlexLexer::yy_create_buffer()`.",
        "severity": "ERROR",
        "category": "Null pointer dereference",
        "line": 1432,
        "column": 13,
        "procedure": "BloombergLP_bmqeval_simpleevaluator_FlexLexer::yyrestart",
        "procedure_start_line": 1426,
        "file": "build/blazingmq/src/groups/bmq/bmqeval_simpleevaluatorscanner.cpp",
        "bug_trace": [
            {
                "level": 2,
                "filename": "build/blazingmq/src/groups/bmq/bmqeval_simpleevaluatorscanner.cpp",
                "line_number": 1432,
                "column_number": 13,
                "description": "when calling `BloombergLP_bmqeval_simpleevaluator_FlexLexer::yy_create_buffer` here"
            },
            {
                "level": 3,
                "filename": "build/blazingmq/src/groups/bmq/bmqeval_simpleevaluatorscanner.cpp",
                "line_number": 1514,
                "column_number": 26,
                "description": "macro expanded here"
            },
            {
                "level": 3,
                "filename": "build/blazingmq/src/groups/bmq/bmqeval_simpleevaluatorscanner.cpp",
                "line_number": 28,
                "column_number": -1,
                "description": "in call to `BloombergLP_bmqeval_simpleevaluator_alloc`"
            },
            {
                "level": 4,
                "filename": "build/blazingmq/src/groups/bmq/bmqeval_simpleevaluatorscanner.cpp",
                "line_number": 1801,
                "column_number": 11,
                "description": "in call to `malloc (null case)` (modelled)"
            },
            {
                "level": 4,
                "filename": "build/blazingmq/src/groups/bmq/bmqeval_simpleevaluatorscanner.cpp",
                "line_number": 1801,
                "column_number": 11,
                "description": "is assigned to the null pointer"
            },
            {
                "level": 4,
                "filename": "build/blazingmq/src/groups/bmq/bmqeval_simpleevaluatorscanner.cpp",
                "line_number": 1801,
                "column_number": 4,
                "description": "returned"
            },
            {
                "level": 3,
                "filename": "build/blazingmq/src/groups/bmq/bmqeval_simpleevaluatorscanner.cpp",
                "line_number": 1514,
                "column_number": 26,
                "description": "macro expanded here"
            },
            {
                "level": 3,
                "filename": "build/blazingmq/src/groups/bmq/bmqeval_simpleevaluatorscanner.cpp",
                "line_number": 28,
                "column_number": -1,
                "description": "return from call to `BloombergLP_bmqeval_simpleevaluator_alloc`"
            },
            {
                "level": 3,
                "filename": "build/blazingmq/src/groups/bmq/bmqeval_simpleevaluatorscanner.cpp",
                "line_number": 1514,
                "column_number": 2,
                "description": "assigned"
            },
            {
                "level": 3,
                "filename": "build/blazingmq/src/groups/bmq/bmqeval_simpleevaluatorscanner.cpp",
                "line_number": 1520,
                "column_number": 2,
                "description": "when calling `BloombergLP_bmqeval_simpleevaluator_FlexLexer::yy_init_buffer` here"
            },
            {
                "level": 4,
                "filename": "build/blazingmq/src/groups/bmq/bmqeval_simpleevaluatorscanner.cpp",
                "line_number": 1559,
                "column_number": 5,
                "description": "parameter `b` of BloombergLP_bmqeval_simpleevaluator_FlexLexer::yy_init_buffer"
            },
            {
                "level": 4,
                "filename": "build/blazingmq/src/groups/bmq/bmqeval_simpleevaluatorscanner.cpp",
                "line_number": 1564,
                "column_number": 2,
                "description": "when calling `BloombergLP_bmqeval_simpleevaluator_FlexLexer::yy_flush_buffer` here"
            },
            {
                "level": 5,
                "filename": "build/blazingmq/src/groups/bmq/bmqeval_simpleevaluatorscanner.cpp",
                "line_number": 1586,
                "column_number": 5,
                "description": "parameter `b` of BloombergLP_bmqeval_simpleevaluator_FlexLexer::yy_flush_buffer"
            },
            {
                "level": 5,
                "filename": "build/blazingmq/src/groups/bmq/bmqeval_simpleevaluatorscanner.cpp",
                "line_number": 1597,
                "column_number": 2,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 12,
        "bug_trace_max_depth": 5,
        "key": "bmqeval_simpleevaluatorscanner.cpp|yyrestart|NULLPTR_DEREFERENCE",
        "node_key": "4feea19a8f025c5f53bc6878e640f03a",
        "hash": "875ad44ce714ddde17385bce91221153",
        "bug_type_hum": "Null Dereference",
        "extras": {}
    },
    {
        "bug_type": "NULLPTR_DEREFERENCE",
        "qualifier": "`this->yy_buffer_stack` could be null (from the call to `BloombergLP_bmqeval_simpleevaluator_FlexLexer::yy_create_buffer()` on line 1432) and is dereferenced in the call to `BloombergLP_bmqeval_simpleevaluator_FlexLexer::yy_create_buffer()`.",
        "severity": "ERROR",
        "category": "Null pointer dereference",
        "line": 1432,
        "column": 13,
        "procedure": "BloombergLP_bmqeval_simpleevaluator_FlexLexer::yyrestart",
        "procedure_start_line": 1426,
        "file": "build/blazingmq/src/groups/bmq/bmqeval_simpleevaluatorscanner.cpp",
        "bug_trace": [
            {
                "level": 1,
                "filename": "build/blazingmq/src/groups/bmq/bmqeval_simpleevaluatorscanner.cpp",
                "line_number": 1426,
                "column_number": 5,
                "description": "parameter `this` of BloombergLP_bmqeval_simpleevaluator_FlexLexer::yyrestart"
            },
            {
                "level": 1,
                "filename": "build/blazingmq/src/groups/bmq/bmqeval_simpleevaluatorscanner.cpp",
                "line_number": 1430,
                "column_number": 9,
                "description": "in call to `BloombergLP_bmqeval_simpleevaluator_FlexLexer::yyensure_buffer_stack`"
            },
            {
                "level": 2,
                "filename": "build/blazingmq/src/groups/bmq/bmqeval_simpleevaluatorscanner.cpp",
                "line_number": 1679,
                "column_number": 4,
                "description": "macro expanded here"
            },
            {
                "level": 2,
                "filename": "build/blazingmq/src/groups/bmq/bmqeval_simpleevaluatorscanner.cpp",
                "line_number": 533,
                "column_number": -1,
                "description": "in call to function `BloombergLP_bmqeval_simpleevaluator_FlexLexer::LexerError` with no summary"
            },
            {
                "level": 1,
                "filename": "build/blazingmq/src/groups/bmq/bmqeval_simpleevaluatorscanner.cpp",
                "line_number": 1430,
                "column_number": 9,
                "description": "return from call to `BloombergLP_bmqeval_simpleevaluator_FlexLexer::yyensure_buffer_stack`"
            },
            {
                "level": 1,
                "filename": "build/blazingmq/src/groups/bmq/bmqeval_simpleevaluatorscanner.cpp",
                "line_number": 1432,
                "column_number": 13,
                "description": "when calling `BloombergLP_bmqeval_simpleevaluator_FlexLexer::yy_create_buffer` here"
            },
            {
                "level": 2,
                "filename": "build/blazingmq/src/groups/bmq/bmqeval_simpleevaluatorscanner.cpp",
                "line_number": 1514,
                "column_number": 26,
                "description": "macro expanded here"
            },
            {
                "level": 2,
                "filename": "build/blazingmq/src/groups/bmq/bmqeval_simpleevaluatorscanner.cpp",
                "line_number": 28,
                "column_number": -1,
                "description": "in call to `BloombergLP_bmqeval_simpleevaluator_alloc`"
            },
            {
                "level": 3,
                "filename": "build/blazingmq/src/groups/bmq/bmqeval_simpleevaluatorscanner.cpp",
                "line_number": 1801,
                "column_number": 11,
                "description": "in call to `malloc (null case)` (modelled)"
            },
            {
                "level": 3,
                "filename": "build/blazingmq/src/groups/bmq/bmqeval_simpleevaluatorscanner.cpp",
                "line_number": 1801,
                "column_number": 11,
                "description": "is assigned to the null pointer"
            },
            {
                "level": 3,
                "filename": "build/blazingmq/src/groups/bmq/bmqeval_simpleevaluatorscanner.cpp",
                "line_number": 1801,
                "column_number": 4,
                "description": "returned"
            },
            {
                "level": 2,
                "filename": "build/blazingmq/src/groups/bmq/bmqeval_simpleevaluatorscanner.cpp",
                "line_number": 1514,
                "column_number": 26,
                "description": "macro expanded here"
            },
            {
                "level": 2,
                "filename": "build/blazingmq/src/groups/bmq/bmqeval_simpleevaluatorscanner.cpp",
                "line_number": 28,
                "column_number": -1,
                "description": "return from call to `BloombergLP_bmqeval_simpleevaluator_alloc`"
            },
            {
                "level": 2,
                "filename": "build/blazingmq/src/groups/bmq/bmqeval_simpleevaluatorscanner.cpp",
                "line_number": 1514,
                "column_number": 2,
                "description": "assigned"
            },
            {
                "level": 2,
                "filename": "build/blazingmq/src/groups/bmq/bmqeval_simpleevaluatorscanner.cpp",
                "line_number": 1520,
                "column_number": 2,
                "description": "when calling `BloombergLP_bmqeval_simpleevaluator_FlexLexer::yy_init_buffer` here"
            },
            {
                "level": 3,
                "filename": "build/blazingmq/src/groups/bmq/bmqeval_simpleevaluatorscanner.cpp",
                "line_number": 1559,
                "column_number": 5,
                "description": "parameter `b` of BloombergLP_bmqeval_simpleevaluator_FlexLexer::yy_init_buffer"
            },
            {
                "level": 3,
                "filename": "build/blazingmq/src/groups/bmq/bmqeval_simpleevaluatorscanner.cpp",
                "line_number": 1564,
                "column_number": 2,
                "description": "when calling `BloombergLP_bmqeval_simpleevaluator_FlexLexer::yy_flush_buffer` here"
            },
            {
                "level": 4,
                "filename": "build/blazingmq/src/groups/bmq/bmqeval_simpleevaluatorscanner.cpp",
                "line_number": 1586,
                "column_number": 5,
                "description": "parameter `b` of BloombergLP_bmqeval_simpleevaluator_FlexLexer::yy_flush_buffer"
            },
            {
                "level": 4,
                "filename": "build/blazingmq/src/groups/bmq/bmqeval_simpleevaluatorscanner.cpp",
                "line_number": 1597,
                "column_number": 2,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 16,
        "bug_trace_max_depth": 4,
        "key": "bmqeval_simpleevaluatorscanner.cpp|yyrestart|NULLPTR_DEREFERENCE",
        "node_key": "4feea19a8f025c5f53bc6878e640f03a",
        "hash": "c82e8a94c2755cc1b9a40f4b33d93021",
        "bug_type_hum": "Null Dereference",
        "extras": {}
    },
    {
        "bug_type": "NULLPTR_DEREFERENCE",
        "qualifier": "`b` could be null (from the call to `BloombergLP_bmqeval_simpleevaluator_alloc()` on line 1505) and is dereferenced.",
        "severity": "ERROR",
        "category": "Null pointer dereference",
        "line": 1509,
        "column": 2,
        "procedure": "BloombergLP_bmqeval_simpleevaluator_FlexLexer::yy_create_buffer",
        "procedure_start_line": 1501,
        "file": "build/blazingmq/src/groups/bmq/bmqeval_simpleevaluatorscanner.cpp",
        "bug_trace": [
            {
                "level": 1,
                "filename": "build/blazingmq/src/groups/bmq/bmqeval_simpleevaluatorscanner.cpp",
                "line_number": 1505,
                "column_number": 24,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "build/blazingmq/src/groups/bmq/bmqeval_simpleevaluatorscanner.cpp",
                "line_number": 28,
                "column_number": -1,
                "description": "in call to `BloombergLP_bmqeval_simpleevaluator_alloc`"
            },
            {
                "level": 2,
                "filename": "build/blazingmq/src/groups/bmq/bmqeval_simpleevaluatorscanner.cpp",
                "line_number": 1801,
                "column_number": 11,
                "description": "in call to `malloc (null case)` (modelled)"
            },
            {
                "level": 2,
                "filename": "build/blazingmq/src/groups/bmq/bmqeval_simpleevaluatorscanner.cpp",
                "line_number": 1801,
                "column_number": 11,
                "description": "is assigned to the null pointer"
            },
            {
                "level": 2,
                "filename": "build/blazingmq/src/groups/bmq/bmqeval_simpleevaluatorscanner.cpp",
                "line_number": 1801,
                "column_number": 4,
                "description": "returned"
            },
            {
                "level": 1,
                "filename": "build/blazingmq/src/groups/bmq/bmqeval_simpleevaluatorscanner.cpp",
                "line_number": 1505,
                "column_number": 24,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "build/blazingmq/src/groups/bmq/bmqeval_simpleevaluatorscanner.cpp",
                "line_number": 28,
                "column_number": -1,
                "description": "return from call to `BloombergLP_bmqeval_simpleevaluator_alloc`"
            },
            {
                "level": 1,
                "filename": "build/blazingmq/src/groups/bmq/bmqeval_simpleevaluatorscanner.cpp",
                "line_number": 1505,
                "column_number": 2,
                "description": "assigned"
            },
            {
                "level": 1,
                "filename": "build/blazingmq/src/groups/bmq/bmqeval_simpleevaluatorscanner.cpp",
                "line_number": 1509,
                "column_number": 2,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 7,
        "bug_trace_max_depth": 2,
        "key": "bmqeval_simpleevaluatorscanner.cpp|yy_create_buffer|NULLPTR_DEREFERENCE",
        "node_key": "f1b4b9c1e7992fae2be6ed5ccd3f8b45",
        "hash": "f1d1e56e5aff42d1fa8b50784e4df6f6",
        "bug_type_hum": "Null Dereference",
        "extras": {}
    },
    {
        "bug_type": "NULLPTR_DEREFERENCE",
        "qualifier": "`b->yy_ch_buf` could be null (from the call to `BloombergLP_bmqeval_simpleevaluator_alloc()` on line 1514) and is dereferenced in the call to `BloombergLP_bmqeval_simpleevaluator_FlexLexer::yy_init_buffer()`.",
        "severity": "ERROR",
        "category": "Null pointer dereference",
        "line": 1520,
        "column": 2,
        "procedure": "BloombergLP_bmqeval_simpleevaluator_FlexLexer::yy_create_buffer",
        "procedure_start_line": 1501,
        "file": "build/blazingmq/src/groups/bmq/bmqeval_simpleevaluatorscanner.cpp",
        "bug_trace": [
            {
                "level": 1,
                "filename": "build/blazingmq/src/groups/bmq/bmqeval_simpleevaluatorscanner.cpp",
                "line_number": 1514,
                "column_number": 26,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "build/blazingmq/src/groups/bmq/bmqeval_simpleevaluatorscanner.cpp",
                "line_number": 28,
                "column_number": -1,
                "description": "in call to `BloombergLP_bmqeval_simpleevaluator_alloc`"
            },
            {
                "level": 2,
                "filename": "build/blazingmq/src/groups/bmq/bmqeval_simpleevaluatorscanner.cpp",
                "line_number": 1801,
                "column_number": 11,
                "description": "in call to `malloc (null case)` (modelled)"
            },
            {
                "level": 2,
                "filename": "build/blazingmq/src/groups/bmq/bmqeval_simpleevaluatorscanner.cpp",
                "line_number": 1801,
                "column_number": 11,
                "description": "is assigned to the null pointer"
            },
            {
                "level": 2,
                "filename": "build/blazingmq/src/groups/bmq/bmqeval_simpleevaluatorscanner.cpp",
                "line_number": 1801,
                "column_number": 4,
                "description": "returned"
            },
            {
                "level": 1,
                "filename": "build/blazingmq/src/groups/bmq/bmqeval_simpleevaluatorscanner.cpp",
                "line_number": 1514,
                "column_number": 26,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "build/blazingmq/src/groups/bmq/bmqeval_simpleevaluatorscanner.cpp",
                "line_number": 28,
                "column_number": -1,
                "description": "return from call to `BloombergLP_bmqeval_simpleevaluator_alloc`"
            },
            {
                "level": 1,
                "filename": "build/blazingmq/src/groups/bmq/bmqeval_simpleevaluatorscanner.cpp",
                "line_number": 1514,
                "column_number": 2,
                "description": "assigned"
            },
            {
                "level": 1,
                "filename": "build/blazingmq/src/groups/bmq/bmqeval_simpleevaluatorscanner.cpp",
                "line_number": 1520,
                "column_number": 2,
                "description": "when calling `BloombergLP_bmqeval_simpleevaluator_FlexLexer::yy_init_buffer` here"
            },
            {
                "level": 2,
                "filename": "build/blazingmq/src/groups/bmq/bmqeval_simpleevaluatorscanner.cpp",
                "line_number": 1559,
                "column_number": 5,
                "description": "parameter `b` of BloombergLP_bmqeval_simpleevaluator_FlexLexer::yy_init_buffer"
            },
            {
                "level": 2,
                "filename": "build/blazingmq/src/groups/bmq/bmqeval_simpleevaluatorscanner.cpp",
                "line_number": 1564,
                "column_number": 2,
                "description": "when calling `BloombergLP_bmqeval_simpleevaluator_FlexLexer::yy_flush_buffer` here"
            },
            {
                "level": 3,
                "filename": "build/blazingmq/src/groups/bmq/bmqeval_simpleevaluatorscanner.cpp",
                "line_number": 1586,
                "column_number": 5,
                "description": "parameter `b` of BloombergLP_bmqeval_simpleevaluator_FlexLexer::yy_flush_buffer"
            },
            {
                "level": 3,
                "filename": "build/blazingmq/src/groups/bmq/bmqeval_simpleevaluatorscanner.cpp",
                "line_number": 1597,
                "column_number": 2,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 11,
        "bug_trace_max_depth": 3,
        "key": "bmqeval_simpleevaluatorscanner.cpp|yy_create_buffer|NULLPTR_DEREFERENCE",
        "node_key": "3d039170dbf8e454c079eb6a130306d7",
        "hash": "78c26ed856ce52292bfeaeea753679d8",
        "bug_type_hum": "Null Dereference",
        "extras": {}
    },
    {
        "bug_type": "NULLPTR_DEREFERENCE",
        "qualifier": "`ptr` could be null (null value originating from line 6399) and is dereferenced in the call to `BloombergLP::bdlb::Variant_ReturnAnyTypeUtil::doNotCall()`.",
        "severity": "ERROR",
        "category": "Null pointer dereference",
        "line": 6400,
        "column": 12,
        "procedure": "BloombergLP::bdlb::Variant_ReturnAnyTypeUtil<int>::doNotCall",
        "procedure_start_line": 6391,
        "file": "include/bdlb_variant.h",
        "bug_trace": [
            {
                "level": 1,
                "filename": "include/bdlb_variant.h",
                "line_number": 6399,
                "column_number": 5,
                "description": "is assigned to the null pointer"
            },
            {
                "level": 1,
                "filename": "include/bdlb_variant.h",
                "line_number": 6399,
                "column_number": 5,
                "description": "assigned"
            },
            {
                "level": 1,
                "filename": "include/bdlb_variant.h",
                "line_number": 6400,
                "column_number": 12,
                "description": "when calling `BloombergLP::bdlb::Variant_ReturnAnyTypeUtil<int>::doNotCall` here"
            },
            {
                "level": 2,
                "filename": "include/bdlb_variant.h",
                "line_number": 6380,
                "column_number": 1,
                "description": "parameter `dummy` of BloombergLP::bdlb::Variant_ReturnAnyTypeUtil<int>::doNotCall"
            },
            {
                "level": 2,
                "filename": "include/bdlb_variant.h",
                "line_number": 6384,
                "column_number": 12,
                "description": "in call to `BloombergLP::bslmf::MovableRefUtil::move<int_&>`"
            },
            {
                "level": 3,
                "filename": "thirdparty/bde/groups/bsl/bslmf/bslmf_movableref.h",
                "line_number": 912,
                "column_number": 1,
                "description": "parameter `rvalue` of BloombergLP::bslmf::MovableRefUtil::move<int_&>"
            },
            {
                "level": 3,
                "filename": "thirdparty/bde/groups/bsl/bslmf/bslmf_movableref.h",
                "line_number": 916,
                "column_number": 5,
                "description": "returned"
            },
            {
                "level": 2,
                "filename": "include/bdlb_variant.h",
                "line_number": 6384,
                "column_number": 12,
                "description": "return from call to `BloombergLP::bslmf::MovableRefUtil::move<int_&>`"
            },
            {
                "level": 2,
                "filename": "include/bdlb_variant.h",
                "line_number": 6384,
                "column_number": 12,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 9,
        "bug_trace_max_depth": 3,
        "key": "bdlb_variant.h|doNotCall|NULLPTR_DEREFERENCE",
        "node_key": "9f61011e3364d9f154ecb17b5044fa48",
        "hash": "daf26cdd8fb6b02eb74cb226854f2ae8",
        "bug_type_hum": "Null Dereference",
        "extras": {}
    },
    {
        "bug_type": "INFINITE_LOOP",
        "qualifier": "Recurring state leading to infinite execution at line 706, column 9.",
        "severity": "ERROR",
        "category": "No_category",
        "line": 706,
        "column": 9,
        "procedure": "BloombergLP::bdlcc::SingleConsumerQueueImpl<BloombergLP::bmqc::MultiQueueThreadPoolConfig<BloombergLP::mqbi::DispatcherEvent>::QueueItem,BloombergLP::bsls::AtomicOperations,BloombergLP::bslmt::Mutex,BloombergLP::bslmt::Condition>::pushBackHelper",
        "procedure_start_line": 682,
        "file": "include/bdlcc_singleconsumerqueueimpl.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "include/bdlcc_singleconsumerqueueimpl.h",
                "line_number": 706,
                "column_number": 9,
                "description": "in loop"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bdlcc_singleconsumerqueueimpl.h|pushBackHelper|INFINITE_LOOP",
        "node_key": "c5c046edd2c2d000eec759dfea75d25b",
        "hash": "7b104d9a383cc66204893e9fb010db65",
        "bug_type_hum": "Infinite Loop",
        "extras": {}
    },
    {
        "bug_type": "NULLPTR_DEREFERENCE",
        "qualifier": "null (null value originating from line 1981) is dereferenced.",
        "severity": "ERROR",
        "category": "Null pointer dereference",
        "line": 1981,
        "column": 5,
        "procedure": "BloombergLP::bdlcc::SkipList<bsl::pair<int,unsigned int>,bsl::shared_ptr<BloombergLP::bdlmt::Signaler_SlotNode<_fn_>>>::offsetOfPtrs",
        "procedure_start_line": 1970,
        "file": "include/bdlcc_skiplist.h",
        "bug_trace": [
            {
                "level": 1,
                "filename": "include/bdlcc_skiplist.h",
                "line_number": 1981,
                "column_number": 5,
                "description": "is assigned to the null pointer"
            },
            {
                "level": 1,
                "filename": "include/bdlcc_skiplist.h",
                "line_number": 1981,
                "column_number": 5,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 1,
        "key": "bdlcc_skiplist.h|offsetOfPtrs|NULLPTR_DEREFERENCE",
        "node_key": "bffdbc4d6fbdfc9cd869008e74879d86",
        "hash": "be00b407de331ac27384d49b763852db",
        "bug_type_hum": "Null Dereference",
        "extras": {}
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `func` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 1725,
        "column": 5,
        "procedure": "BloombergLP::bdlf::BindUtil::bind<bsl::function<void_(void)>_>",
        "procedure_start_line": 1725,
        "file": "include/bdlf_bind.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "include/bdlf_bind.h",
                "line_number": 1725,
                "column_number": 5,
                "description": "Parameter func with type `bsl::function<_fn_>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bdlf_bind.h|bind<bsl::function<void_(void)>_>|PULSE_CONST_REFABLE",
        "node_key": "c1d780a30890a1959aa2c529d08326c6",
        "hash": "52f93e60fc40cca86ea56bf6d39eb68c",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::function<_fn_>"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `func` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 1753,
        "column": 5,
        "procedure": "BloombergLP::bdlf::BindUtil::bind<8450784037c7f9e6>",
        "procedure_start_line": 1753,
        "file": "include/bdlf_bind.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "include/bdlf_bind.h",
                "line_number": 1753,
                "column_number": 5,
                "description": "Parameter func with type `bsl::function<_fn_>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bdlf_bind.h|bind<8450784037c7f9e6>|PULSE_CONST_REFABLE",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "f559b9a09d947a503fd01ac873bf63df",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::function<_fn_>"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `func` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 1773,
        "column": 5,
        "procedure": "BloombergLP::bdlf::BindUtil::bind<b54775d48bc583e1>",
        "procedure_start_line": 1773,
        "file": "include/bdlf_bind.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "include/bdlf_bind.h",
                "line_number": 1773,
                "column_number": 5,
                "description": "Parameter func with type `BloombergLP::bdlf::MemFnInstance<void,bsl::shared_ptr<BloombergLP::mqba::ClientSession>>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bdlf_bind.h|bind<b54775d48bc583e1>|PULSE_CONST_REFABLE",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "dfe08654402914562b7669414df0f16e",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "BloombergLP::bdlf::MemFnInstance<void,bsl::shared_ptr<BloombergLP::mqba::ClientSession>>"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `func` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 1797,
        "column": 5,
        "procedure": "BloombergLP::bdlf::BindUtil::bind<1d7f08fbc0c26f5e>",
        "procedure_start_line": 1797,
        "file": "include/bdlf_bind.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "include/bdlf_bind.h",
                "line_number": 1797,
                "column_number": 5,
                "description": "Parameter func with type `bsl::function<_fn_>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bdlf_bind.h|bind<1d7f08fbc0c26f5e>|PULSE_CONST_REFABLE",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "c0aa83e80632fb66b93b75191e3ffbee",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::function<_fn_>"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `func` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 1825,
        "column": 5,
        "procedure": "BloombergLP::bdlf::BindUtil::bind<2a1887a947ba3a6a>",
        "procedure_start_line": 1825,
        "file": "include/bdlf_bind.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "include/bdlf_bind.h",
                "line_number": 1825,
                "column_number": 5,
                "description": "Parameter func with type `BloombergLP::bmqu::WeakMemFnInstance<void>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bdlf_bind.h|bind<2a1887a947ba3a6a>|PULSE_CONST_REFABLE",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "f8517f1412b0b646d0c1ef3c286af1b2",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "BloombergLP::bmqu::WeakMemFnInstance<void>"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `func` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 2981,
        "column": 5,
        "procedure": "BloombergLP::bdlf::BindUtil::bindS<332a7df20bd76b4b>",
        "procedure_start_line": 2981,
        "file": "include/bdlf_bind.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "include/bdlf_bind.h",
                "line_number": 2981,
                "column_number": 5,
                "description": "Parameter func with type `bsl::function<_fn_>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bdlf_bind.h|bindS<332a7df20bd76b4b>|PULSE_CONST_REFABLE",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "bd17facedcca687d1c7a70d15ecf0c04",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::function<_fn_>"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `allocator` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 207,
        "column": 1,
        "procedure": "BloombergLP::bslalg::ArrayDestructionPrimitives::destroy<106f43b31a285529>",
        "procedure_start_line": 207,
        "file": "include/bslalg_arraydestructionprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "include/bslalg_arraydestructionprimitives.h",
                "line_number": 207,
                "column_number": 1,
                "description": "Parameter allocator with type `bsl::allocator<BloombergLP::bmqst::BasicTableInfoProvider_ColumnFormat>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_arraydestructionprimitives.h|destroy<106f43b31a285529>|PULSE_CONST_REFABLE",
        "node_key": "89e1fea3672f8c1bda5df785b829cfa3",
        "hash": "597f727f3f67506ce8732c32c4579e7b",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::allocator<BloombergLP::bmqst::BasicTableInfoProvider_ColumnFormat>"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `allocator` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 246,
        "column": 1,
        "procedure": "BloombergLP::bslalg::ArrayDestructionPrimitives::destroy<1a1186425474c429>",
        "procedure_start_line": 246,
        "file": "include/bslalg_arraydestructionprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "include/bslalg_arraydestructionprimitives.h",
                "line_number": 246,
                "column_number": 1,
                "description": "Parameter allocator with type `bsl::allocator<BloombergLP::ntsa::AbstractObjectIdentifier>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_arraydestructionprimitives.h|destroy<1a1186425474c429>|PULSE_CONST_REFABLE",
        "node_key": "beb7dfba0bea12e9c9ab99f820d82919",
        "hash": "e63514dee01321a64547cf41828e3771",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::allocator<BloombergLP::ntsa::AbstractObjectIdentifier>"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `allocator` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 257,
        "column": 13,
        "procedure": "BloombergLP::bslalg::ArrayDestructionPrimitives::destroy<1a1186425474c429>",
        "procedure_start_line": 246,
        "file": "include/bslalg_arraydestructionprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "include/bslalg_arraydestructionprimitives.h",
                "line_number": 257,
                "column_number": 13,
                "description": "copied here (with type `bsl::allocator<BloombergLP::ntsa::AbstractObjectIdentifier>&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_arraydestructionprimitives.h|destroy<1a1186425474c429>|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "beb7dfba0bea12e9c9ab99f820d82919",
        "hash": "984dd259470e08bc433b7857071b4e77",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "bsl::allocator<BloombergLP::ntsa::AbstractObjectIdentifier>&"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `allocator` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 2169,
        "column": 1,
        "procedure": "BloombergLP::bslalg::ArrayPrimitives::destructiveMoveAndInsert<1430f0c13166a9a1>",
        "procedure_start_line": 2169,
        "file": "include/bslalg_arrayprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "include/bslalg_arrayprimitives.h",
                "line_number": 2169,
                "column_number": 1,
                "description": "Parameter allocator with type `bsl::allocator<BloombergLP::mqbcmd::SubId>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_arrayprimitives.h|destructiveMoveAndInsert<1430f0c13166a9a1>|PULSE_CONST_REFABLE",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "7f2a514f499b0566aa56c8df8edd3f36",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::allocator<BloombergLP::mqbcmd::SubId>"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `allocator` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 2228,
        "column": 21,
        "procedure": "BloombergLP::bslalg::ArrayPrimitives::destructiveMoveAndInsert<1430f0c13166a9a1>",
        "procedure_start_line": 2169,
        "file": "include/bslalg_arrayprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "include/bslalg_arrayprimitives.h",
                "line_number": 2228,
                "column_number": 21,
                "description": "copied here (with type `bsl::allocator<BloombergLP::mqbcmd::SubId>&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_arrayprimitives.h|destructiveMoveAndInsert<1430f0c13166a9a1>|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "909d9448beed4be4a13f179eb511cb5e",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "bsl::allocator<BloombergLP::mqbcmd::SubId>&"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `allocator` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 2255,
        "column": 1,
        "procedure": "BloombergLP::bslalg::ArrayPrimitives::destructiveMoveAndInsert<183469b71b2a72e7>",
        "procedure_start_line": 2255,
        "file": "include/bslalg_arrayprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "include/bslalg_arrayprimitives.h",
                "line_number": 2255,
                "column_number": 1,
                "description": "Parameter allocator with type `bsl::allocator<BloombergLP::mqbi::AppMessage>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_arrayprimitives.h|destructiveMoveAndInsert<183469b71b2a72e7>|PULSE_CONST_REFABLE",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "a04dc693132aa58a77eb1d26744e1d38",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::allocator<BloombergLP::mqbi::AppMessage>"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `allocator` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 2318,
        "column": 21,
        "procedure": "BloombergLP::bslalg::ArrayPrimitives::destructiveMoveAndInsert<183469b71b2a72e7>",
        "procedure_start_line": 2255,
        "file": "include/bslalg_arrayprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "include/bslalg_arrayprimitives.h",
                "line_number": 2318,
                "column_number": 21,
                "description": "copied here (with type `bsl::allocator<BloombergLP::mqbi::AppMessage>&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_arrayprimitives.h|destructiveMoveAndInsert<183469b71b2a72e7>|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "af3b4e9fd3ed8336d61cec73b1eae8a7",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "bsl::allocator<BloombergLP::mqbi::AppMessage>&"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `allocator` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 2346,
        "column": 1,
        "procedure": "BloombergLP::bslalg::ArrayPrimitives::destructiveMoveAndInsert<12494bdafa434dfc>",
        "procedure_start_line": 2346,
        "file": "include/bslalg_arrayprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "include/bslalg_arrayprimitives.h",
                "line_number": 2346,
                "column_number": 1,
                "description": "Parameter allocator with type `bsl::allocator<BloombergLP::mqbcmd::RouteResponse>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_arrayprimitives.h|destructiveMoveAndInsert<12494bdafa434dfc>|PULSE_CONST_REFABLE",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "2e5566fddbb753a52b507c15c3db62ed",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::allocator<BloombergLP::mqbcmd::RouteResponse>"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `first` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 2346,
        "column": 1,
        "procedure": "BloombergLP::bslalg::ArrayPrimitives::destructiveMoveAndInsert<2255d7c1a08988fb>",
        "procedure_start_line": 2346,
        "file": "include/bslalg_arrayprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "include/bslalg_arrayprimitives.h",
                "line_number": 2346,
                "column_number": 1,
                "description": "Parameter first with type `bsl::List_Iterator<bsl::shared_ptr<BloombergLP::ntcq::AcceptCallbackQueueEntry>>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_arrayprimitives.h|destructiveMoveAndInsert<2255d7c1a08988fb>|PULSE_CONST_REFABLE",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "a18a76827135131d5ada653083367342",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::List_Iterator<bsl::shared_ptr<BloombergLP::ntcq::AcceptCallbackQueueEntry>>"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `last` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 2346,
        "column": 1,
        "procedure": "BloombergLP::bslalg::ArrayPrimitives::destructiveMoveAndInsert<2255d7c1a08988fb>",
        "procedure_start_line": 2346,
        "file": "include/bslalg_arrayprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "include/bslalg_arrayprimitives.h",
                "line_number": 2346,
                "column_number": 1,
                "description": "Parameter last with type `bsl::List_Iterator<bsl::shared_ptr<BloombergLP::ntcq::AcceptCallbackQueueEntry>>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_arrayprimitives.h|destructiveMoveAndInsert<2255d7c1a08988fb>|PULSE_CONST_REFABLE",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "57fd5a3ea011fc892d58cd74199b17a3",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::List_Iterator<bsl::shared_ptr<BloombergLP::ntcq::AcceptCallbackQueueEntry>>"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `first` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 2380,
        "column": 36,
        "procedure": "BloombergLP::bslalg::ArrayPrimitives::destructiveMoveAndInsert<2255d7c1a08988fb>",
        "procedure_start_line": 2346,
        "file": "include/bslalg_arrayprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "include/bslalg_arrayprimitives.h",
                "line_number": 2380,
                "column_number": 36,
                "description": "copied here (with type `bsl::List_Iterator<bsl::shared_ptr<BloombergLP::ntcq::AcceptCallbackQueueEntry>>&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_arrayprimitives.h|destructiveMoveAndInsert<2255d7c1a08988fb>|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "8868db6da9038eee11ac6eec4ce3f827",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "bsl::List_Iterator<bsl::shared_ptr<BloombergLP::ntcq::AcceptCallbackQueueEntry>>&"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `last` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 2380,
        "column": 43,
        "procedure": "BloombergLP::bslalg::ArrayPrimitives::destructiveMoveAndInsert<2255d7c1a08988fb>",
        "procedure_start_line": 2346,
        "file": "include/bslalg_arrayprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "include/bslalg_arrayprimitives.h",
                "line_number": 2380,
                "column_number": 43,
                "description": "copied here (with type `bsl::List_Iterator<bsl::shared_ptr<BloombergLP::ntcq::AcceptCallbackQueueEntry>>&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_arrayprimitives.h|destructiveMoveAndInsert<2255d7c1a08988fb>|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "bc44898e66137aa5600a533ea39f45de",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "bsl::List_Iterator<bsl::shared_ptr<BloombergLP::ntcq::AcceptCallbackQueueEntry>>&"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `allocator` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 2409,
        "column": 21,
        "procedure": "BloombergLP::bslalg::ArrayPrimitives::destructiveMoveAndInsert<12494bdafa434dfc>",
        "procedure_start_line": 2346,
        "file": "include/bslalg_arrayprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "include/bslalg_arrayprimitives.h",
                "line_number": 2409,
                "column_number": 21,
                "description": "copied here (with type `bsl::allocator<BloombergLP::mqbcmd::RouteResponse>&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_arrayprimitives.h|destructiveMoveAndInsert<12494bdafa434dfc>|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "6525ec73c3d1f9ed3c9c3a491afce449",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "bsl::allocator<BloombergLP::mqbcmd::RouteResponse>&"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `allocator` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 3442,
        "column": 1,
        "procedure": "BloombergLP::bslalg::ArrayPrimitives_Imp::copyConstruct<1e8c3d13774dc4b4>",
        "procedure_start_line": 3442,
        "file": "include/bslalg_arrayprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "include/bslalg_arrayprimitives.h",
                "line_number": 3442,
                "column_number": 1,
                "description": "Parameter allocator with type `bsl::allocator<BloombergLP::ntcdns::SortListItem>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_arrayprimitives.h|copyConstruct<1e8c3d13774dc4b4>|PULSE_CONST_REFABLE",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "ab836a8df02e60eb8ce9ca64bb094819",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::allocator<BloombergLP::ntcdns::SortListItem>"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `fromEnd` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 3442,
        "column": 1,
        "procedure": "BloombergLP::bslalg::ArrayPrimitives_Imp::copyConstruct<465b86b970f8c18b>",
        "procedure_start_line": 3442,
        "file": "include/bslalg_arrayprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "include/bslalg_arrayprimitives.h",
                "line_number": 3442,
                "column_number": 1,
                "description": "Parameter fromEnd with type `bsl::List_Iterator<bsl::function<_fn_>>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_arrayprimitives.h|copyConstruct<465b86b970f8c18b>|PULSE_CONST_REFABLE",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "f7a0789e311a72a194a873034a8c7cfa",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::List_Iterator<bsl::function<_fn_>>"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `allocator` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 3491,
        "column": 1,
        "procedure": "BloombergLP::bslalg::ArrayPrimitives_Imp::moveConstruct<1f635f6261c5d3e1>",
        "procedure_start_line": 3491,
        "file": "include/bslalg_arrayprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "include/bslalg_arrayprimitives.h",
                "line_number": 3491,
                "column_number": 1,
                "description": "Parameter allocator with type `bsl::allocator<BloombergLP::ntcdns::SortListItem>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_arrayprimitives.h|moveConstruct<1f635f6261c5d3e1>|PULSE_CONST_REFABLE",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "484443bf5c2f365b4d295884b91130ad",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::allocator<BloombergLP::ntcdns::SortListItem>"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `allocator` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 3517,
        "column": 1,
        "procedure": "BloombergLP::bslalg::ArrayPrimitives_Imp::moveIfNoexcept<1a1186425474c429>",
        "procedure_start_line": 3517,
        "file": "include/bslalg_arrayprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "include/bslalg_arrayprimitives.h",
                "line_number": 3517,
                "column_number": 1,
                "description": "Parameter allocator with type `bsl::allocator<BloombergLP::ntsa::AbstractObjectIdentifier>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_arrayprimitives.h|moveIfNoexcept<1a1186425474c429>|PULSE_CONST_REFABLE",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "168d02b530ea5397f3d7364d73c9beff",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::allocator<BloombergLP::ntsa::AbstractObjectIdentifier>"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `allocator` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 3564,
        "column": 1,
        "procedure": "BloombergLP::bslalg::ArrayPrimitives_Imp::defaultConstruct<6d5168010cb0e49>",
        "procedure_start_line": 3564,
        "file": "include/bslalg_arrayprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "include/bslalg_arrayprimitives.h",
                "line_number": 3564,
                "column_number": 1,
                "description": "Parameter allocator with type `bsl::allocator<BloombergLP::ntsa::AbstractSyntaxDecoderFrame>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_arrayprimitives.h|defaultConstruct<6d5168010cb0e49>|PULSE_CONST_REFABLE",
        "node_key": "c1d780a30890a1959aa2c529d08326c6",
        "hash": "af3ca56fae96ccafe4b5cf06efd53f80",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::allocator<BloombergLP::ntsa::AbstractSyntaxDecoderFrame>"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `allocator` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 3583,
        "column": 1,
        "procedure": "BloombergLP::bslalg::ArrayPrimitives_Imp::defaultConstruct<2178969782264b5d>",
        "procedure_start_line": 3583,
        "file": "include/bslalg_arrayprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "include/bslalg_arrayprimitives.h",
                "line_number": 3583,
                "column_number": 1,
                "description": "Parameter allocator with type `bsl::allocator<BloombergLP::ntcdns::ResourceRecord>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_arrayprimitives.h|defaultConstruct<2178969782264b5d>|PULSE_CONST_REFABLE",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "72eb4b2abe8d5c16d4bcad2f3916a36a",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::allocator<BloombergLP::ntcdns::ResourceRecord>"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `allocator` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 3625,
        "column": 1,
        "procedure": "BloombergLP::bslalg::ArrayPrimitives_Imp::destructiveMove<1a1186425474c429>",
        "procedure_start_line": 3625,
        "file": "include/bslalg_arrayprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "include/bslalg_arrayprimitives.h",
                "line_number": 3625,
                "column_number": 1,
                "description": "Parameter allocator with type `bsl::allocator<BloombergLP::ntsa::AbstractObjectIdentifier>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_arrayprimitives.h|destructiveMove<1a1186425474c429>|PULSE_CONST_REFABLE",
        "node_key": "9290d6114ddfa0857c72e088e32ec11a",
        "hash": "e4074e050b24ba319d6feb8323a39435",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::allocator<BloombergLP::ntsa::AbstractObjectIdentifier>"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `allocator` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 3642,
        "column": 61,
        "procedure": "BloombergLP::bslalg::ArrayPrimitives_Imp::destructiveMove<1a1186425474c429>",
        "procedure_start_line": 3625,
        "file": "include/bslalg_arrayprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "include/bslalg_arrayprimitives.h",
                "line_number": 3642,
                "column_number": 61,
                "description": "copied here (with type `bsl::allocator<BloombergLP::ntsa::AbstractObjectIdentifier>&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_arrayprimitives.h|destructiveMove<1a1186425474c429>|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "9290d6114ddfa0857c72e088e32ec11a",
        "hash": "68739e95e53e072932185442ea7ddb69",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "bsl::allocator<BloombergLP::ntsa::AbstractObjectIdentifier>&"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `allocator` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 3835,
        "column": 1,
        "procedure": "BloombergLP::bslalg::ArrayPrimitives_Imp::erase<37e406cd2296ec6f>",
        "procedure_start_line": 3835,
        "file": "include/bslalg_arrayprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "include/bslalg_arrayprimitives.h",
                "line_number": 3835,
                "column_number": 1,
                "description": "Parameter allocator with type `bsl::allocator<bsl::shared_ptr<BloombergLP::ntci::Proactor>>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_arrayprimitives.h|erase<37e406cd2296ec6f>|PULSE_CONST_REFABLE",
        "node_key": "c1d780a30890a1959aa2c529d08326c6",
        "hash": "c1a20596c78b7897d75b44007201a9a3",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::allocator<bsl::shared_ptr<BloombergLP::ntci::Proactor>>"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `allocator` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 3855,
        "column": 56,
        "procedure": "BloombergLP::bslalg::ArrayPrimitives_Imp::erase<37e406cd2296ec6f>",
        "procedure_start_line": 3835,
        "file": "include/bslalg_arrayprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "include/bslalg_arrayprimitives.h",
                "line_number": 3855,
                "column_number": 56,
                "description": "copied here (with type `bsl::allocator<bsl::shared_ptr<BloombergLP::ntci::Proactor>>&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_arrayprimitives.h|erase<37e406cd2296ec6f>|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "c1d780a30890a1959aa2c529d08326c6",
        "hash": "554346346877a2fe11c88a5fea352c82",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "bsl::allocator<bsl::shared_ptr<BloombergLP::ntci::Proactor>>&"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `allocator` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 3868,
        "column": 1,
        "procedure": "BloombergLP::bslalg::ArrayPrimitives_Imp::erase<1a1186425474c429>",
        "procedure_start_line": 3868,
        "file": "include/bslalg_arrayprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "include/bslalg_arrayprimitives.h",
                "line_number": 3868,
                "column_number": 1,
                "description": "Parameter allocator with type `bsl::allocator<BloombergLP::ntsa::AbstractObjectIdentifier>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_arrayprimitives.h|erase<1a1186425474c429>|PULSE_CONST_REFABLE",
        "node_key": "9290d6114ddfa0857c72e088e32ec11a",
        "hash": "828cbf7f2ccc45d5f4004e4ca0f3d763",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::allocator<BloombergLP::ntsa::AbstractObjectIdentifier>"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `allocator` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 3903,
        "column": 1,
        "procedure": "BloombergLP::bslalg::ArrayPrimitives_Imp::insert<c693ea664fc5499d>",
        "procedure_start_line": 3903,
        "file": "include/bslalg_arrayprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "include/bslalg_arrayprimitives.h",
                "line_number": 3903,
                "column_number": 1,
                "description": "Parameter allocator with type `bsl::allocator<BloombergLP::ntcu::TimestampCorrelator::RingBuffer::Data>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_arrayprimitives.h|insert<c693ea664fc5499d>|PULSE_CONST_REFABLE",
        "node_key": "ad8fc35725a4bc9e3acb67485246284f",
        "hash": "b0f337f52ccdcf5a0e454a7cc99adf25",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::allocator<BloombergLP::ntcu::TimestampCorrelator::RingBuffer::Data>"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `allocator` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 4384,
        "column": 1,
        "procedure": "BloombergLP::bslalg::ArrayPrimitives_Imp::insert<21b16aa4e057e46>",
        "procedure_start_line": 4384,
        "file": "include/bslalg_arrayprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "include/bslalg_arrayprimitives.h",
                "line_number": 4384,
                "column_number": 1,
                "description": "Parameter allocator with type `bsl::allocator<BloombergLP::ntca::EncryptionResource>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_arrayprimitives.h|insert<21b16aa4e057e46>|PULSE_CONST_REFABLE",
        "node_key": "ed1608a421d78d56dd72eb70af7f1aee",
        "hash": "2d6ee989f365dd24b40990c8b5abae51",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::allocator<BloombergLP::ntca::EncryptionResource>"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `fromEnd` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 4384,
        "column": 1,
        "procedure": "BloombergLP::bslalg::ArrayPrimitives_Imp::insert<465b86b970f8c18b>",
        "procedure_start_line": 4384,
        "file": "include/bslalg_arrayprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "include/bslalg_arrayprimitives.h",
                "line_number": 4384,
                "column_number": 1,
                "description": "Parameter fromEnd with type `bsl::List_Iterator<bsl::function<_fn_>>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_arrayprimitives.h|insert<465b86b970f8c18b>|PULSE_CONST_REFABLE",
        "node_key": "ed1608a421d78d56dd72eb70af7f1aee",
        "hash": "68ac75e5bf70b333232380d1cc74fdc6",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::List_Iterator<bsl::function<_fn_>>"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `fromBegin` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 4477,
        "column": 23,
        "procedure": "BloombergLP::bslalg::ArrayPrimitives_Imp::insert<465b86b970f8c18b>",
        "procedure_start_line": 4384,
        "file": "include/bslalg_arrayprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "include/bslalg_arrayprimitives.h",
                "line_number": 4477,
                "column_number": 23,
                "description": "copied here (with type `bsl::List_Iterator<bsl::function<_fn_>>&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_arrayprimitives.h|insert<465b86b970f8c18b>|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "ed1608a421d78d56dd72eb70af7f1aee",
        "hash": "8a754c7a4a4bd2474c8249958e218d9c",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "bsl::List_Iterator<bsl::function<_fn_>>&"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `fromEnd` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 4478,
        "column": 23,
        "procedure": "BloombergLP::bslalg::ArrayPrimitives_Imp::insert<465b86b970f8c18b>",
        "procedure_start_line": 4384,
        "file": "include/bslalg_arrayprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "include/bslalg_arrayprimitives.h",
                "line_number": 4478,
                "column_number": 23,
                "description": "copied here (with type `bsl::List_Iterator<bsl::function<_fn_>>&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_arrayprimitives.h|insert<465b86b970f8c18b>|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "ed1608a421d78d56dd72eb70af7f1aee",
        "hash": "d40fb994c27db08aa762c9372422f4f8",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "bsl::List_Iterator<bsl::function<_fn_>>&"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `allocator` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 4479,
        "column": 23,
        "procedure": "BloombergLP::bslalg::ArrayPrimitives_Imp::insert<21b16aa4e057e46>",
        "procedure_start_line": 4384,
        "file": "include/bslalg_arrayprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "include/bslalg_arrayprimitives.h",
                "line_number": 4479,
                "column_number": 23,
                "description": "copied here (with type `bsl::allocator<BloombergLP::ntca::EncryptionResource>&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_arrayprimitives.h|insert<21b16aa4e057e46>|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "ed1608a421d78d56dd72eb70af7f1aee",
        "hash": "89d42b4a928d5878f58480f80cc09766",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "bsl::allocator<BloombergLP::ntca::EncryptionResource>&"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "`allocator` is copied into field `d_allocator` but is not modified afterwards.",
        "suggestion": "Rather than copying into the field, move into it instead.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 253,
        "column": 3,
        "procedure": "BloombergLP::bslalg::AutoArrayDestructor<BloombergLP::ntca::EncryptionCertificateExtension,bsl::allocator<BloombergLP::ntca::EncryptionCertificateExtension>>::AutoArrayDestructor",
        "procedure_start_line": 246,
        "file": "include/bslalg_autoarraydestructor.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "include/bslalg_arrayprimitives.h",
                "line_number": 3453,
                "column_number": 49,
                "description": "first instantiated at"
            },
            {
                "level": 0,
                "filename": "include/bslalg_autoarraydestructor.h",
                "line_number": 253,
                "column_number": 3,
                "description": "copied here (with type `bsl::allocator<BloombergLP::ntca::EncryptionCertificateExtension>&`)"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "bslalg_autoarraydestructor.h|AutoArrayDestructor|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "507d16a8974986697f7b40e0646bf441",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "bsl::allocator<BloombergLP::ntca::EncryptionCertificateExtension>&"
        },
        "autofix": {
            "original": "d_allocator(allocator)",
            "replacement": "d_allocator(std::move(allocator))"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "`allocator` is copied into field `d_allocator` but is not modified afterwards.",
        "suggestion": "Rather than copying into the field, move into it instead.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 463,
        "column": 3,
        "procedure": "BloombergLP::bslalg::AutoArrayMoveDestructor<BloombergLP::ntcdns::HostEntry,bsl::allocator<BloombergLP::ntcdns::HostEntry>>::AutoArrayMoveDestructor",
        "procedure_start_line": 452,
        "file": "include/bslalg_autoarraymovedestructor.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "include/bslalg_arrayprimitives.h",
                "line_number": 4339,
                "column_number": 53,
                "description": "first instantiated at"
            },
            {
                "level": 0,
                "filename": "include/bslalg_autoarraymovedestructor.h",
                "line_number": 463,
                "column_number": 3,
                "description": "copied here (with type `bsl::allocator<BloombergLP::ntcdns::HostEntry>&`)"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "bslalg_autoarraymovedestructor.h|AutoArrayMoveDestructor|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "99001dc4aaa0297a83c2e05859a1dee5",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "bsl::allocator<BloombergLP::ntcdns::HostEntry>&"
        },
        "autofix": {
            "original": "d_allocator(allocator)",
            "replacement": "d_allocator(std::move(allocator))"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `allocator` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 1095,
        "column": 1,
        "procedure": "BloombergLP::bslalg::DequePrimitives<BloombergLP::bdlb::Variant<BloombergLP::bmqa::Event,BloombergLP::bmqa::MockSession::Job>,16>::destruct<b7862e316d295c2>",
        "procedure_start_line": 1095,
        "file": "include/bslalg_dequeprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "include/bslalg_dequeprimitives.h",
                "line_number": 1095,
                "column_number": 1,
                "description": "Parameter allocator with type `bsl::allocator<BloombergLP::bdlb::Variant<BloombergLP::bmqa::Event,BloombergLP::bmqa::MockSession::Job>>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_dequeprimitives.h|destruct<b7862e316d295c2>|PULSE_CONST_REFABLE",
        "node_key": "89e1fea3672f8c1bda5df785b829cfa3",
        "hash": "d970aff975a2cc85caa6bbc0d8cfec5f",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::allocator<BloombergLP::bdlb::Variant<BloombergLP::bmqa::Event,BloombergLP::bmqa::MockSession::Job>>"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `allocator` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 1140,
        "column": 1,
        "procedure": "BloombergLP::bslalg::DequePrimitives<BloombergLP::bdlb::Variant<BloombergLP::bmqa::Event,BloombergLP::bmqa::MockSession::Job>,16>::erase<b7862e316d295c2>",
        "procedure_start_line": 1140,
        "file": "include/bslalg_dequeprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "include/bslalg_dequeprimitives.h",
                "line_number": 1140,
                "column_number": 1,
                "description": "Parameter allocator with type `bsl::allocator<BloombergLP::bdlb::Variant<BloombergLP::bmqa::Event,BloombergLP::bmqa::MockSession::Job>>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_dequeprimitives.h|erase<b7862e316d295c2>|PULSE_CONST_REFABLE",
        "node_key": "ed1608a421d78d56dd72eb70af7f1aee",
        "hash": "dd1e7ad3333afb0f96b81a2e555de9dd",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::allocator<BloombergLP::bdlb::Variant<BloombergLP::bmqa::Event,BloombergLP::bmqa::MockSession::Job>>"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `allocator` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 1424,
        "column": 1,
        "procedure": "BloombergLP::bslalg::DequePrimitives<BloombergLP::bdlb::Variant<BloombergLP::bmqa::Event,BloombergLP::bmqa::MockSession::Job>,16>::insertAndMoveToBack<68453eea3e4d9cad>",
        "procedure_start_line": 1424,
        "file": "include/bslalg_dequeprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "include/bslalg_dequeprimitives.h",
                "line_number": 1424,
                "column_number": 1,
                "description": "Parameter allocator with type `bsl::allocator<BloombergLP::bdlb::Variant<BloombergLP::bmqa::Event,BloombergLP::bmqa::MockSession::Job>>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_dequeprimitives.h|insertAndMoveToBack<68453eea3e4d9cad>|PULSE_CONST_REFABLE",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "eb1f606bbf35d7659ed4b5c05145473a",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::allocator<BloombergLP::bdlb::Variant<BloombergLP::bmqa::Event,BloombergLP::bmqa::MockSession::Job>>"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `allocator` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 1826,
        "column": 1,
        "procedure": "BloombergLP::bslalg::DequePrimitives<BloombergLP::bdlb::Variant<BloombergLP::bmqa::Event,BloombergLP::bmqa::MockSession::Job>,16>::insertAndMoveToFront<68453eea3e4d9cad>",
        "procedure_start_line": 1826,
        "file": "include/bslalg_dequeprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "include/bslalg_dequeprimitives.h",
                "line_number": 1826,
                "column_number": 1,
                "description": "Parameter allocator with type `bsl::allocator<BloombergLP::bdlb::Variant<BloombergLP::bmqa::Event,BloombergLP::bmqa::MockSession::Job>>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_dequeprimitives.h|insertAndMoveToFront<68453eea3e4d9cad>|PULSE_CONST_REFABLE",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "3dbb8b5753376a402efd8be34bb2a430",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::allocator<BloombergLP::bdlb::Variant<BloombergLP::bmqa::Event,BloombergLP::bmqa::MockSession::Job>>"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `first` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 1826,
        "column": 1,
        "procedure": "BloombergLP::bslalg::DequePrimitives<BloombergLP::bdlb::Variant<BloombergLP::bmqa::Event,BloombergLP::bmqa::MockSession::Job>,16>::insertAndMoveToFront<68453eea3e4d9cad>",
        "procedure_start_line": 1826,
        "file": "include/bslalg_dequeprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "include/bslalg_dequeprimitives.h",
                "line_number": 1826,
                "column_number": 1,
                "description": "Parameter first with type `BloombergLP::bslstl::RandomAccessIterator<BloombergLP::bdlb::Variant<BloombergLP::bmqa::Event,BloombergLP::bmqa::MockSession::Job>,BloombergLP::bslalg::DequeIterator<BloombergLP::bdlb::Variant<BloombergLP::bmqa::Event,BloombergLP::bmqa::MockSession::Job>,16>,std::random_access_iterator_tag>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_dequeprimitives.h|insertAndMoveToFront<68453eea3e4d9cad>|PULSE_CONST_REFABLE",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "f5a342a139825c8363704007f726e548",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "BloombergLP::bslstl::RandomAccessIterator<BloombergLP::bdlb::Variant<BloombergLP::bmqa::Event,BloombergLP::bmqa::MockSession::Job>,BloombergLP::bslalg::DequeIterator<BloombergLP::bdlb::Variant<BloombergLP::bmqa::Event,BloombergLP::bmqa::MockSession::Job>,16>,std::random_access_iterator_tag>"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "`allocator` is copied into field `d_allocator` but is not modified afterwards.",
        "suggestion": "Rather than copying into the field, move into it instead.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 3310,
        "column": 3,
        "procedure": "BloombergLP::bslalg::DequePrimitives_DequeElementGuard<BloombergLP::bdlb::Variant<BloombergLP::bmqa::Event,BloombergLP::bmqa::MockSession::Job>,16,bsl::allocator<BloombergLP::bdlb::Variant<BloombergLP::bmqa::Event,BloombergLP::bmqa::MockSession::Job>>>::DequePrimitives_DequeElementGuard",
        "procedure_start_line": 3303,
        "file": "include/bslalg_dequeprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "include/bslalg_dequeprimitives.h",
                "line_number": 1845,
                "column_number": 18,
                "description": "first instantiated at"
            },
            {
                "level": 0,
                "filename": "include/bslalg_dequeprimitives.h",
                "line_number": 3310,
                "column_number": 3,
                "description": "copied here (with type `bsl::allocator<BloombergLP::bdlb::Variant<BloombergLP::bmqa::Event,BloombergLP::bmqa::MockSession::Job>>&`)"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "bslalg_dequeprimitives.h|DequePrimitives_DequeElementGuard|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "414d4c472dbf42c1d0a9f2781aadcc99",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "bsl::allocator<BloombergLP::bdlb::Variant<BloombergLP::bmqa::Event,BloombergLP::bmqa::MockSession::Job>>&"
        },
        "autofix": {
            "original": "d_allocator(allocator)",
            "replacement": "d_allocator(std::move(allocator))"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "`BloombergLP::bslmf::MovableRefUtil::access().d_members` is copied into field `d_members` but is not modified afterwards.",
        "suggestion": "Rather than copying into the field, move into it instead.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 1905,
        "column": 3,
        "procedure": "BloombergLP::bslma::ManagedPtr<BloombergLP::bmqeval::SimpleEvaluator::Expression>::ManagedPtr",
        "procedure_start_line": 1902,
        "file": "include/bslma_managedptr.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "src/groups/bmq/bmqeval/bmqeval_simpleevaluator.h",
                "line_number": 300,
                "column_number": 23,
                "description": "first instantiated at"
            },
            {
                "level": 0,
                "filename": "include/bslma_managedptr.h",
                "line_number": 1905,
                "column_number": 3,
                "description": "copied here (with type `BloombergLP::bslma::ManagedPtr_Members&`)"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "bslma_managedptr.h|ManagedPtr|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "24b6e6bf9b580ad5f30bf9419892378e",
        "hash": "5e51b3aea6ac4a663271fc5bad1278a8",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "BloombergLP::bslma::ManagedPtr_Members&"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "`original->d_members` is copied into field `d_members` but is not modified afterwards.",
        "suggestion": "Rather than copying into the field, move into it instead.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 1919,
        "column": 7,
        "procedure": "BloombergLP::bslma::ManagedPtr<BloombergLP::mqbc::ClusterStateLedger>::ManagedPtr<e550c1002f6dbb03>",
        "procedure_start_line": 1912,
        "file": "include/bslma_managedptr.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "src/groups/mqb/mqbblp/mqbblp_clusterstatemanager.h",
                "line_number": 146,
                "column_number": 26,
                "description": "first instantiated at"
            },
            {
                "level": 0,
                "filename": "include/bslma_managedptr.h",
                "line_number": 1919,
                "column_number": 7,
                "description": "copied here (with type `BloombergLP::bslma::ManagedPtr_Members&`)"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "bslma_managedptr.h|ManagedPtr<e550c1002f6dbb03>|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "22c2906208bdf950095511854413b667",
        "hash": "d538f7128b87bd8ef2e3154ad46d8f8b",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "BloombergLP::bslma::ManagedPtr_Members&"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `first` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 2317,
        "column": 1,
        "procedure": "bsl::deque<BloombergLP::bdlb::Variant<BloombergLP::bmqa::Event,BloombergLP::bmqa::MockSession::Job>,bsl::allocator<BloombergLP::bdlb::Variant<BloombergLP::bmqa::Event,BloombergLP::bmqa::MockSession::Job>>>::privateInsertDispatch<6f859e207b128f9a>",
        "procedure_start_line": 2317,
        "file": "include/bslstl_deque.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "include/bslstl_deque.h",
                "line_number": 2317,
                "column_number": 1,
                "description": "Parameter first with type `BloombergLP::bslstl::RandomAccessIterator<BloombergLP::bdlb::Variant<BloombergLP::bmqa::Event,BloombergLP::bmqa::MockSession::Job>,BloombergLP::bslalg::DequeIterator<BloombergLP::bdlb::Variant<BloombergLP::bmqa::Event,BloombergLP::bmqa::MockSession::Job>,16>,std::random_access_iterator_tag>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslstl_deque.h|privateInsertDispatch<6f859e207b128f9a>|PULSE_CONST_REFABLE",
        "node_key": "1cd3bab9924290dfa55c036ec39be64f",
        "hash": "bc1701353fe981ce8bf9a557f4cc3e9f",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "BloombergLP::bslstl::RandomAccessIterator<BloombergLP::bdlb::Variant<BloombergLP::bmqa::Event,BloombergLP::bmqa::MockSession::Job>,BloombergLP::bslalg::DequeIterator<BloombergLP::bdlb::Variant<BloombergLP::bmqa::Event,BloombergLP::bmqa::MockSession::Job>,16>,std::random_access_iterator_tag>"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `last` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 2317,
        "column": 1,
        "procedure": "bsl::deque<BloombergLP::bdlb::Variant<BloombergLP::bmqa::Event,BloombergLP::bmqa::MockSession::Job>,bsl::allocator<BloombergLP::bdlb::Variant<BloombergLP::bmqa::Event,BloombergLP::bmqa::MockSession::Job>>>::privateInsertDispatch<6f859e207b128f9a>",
        "procedure_start_line": 2317,
        "file": "include/bslstl_deque.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "include/bslstl_deque.h",
                "line_number": 2317,
                "column_number": 1,
                "description": "Parameter last with type `BloombergLP::bslstl::RandomAccessIterator<BloombergLP::bdlb::Variant<BloombergLP::bmqa::Event,BloombergLP::bmqa::MockSession::Job>,BloombergLP::bslalg::DequeIterator<BloombergLP::bdlb::Variant<BloombergLP::bmqa::Event,BloombergLP::bmqa::MockSession::Job>,16>,std::random_access_iterator_tag>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslstl_deque.h|privateInsertDispatch<6f859e207b128f9a>|PULSE_CONST_REFABLE",
        "node_key": "1cd3bab9924290dfa55c036ec39be64f",
        "hash": "9c619366b80735e7a888ccf633170148",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "BloombergLP::bslstl::RandomAccessIterator<BloombergLP::bdlb::Variant<BloombergLP::bmqa::Event,BloombergLP::bmqa::MockSession::Job>,BloombergLP::bslalg::DequeIterator<BloombergLP::bdlb::Variant<BloombergLP::bmqa::Event,BloombergLP::bmqa::MockSession::Job>,16>,std::random_access_iterator_tag>"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `first` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 2340,
        "column": 29,
        "procedure": "bsl::deque<BloombergLP::bdlb::Variant<BloombergLP::bmqa::Event,BloombergLP::bmqa::MockSession::Job>,bsl::allocator<BloombergLP::bdlb::Variant<BloombergLP::bmqa::Event,BloombergLP::bmqa::MockSession::Job>>>::privateInsertDispatch<6f859e207b128f9a>",
        "procedure_start_line": 2317,
        "file": "include/bslstl_deque.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "src/groups/bmq/bmqa/bmqa_mocksession.h",
                "line_number": 1048,
                "column_number": 36,
                "description": "first instantiated at"
            },
            {
                "level": 0,
                "filename": "include/bslstl_deque.h",
                "line_number": 2340,
                "column_number": 29,
                "description": "copied here (with type `BloombergLP::bslstl::RandomAccessIterator<BloombergLP::bdlb::Variant<BloombergLP::bmqa::Event,BloombergLP::bmqa::MockSession::Job>,BloombergLP::bslalg::DequeIterator<BloombergLP::bdlb::Variant<BloombergLP::bmqa::Event,BloombergLP::bmqa::MockSession::Job>,16>,std::random_access_iterator_tag>&`)"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "bslstl_deque.h|privateInsertDispatch<6f859e207b128f9a>|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "1cd3bab9924290dfa55c036ec39be64f",
        "hash": "f08fb244db4f9739e4a77fc32ee0720a",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "BloombergLP::bslstl::RandomAccessIterator<BloombergLP::bdlb::Variant<BloombergLP::bmqa::Event,BloombergLP::bmqa::MockSession::Job>,BloombergLP::bslalg::DequeIterator<BloombergLP::bdlb::Variant<BloombergLP::bmqa::Event,BloombergLP::bmqa::MockSession::Job>,16>,std::random_access_iterator_tag>&"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `last` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 2340,
        "column": 36,
        "procedure": "bsl::deque<BloombergLP::bdlb::Variant<BloombergLP::bmqa::Event,BloombergLP::bmqa::MockSession::Job>,bsl::allocator<BloombergLP::bdlb::Variant<BloombergLP::bmqa::Event,BloombergLP::bmqa::MockSession::Job>>>::privateInsertDispatch<6f859e207b128f9a>",
        "procedure_start_line": 2317,
        "file": "include/bslstl_deque.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "src/groups/bmq/bmqa/bmqa_mocksession.h",
                "line_number": 1048,
                "column_number": 36,
                "description": "first instantiated at"
            },
            {
                "level": 0,
                "filename": "include/bslstl_deque.h",
                "line_number": 2340,
                "column_number": 36,
                "description": "copied here (with type `BloombergLP::bslstl::RandomAccessIterator<BloombergLP::bdlb::Variant<BloombergLP::bmqa::Event,BloombergLP::bmqa::MockSession::Job>,BloombergLP::bslalg::DequeIterator<BloombergLP::bdlb::Variant<BloombergLP::bmqa::Event,BloombergLP::bmqa::MockSession::Job>,16>,std::random_access_iterator_tag>&`)"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "bslstl_deque.h|privateInsertDispatch<6f859e207b128f9a>|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "1cd3bab9924290dfa55c036ec39be64f",
        "hash": "e15f7970348fb8790ad073cfa244efc9",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "BloombergLP::bslstl::RandomAccessIterator<BloombergLP::bdlb::Variant<BloombergLP::bmqa::Event,BloombergLP::bmqa::MockSession::Job>,BloombergLP::bslalg::DequeIterator<BloombergLP::bdlb::Variant<BloombergLP::bmqa::Event,BloombergLP::bmqa::MockSession::Job>,16>,std::random_access_iterator_tag>&"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `lhs` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 2092,
        "column": 1,
        "procedure": "bsl::operator==<139db2f176118ecb>",
        "procedure_start_line": 2092,
        "file": "include/bslstl_list.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "include/bslstl_list.h",
                "line_number": 2092,
                "column_number": 1,
                "description": "Parameter lhs with type `bsl::List_Iterator<bsl::shared_ptr<BloombergLP::mqbblp::Routers::Registry<beab128f65428274>::Item>>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslstl_list.h|bsl::operator==<139db2f176118ecb>|PULSE_CONST_REFABLE",
        "node_key": "c1d780a30890a1959aa2c529d08326c6",
        "hash": "5a2990306e7dd94807dab6906f605bba",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::List_Iterator<bsl::shared_ptr<BloombergLP::mqbblp::Routers::Registry<beab128f65428274>::Item>>"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `rhs` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 2092,
        "column": 1,
        "procedure": "bsl::operator==<139db2f176118ecb>",
        "procedure_start_line": 2092,
        "file": "include/bslstl_list.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "include/bslstl_list.h",
                "line_number": 2092,
                "column_number": 1,
                "description": "Parameter rhs with type `bsl::List_Iterator<bsl::shared_ptr<BloombergLP::mqbblp::Routers::Registry<beab128f65428274>::Item>>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslstl_list.h|bsl::operator==<139db2f176118ecb>|PULSE_CONST_REFABLE",
        "node_key": "c1d780a30890a1959aa2c529d08326c6",
        "hash": "5efa6da5420ce5fdce0be0e9cfad9c93",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::List_Iterator<bsl::shared_ptr<BloombergLP::mqbblp::Routers::Registry<beab128f65428274>::Item>>"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `lhs` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 2106,
        "column": 1,
        "procedure": "bsl::operator!=<139db2f176118ecb>",
        "procedure_start_line": 2106,
        "file": "include/bslstl_list.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "include/bslstl_list.h",
                "line_number": 2106,
                "column_number": 1,
                "description": "Parameter lhs with type `bsl::List_Iterator<bsl::shared_ptr<BloombergLP::mqbblp::Routers::Registry<beab128f65428274>::Item>>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslstl_list.h|bsl::operator!=<139db2f176118ecb>|PULSE_CONST_REFABLE",
        "node_key": "c1d780a30890a1959aa2c529d08326c6",
        "hash": "3b424b2bbe47ace53012fdd85077f335",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::List_Iterator<bsl::shared_ptr<BloombergLP::mqbblp::Routers::Registry<beab128f65428274>::Item>>"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `rhs` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 2106,
        "column": 1,
        "procedure": "bsl::operator!=<139db2f176118ecb>",
        "procedure_start_line": 2106,
        "file": "include/bslstl_list.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "include/bslstl_list.h",
                "line_number": 2106,
                "column_number": 1,
                "description": "Parameter rhs with type `bsl::List_Iterator<bsl::shared_ptr<BloombergLP::mqbblp::Routers::Registry<beab128f65428274>::Item>>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslstl_list.h|bsl::operator!=<139db2f176118ecb>|PULSE_CONST_REFABLE",
        "node_key": "c1d780a30890a1959aa2c529d08326c6",
        "hash": "e427cea7683139c37165c200599f9957",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::List_Iterator<bsl::shared_ptr<BloombergLP::mqbblp::Routers::Registry<beab128f65428274>::Item>>"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `lhs` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 2115,
        "column": 15,
        "procedure": "bsl::operator!=<139db2f176118ecb>",
        "procedure_start_line": 2106,
        "file": "include/bslstl_list.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "src/groups/mqb/mqbblp/mqbblp_routers.cpp",
                "line_number": 653,
                "column_number": 22,
                "description": "first instantiated at"
            },
            {
                "level": 0,
                "filename": "include/bslstl_list.h",
                "line_number": 2115,
                "column_number": 15,
                "description": "copied here (with type `bsl::List_Iterator<bsl::shared_ptr<BloombergLP::mqbblp::Routers::Registry<beab128f65428274>::Item>>&`)"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "bslstl_list.h|bsl::operator!=<139db2f176118ecb>|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "c1d780a30890a1959aa2c529d08326c6",
        "hash": "05fc98b0a17a277511cf0be7e9220da0",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "bsl::List_Iterator<bsl::shared_ptr<BloombergLP::mqbblp::Routers::Registry<beab128f65428274>::Item>>&"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `rhs` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 2115,
        "column": 22,
        "procedure": "bsl::operator!=<139db2f176118ecb>",
        "procedure_start_line": 2106,
        "file": "include/bslstl_list.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "src/groups/mqb/mqbblp/mqbblp_routers.cpp",
                "line_number": 653,
                "column_number": 22,
                "description": "first instantiated at"
            },
            {
                "level": 0,
                "filename": "include/bslstl_list.h",
                "line_number": 2115,
                "column_number": 22,
                "description": "copied here (with type `bsl::List_Iterator<bsl::shared_ptr<BloombergLP::mqbblp::Routers::Registry<beab128f65428274>::Item>>&`)"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "bslstl_list.h|bsl::operator!=<139db2f176118ecb>|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "c1d780a30890a1959aa2c529d08326c6",
        "hash": "eaabb13ad830686e2f00a55dd46e403f",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "bsl::List_Iterator<bsl::shared_ptr<BloombergLP::mqbblp::Routers::Registry<beab128f65428274>::Item>>&"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "`allocator` is copied into field `d_allocator` but is not modified afterwards.",
        "suggestion": "Rather than copying into the field, move into it instead.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 3352,
        "column": 3,
        "procedure": "bsl::optional<BloombergLP::bmqex::Future_Callback,1>::optional",
        "procedure_start_line": 3349,
        "file": "include/bslstl_optional.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "include/bdlb_nullablevalue.h",
                "line_number": 203,
                "column_number": 30,
                "description": "first instantiated at"
            },
            {
                "level": 0,
                "filename": "include/bslstl_optional.h",
                "line_number": 3352,
                "column_number": 3,
                "description": "copied here (with type `bsl::allocator<char>&`)"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "bslstl_optional.h|optional|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "00cbbf9712eb91abaf95f78f4259d370",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "bsl::allocator<char>&"
        },
        "autofix": {
            "original": "d_allocator(allocator)",
            "replacement": "d_allocator(std::move(allocator))"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "`allocator` is copied into field `d_allocator` but is not modified afterwards.",
        "suggestion": "Rather than copying into the field, move into it instead.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 3370,
        "column": 3,
        "procedure": "bsl::optional<BloombergLP::bmqp_ctrlmsg::SubQueueIdInfo,1>::optional",
        "procedure_start_line": 3366,
        "file": "include/bslstl_optional.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "include/bdlb_nullablevalue.h",
                "line_number": 203,
                "column_number": 30,
                "description": "first instantiated at"
            },
            {
                "level": 0,
                "filename": "include/bslstl_optional.h",
                "line_number": 3370,
                "column_number": 3,
                "description": "copied here (with type `bsl::allocator<char>&`)"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "bslstl_optional.h|optional|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "c1d780a30890a1959aa2c529d08326c6",
        "hash": "ac501d5ef02d0438def502e4c3ca05b6",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "bsl::allocator<char>&"
        },
        "autofix": {
            "original": "d_allocator(allocator)",
            "replacement": "d_allocator(std::move(allocator))"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "`allocator` is copied into field `d_allocator` but is not modified afterwards.",
        "suggestion": "Rather than copying into the field, move into it instead.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 3383,
        "column": 3,
        "procedure": "bsl::optional<BloombergLP::bmqp_ctrlmsg::SubQueueIdInfo,1>::optional",
        "procedure_start_line": 3378,
        "file": "include/bslstl_optional.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "include/bdlb_nullablevalue.h",
                "line_number": 203,
                "column_number": 30,
                "description": "first instantiated at"
            },
            {
                "level": 0,
                "filename": "include/bslstl_optional.h",
                "line_number": 3383,
                "column_number": 3,
                "description": "copied here (with type `bsl::allocator<char>&`)"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "bslstl_optional.h|optional|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "c1d780a30890a1959aa2c529d08326c6",
        "hash": "ac501d5ef02d0438def502e4c3ca05b6",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "bsl::allocator<char>&"
        },
        "autofix": {
            "original": "d_allocator(allocator)",
            "replacement": "d_allocator(std::move(allocator))"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "`allocator` is copied into field `d_allocator` but is not modified afterwards.",
        "suggestion": "Rather than copying into the field, move into it instead.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 3421,
        "column": 3,
        "procedure": "bsl::optional<BloombergLP::bdlf::Bind<BloombergLP::bslmf::Nil,BloombergLP::bmqu::WeakMemFnInstance<void>,BloombergLP::bdlf::Bind_BoundTuple1<bsl::shared_ptr<BloombergLP::bmqio::ResolvingChannelFactory_Channel>>>,1>::optional<d949038f02edca20>",
        "procedure_start_line": 3415,
        "file": "include/bslstl_optional.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "include/bdlb_nullablevalue.h",
                "line_number": 203,
                "column_number": 30,
                "description": "first instantiated at"
            },
            {
                "level": 0,
                "filename": "include/bslstl_optional.h",
                "line_number": 3421,
                "column_number": 3,
                "description": "copied here (with type `bsl::allocator<char>&`)"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "bslstl_optional.h|optional<d949038f02edca20>|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "9290d6114ddfa0857c72e088e32ec11a",
        "hash": "cd541be9426083dce97d52c7d6025247",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "bsl::allocator<char>&"
        },
        "autofix": {
            "original": "d_allocator(allocator)",
            "replacement": "d_allocator(std::move(allocator))"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "`allocator` is copied into field `d_allocator` but is not modified afterwards.",
        "suggestion": "Rather than copying into the field, move into it instead.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 3434,
        "column": 3,
        "procedure": "bsl::optional<BloombergLP::bdlf::Bind<BloombergLP::bslmf::Nil,void,BloombergLP::bdlf::Bind_BoundTuple2<BloombergLP::bmqp::RequestManager<BloombergLP::bmqp_ctrlmsg::ControlMessage,BloombergLP::bmqp_ctrlmsg::ControlMessage>*,int>>,1>::optional<143e7a73747ee3a9>",
        "procedure_start_line": 3428,
        "file": "include/bslstl_optional.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "include/bdlb_nullablevalue.h",
                "line_number": 203,
                "column_number": 30,
                "description": "first instantiated at"
            },
            {
                "level": 0,
                "filename": "include/bslstl_optional.h",
                "line_number": 3434,
                "column_number": 3,
                "description": "copied here (with type `bsl::allocator<char>&`)"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "bslstl_optional.h|optional<143e7a73747ee3a9>|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "9290d6114ddfa0857c72e088e32ec11a",
        "hash": "6592d161da1ca408399da44e4afb33ec",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "bsl::allocator<char>&"
        },
        "autofix": {
            "original": "d_allocator(allocator)",
            "replacement": "d_allocator(std::move(allocator))"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "`BloombergLP::bsls::Util::forward()` is copied into field `first` but is not modified afterwards.",
        "suggestion": "Rather than copying into the field, move into it instead.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 2115,
        "column": 3,
        "procedure": "bsl::Pair_First<BloombergLP::bmqc::OrderedHashMapWithHistory_Iterator<BloombergLP::bmqc::OrderedHashMapWithHistory<e12e38d4ad2bc727>::Value>>::Pair_First<ca0cbd72458349f3>",
        "procedure_start_line": 2106,
        "file": "include/bslstl_pair.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "include/bslstl_pair.h",
                "line_number": 1150,
                "column_number": 21,
                "description": "first instantiated at"
            },
            {
                "level": 0,
                "filename": "include/bslstl_pair.h",
                "line_number": 2115,
                "column_number": 3,
                "description": "copied here (with type `BloombergLP::bmqc::OrderedHashMapWithHistory_Iterator<BloombergLP::bmqc::OrderedHashMapWithHistory<e12e38d4ad2bc727>::Value>&`)"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "bslstl_pair.h|Pair_First<ca0cbd72458349f3>|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "24b6e6bf9b580ad5f30bf9419892378e",
        "hash": "fe2f2a3e11b1e05ada4cba2094e789da",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "BloombergLP::bmqc::OrderedHashMapWithHistory_Iterator<BloombergLP::bmqc::OrderedHashMapWithHistory<e12e38d4ad2bc727>::Value>&"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "`BloombergLP::bsls::Util::forward()` is copied into field `second` but is not modified afterwards.",
        "suggestion": "Rather than copying into the field, move into it instead.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 2466,
        "column": 3,
        "procedure": "bsl::Pair_Second<BloombergLP::bmqp::ProtocolUtil::QueueInfo<42313fc3c89bf62b>::iterator>::Pair_Second<cf698bd3c0d6597f>",
        "procedure_start_line": 2457,
        "file": "include/bslstl_pair.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "include/bslstl_pair.h",
                "line_number": 1150,
                "column_number": 44,
                "description": "first instantiated at"
            },
            {
                "level": 0,
                "filename": "include/bslstl_pair.h",
                "line_number": 2466,
                "column_number": 3,
                "description": "copied here (with type `BloombergLP::bmqp::ProtocolUtil::QueueInfo<42313fc3c89bf62b>::iterator&`)"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "bslstl_pair.h|Pair_Second<cf698bd3c0d6597f>|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "24b6e6bf9b580ad5f30bf9419892378e",
        "hash": "c03b780aad4654b8c97dd1644cf3d611",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "BloombergLP::bmqp::ProtocolUtil::QueueInfo<42313fc3c89bf62b>::iterator&"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "`BloombergLP::bsls::Util::forward()` is copied into field `second` but is not modified afterwards.",
        "suggestion": "Rather than copying into the field, move into it instead.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 2495,
        "column": 3,
        "procedure": "bsl::Pair_Second<bsl::List_Iterator<BloombergLP::ntsa::DistinguishedName::Component>>::Pair_Second<198192f25bc49d48>",
        "procedure_start_line": 2491,
        "file": "include/bslstl_pair.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "include/bslstl_pair.h",
                "line_number": 1150,
                "column_number": 44,
                "description": "first instantiated at"
            },
            {
                "level": 0,
                "filename": "include/bslstl_pair.h",
                "line_number": 2495,
                "column_number": 3,
                "description": "copied here (with type `bsl::List_Iterator<BloombergLP::ntsa::DistinguishedName::Component>&`)"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "bslstl_pair.h|Pair_Second<198192f25bc49d48>|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "24b6e6bf9b580ad5f30bf9419892378e",
        "hash": "b16537cf6a4502b302a3587f7a1fc679",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "bsl::List_Iterator<BloombergLP::ntsa::DistinguishedName::Component>&"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `rhs` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 5177,
        "column": 14,
        "procedure": "bsl::shared_ptr<BloombergLP::bmqeval::SimpleEvaluator::Expression>::operator=<edc45797c4c6b30b>",
        "procedure_start_line": 5170,
        "file": "include/bslstl_sharedptr.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "src/groups/bmq/bmqeval/bmqeval_simpleevaluator.h",
                "line_number": 489,
                "column_number": 33,
                "description": "first instantiated at"
            },
            {
                "level": 0,
                "filename": "include/bslstl_sharedptr.h",
                "line_number": 5177,
                "column_number": 14,
                "description": "copied here (with type `BloombergLP::bslma::ManagedPtr<BloombergLP::bmqeval::SimpleEvaluator::Expression>&`)"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "bslstl_sharedptr.h|operator=<edc45797c4c6b30b>|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "7d8c45ed01e55aba992fbb0ffb6aa875",
        "hash": "e8f5fff5b7c01257bbfaf352a1a454f3",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "BloombergLP::bslma::ManagedPtr<BloombergLP::bmqeval::SimpleEvaluator::Expression>&"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `first` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 1543,
        "column": 5,
        "procedure": "bsl::vector<bsl::function<_fn_>,bsl::allocator<bsl::function<_fn_>>>::insert<9e5d9da87957ad85>",
        "procedure_start_line": 1543,
        "file": "include/bslstl_vector.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "include/bslstl_vector.h",
                "line_number": 1543,
                "column_number": 5,
                "description": "Parameter first with type `bsl::List_Iterator<bsl::function<_fn_>>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslstl_vector.h|insert<9e5d9da87957ad85>|PULSE_CONST_REFABLE",
        "node_key": "7d8c45ed01e55aba992fbb0ffb6aa875",
        "hash": "6572dbeba6a6157f92467b2755681e78",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::List_Iterator<bsl::function<_fn_>>"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `last` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 1543,
        "column": 5,
        "procedure": "bsl::vector<bsl::function<_fn_>,bsl::allocator<bsl::function<_fn_>>>::insert<9e5d9da87957ad85>",
        "procedure_start_line": 1543,
        "file": "include/bslstl_vector.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "include/bslstl_vector.h",
                "line_number": 1543,
                "column_number": 5,
                "description": "Parameter last with type `bsl::List_Iterator<bsl::function<_fn_>>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslstl_vector.h|insert<9e5d9da87957ad85>|PULSE_CONST_REFABLE",
        "node_key": "7d8c45ed01e55aba992fbb0ffb6aa875",
        "hash": "556a0a1b0ce75864722c1ebb15f2542f",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::List_Iterator<bsl::function<_fn_>>"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `last` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 1582,
        "column": 30,
        "procedure": "bsl::vector<bsl::function<_fn_>,bsl::allocator<bsl::function<_fn_>>>::insert<9e5d9da87957ad85>",
        "procedure_start_line": 1543,
        "file": "include/bslstl_vector.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcs/ntcs_chronology.h",
                "line_number": 432,
                "column_number": 41,
                "description": "first instantiated at"
            },
            {
                "level": 0,
                "filename": "include/bslstl_vector.h",
                "line_number": 1582,
                "column_number": 30,
                "description": "copied here (with type `bsl::List_Iterator<bsl::function<_fn_>>&`)"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "bslstl_vector.h|insert<9e5d9da87957ad85>|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "7d8c45ed01e55aba992fbb0ffb6aa875",
        "hash": "bad9760cd71b17da73a4140d61c2898b",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "bsl::List_Iterator<bsl::function<_fn_>>&"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `first` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 2811,
        "column": 1,
        "procedure": "bsl::vector<bsl::function<_fn_>,bsl::allocator<bsl::function<_fn_>>>::privateInsertDispatch<9e5d9da87957ad85>",
        "procedure_start_line": 2811,
        "file": "include/bslstl_vector.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "include/bslstl_vector.h",
                "line_number": 2811,
                "column_number": 1,
                "description": "Parameter first with type `bsl::List_Iterator<bsl::function<_fn_>>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslstl_vector.h|privateInsertDispatch<9e5d9da87957ad85>|PULSE_CONST_REFABLE",
        "node_key": "768063f1bc5b3ff5c11085e1c72a33ac",
        "hash": "436a3e2c0d5e8689c06ac34f0e9cea59",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::List_Iterator<bsl::function<_fn_>>"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `last` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 2811,
        "column": 1,
        "procedure": "bsl::vector<bsl::function<_fn_>,bsl::allocator<bsl::function<_fn_>>>::privateInsertDispatch<9e5d9da87957ad85>",
        "procedure_start_line": 2811,
        "file": "include/bslstl_vector.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "include/bslstl_vector.h",
                "line_number": 2811,
                "column_number": 1,
                "description": "Parameter last with type `bsl::List_Iterator<bsl::function<_fn_>>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslstl_vector.h|privateInsertDispatch<9e5d9da87957ad85>|PULSE_CONST_REFABLE",
        "node_key": "768063f1bc5b3ff5c11085e1c72a33ac",
        "hash": "6d7ce73cc9a259d33f5272a9b337eb25",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::List_Iterator<bsl::function<_fn_>>"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `first` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 2823,
        "column": 35,
        "procedure": "bsl::vector<bsl::function<_fn_>,bsl::allocator<bsl::function<_fn_>>>::privateInsertDispatch<9e5d9da87957ad85>",
        "procedure_start_line": 2811,
        "file": "include/bslstl_vector.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcs/ntcs_chronology.h",
                "line_number": 432,
                "column_number": 41,
                "description": "first instantiated at"
            },
            {
                "level": 0,
                "filename": "include/bslstl_vector.h",
                "line_number": 2823,
                "column_number": 35,
                "description": "copied here (with type `bsl::List_Iterator<bsl::function<_fn_>>&`)"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "bslstl_vector.h|privateInsertDispatch<9e5d9da87957ad85>|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "768063f1bc5b3ff5c11085e1c72a33ac",
        "hash": "a14ad726f93afe3d4ab541db948fe7df",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "bsl::List_Iterator<bsl::function<_fn_>>&"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `last` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 2823,
        "column": 42,
        "procedure": "bsl::vector<bsl::function<_fn_>,bsl::allocator<bsl::function<_fn_>>>::privateInsertDispatch<9e5d9da87957ad85>",
        "procedure_start_line": 2811,
        "file": "include/bslstl_vector.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcs/ntcs_chronology.h",
                "line_number": 432,
                "column_number": 41,
                "description": "first instantiated at"
            },
            {
                "level": 0,
                "filename": "include/bslstl_vector.h",
                "line_number": 2823,
                "column_number": 42,
                "description": "copied here (with type `bsl::List_Iterator<bsl::function<_fn_>>&`)"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "bslstl_vector.h|privateInsertDispatch<9e5d9da87957ad85>|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "768063f1bc5b3ff5c11085e1c72a33ac",
        "hash": "321596bb25cfda69b7d4831eda72d6db",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "bsl::List_Iterator<bsl::function<_fn_>>&"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `first` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 2972,
        "column": 1,
        "procedure": "bsl::vector<bsl::function<_fn_>,bsl::allocator<bsl::function<_fn_>>>::privateInsert<9e5d9da87957ad85>",
        "procedure_start_line": 2972,
        "file": "include/bslstl_vector.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "include/bslstl_vector.h",
                "line_number": 2972,
                "column_number": 1,
                "description": "Parameter first with type `bsl::List_Iterator<bsl::function<_fn_>>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslstl_vector.h|privateInsert<9e5d9da87957ad85>|PULSE_CONST_REFABLE",
        "node_key": "68da8a5eef9dcddcf5253929e266b1f7",
        "hash": "c9ead75a9883b99cac63987b3a0e5981",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::List_Iterator<bsl::function<_fn_>>"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `last` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 2972,
        "column": 1,
        "procedure": "bsl::vector<bsl::function<_fn_>,bsl::allocator<bsl::function<_fn_>>>::privateInsert<9e5d9da87957ad85>",
        "procedure_start_line": 2972,
        "file": "include/bslstl_vector.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "include/bslstl_vector.h",
                "line_number": 2972,
                "column_number": 1,
                "description": "Parameter last with type `bsl::List_Iterator<bsl::function<_fn_>>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslstl_vector.h|privateInsert<9e5d9da87957ad85>|PULSE_CONST_REFABLE",
        "node_key": "68da8a5eef9dcddcf5253929e266b1f7",
        "hash": "d20efab54f5ef5f00e60cfe3ae224132",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::List_Iterator<bsl::function<_fn_>>"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `first` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 3008,
        "column": 51,
        "procedure": "bsl::vector<bsl::function<_fn_>,bsl::allocator<bsl::function<_fn_>>>::privateInsert<9e5d9da87957ad85>",
        "procedure_start_line": 2972,
        "file": "include/bslstl_vector.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcs/ntcs_chronology.h",
                "line_number": 432,
                "column_number": 41,
                "description": "first instantiated at"
            },
            {
                "level": 0,
                "filename": "include/bslstl_vector.h",
                "line_number": 3008,
                "column_number": 51,
                "description": "copied here (with type `bsl::List_Iterator<bsl::function<_fn_>>&`)"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "bslstl_vector.h|privateInsert<9e5d9da87957ad85>|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "68da8a5eef9dcddcf5253929e266b1f7",
        "hash": "9219739567b793a169b198b1d3e101e3",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "bsl::List_Iterator<bsl::function<_fn_>>&"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `last` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 3009,
        "column": 51,
        "procedure": "bsl::vector<bsl::function<_fn_>,bsl::allocator<bsl::function<_fn_>>>::privateInsert<9e5d9da87957ad85>",
        "procedure_start_line": 2972,
        "file": "include/bslstl_vector.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcs/ntcs_chronology.h",
                "line_number": 432,
                "column_number": 41,
                "description": "first instantiated at"
            },
            {
                "level": 0,
                "filename": "include/bslstl_vector.h",
                "line_number": 3009,
                "column_number": 51,
                "description": "copied here (with type `bsl::List_Iterator<bsl::function<_fn_>>&`)"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "bslstl_vector.h|privateInsert<9e5d9da87957ad85>|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "68da8a5eef9dcddcf5253929e266b1f7",
        "hash": "7a72d1c1c39b9a9845aec8a357b426b3",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "bsl::List_Iterator<bsl::function<_fn_>>&"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `first` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 3018,
        "column": 33,
        "procedure": "bsl::vector<bsl::function<_fn_>,bsl::allocator<bsl::function<_fn_>>>::privateInsert<9e5d9da87957ad85>",
        "procedure_start_line": 2972,
        "file": "include/bslstl_vector.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcs/ntcs_chronology.h",
                "line_number": 432,
                "column_number": 41,
                "description": "first instantiated at"
            },
            {
                "level": 0,
                "filename": "include/bslstl_vector.h",
                "line_number": 3018,
                "column_number": 33,
                "description": "copied here (with type `bsl::List_Iterator<bsl::function<_fn_>>&`)"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "bslstl_vector.h|privateInsert<9e5d9da87957ad85>|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "68da8a5eef9dcddcf5253929e266b1f7",
        "hash": "9219739567b793a169b198b1d3e101e3",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "bsl::List_Iterator<bsl::function<_fn_>>&"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `last` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 3019,
        "column": 33,
        "procedure": "bsl::vector<bsl::function<_fn_>,bsl::allocator<bsl::function<_fn_>>>::privateInsert<9e5d9da87957ad85>",
        "procedure_start_line": 2972,
        "file": "include/bslstl_vector.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcs/ntcs_chronology.h",
                "line_number": 432,
                "column_number": 41,
                "description": "first instantiated at"
            },
            {
                "level": 0,
                "filename": "include/bslstl_vector.h",
                "line_number": 3019,
                "column_number": 33,
                "description": "copied here (with type `bsl::List_Iterator<bsl::function<_fn_>>&`)"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "bslstl_vector.h|privateInsert<9e5d9da87957ad85>|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "68da8a5eef9dcddcf5253929e266b1f7",
        "hash": "7a72d1c1c39b9a9845aec8a357b426b3",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "bsl::List_Iterator<bsl::function<_fn_>>&"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `first` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 3281,
        "column": 1,
        "procedure": "bsl::vector<long long,bsl::allocator<long long>>::vector<bsl::List_Iterator<long_long>_>",
        "procedure_start_line": 3281,
        "file": "include/bslstl_vector.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "include/bslstl_vector.h",
                "line_number": 3281,
                "column_number": 1,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "include/bsls_platform.h",
                "line_number": 776,
                "column_number": -1,
                "description": "Parameter first with type `bsl::List_Iterator<long long>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslstl_vector.h|vector<bsl::List_Iterator<long_long>_>|PULSE_CONST_REFABLE",
        "node_key": "c1d780a30890a1959aa2c529d08326c6",
        "hash": "5e6a9d735241047a66d06a73fdf82e8d",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::List_Iterator<long long>"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `last` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 3281,
        "column": 1,
        "procedure": "bsl::vector<long long,bsl::allocator<long long>>::vector<bsl::List_Iterator<long_long>_>",
        "procedure_start_line": 3281,
        "file": "include/bslstl_vector.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "include/bslstl_vector.h",
                "line_number": 3281,
                "column_number": 1,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "include/bsls_platform.h",
                "line_number": 776,
                "column_number": -1,
                "description": "Parameter last with type `bsl::List_Iterator<long long>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslstl_vector.h|vector<bsl::List_Iterator<long_long>_>|PULSE_CONST_REFABLE",
        "node_key": "c1d780a30890a1959aa2c529d08326c6",
        "hash": "34d7540525b510c2aff5718e0d74bfc7",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::List_Iterator<long long>"
        }
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`__param_0.d_deleteRecord.d_recordIndex` is read without initialization during the call to `bsl::list::insert()`.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 527,
        "column": 9,
        "procedure": "BloombergLP::m_bmqstoragetool::SearchDetailResult::addMessageDetails",
        "procedure_start_line": 521,
        "file": "src/applications/bmqstoragetool/m_bmqstoragetool_searchresult.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "src/applications/bmqstoragetool/m_bmqstoragetool_searchresult.cpp",
                "line_number": 529,
                "column_number": 13,
                "description": "struct field address `d_deleteRecord.d_recordIndex` created"
            },
            {
                "level": 0,
                "filename": "src/applications/bmqstoragetool/m_bmqstoragetool_searchresult.cpp",
                "line_number": 527,
                "column_number": 9,
                "description": "when calling `bsl::list<BloombergLP::m_bmqstoragetool::MessageDetails,bsl::allocator<BloombergLP::m_bmqstoragetool::MessageDetails>>::insert` here"
            },
            {
                "level": 1,
                "filename": "include/bslstl_list.h",
                "line_number": 2989,
                "column_number": 1,
                "description": "parameter `value` of bsl::list<BloombergLP::m_bmqstoragetool::MessageDetails,bsl::allocator<BloombergLP::m_bmqstoragetool::MessageDetails>>::insert"
            },
            {
                "level": 1,
                "filename": "include/bslstl_list.h",
                "line_number": 2994,
                "column_number": 33,
                "description": "in call to `BloombergLP::bslmf::MovableRefUtil::move<bbba4d9ae72ba254>`"
            },
            {
                "level": 2,
                "filename": "include/bslmf_movableref.h",
                "line_number": 912,
                "column_number": 1,
                "description": "parameter `rvalue` of BloombergLP::bslmf::MovableRefUtil::move<bbba4d9ae72ba254>"
            },
            {
                "level": 2,
                "filename": "include/bslmf_movableref.h",
                "line_number": 916,
                "column_number": 5,
                "description": "returned"
            },
            {
                "level": 1,
                "filename": "include/bslstl_list.h",
                "line_number": 2994,
                "column_number": 33,
                "description": "return from call to `BloombergLP::bslmf::MovableRefUtil::move<bbba4d9ae72ba254>`"
            },
            {
                "level": 1,
                "filename": "include/bslstl_list.h",
                "line_number": 2994,
                "column_number": 12,
                "description": "when calling `bsl::list<BloombergLP::m_bmqstoragetool::MessageDetails,bsl::allocator<BloombergLP::m_bmqstoragetool::MessageDetails>>::emplace<1235db209d0ecbca>` here"
            },
            {
                "level": 2,
                "filename": "include/bslstl_list.h",
                "line_number": 2968,
                "column_number": 1,
                "description": "parameter `arguments` of bsl::list<BloombergLP::m_bmqstoragetool::MessageDetails,bsl::allocator<BloombergLP::m_bmqstoragetool::MessageDetails>>::emplace<1235db209d0ecbca>"
            },
            {
                "level": 2,
                "filename": "include/bslstl_list.h",
                "line_number": 2975,
                "column_number": 28,
                "description": "macro expanded here"
            },
            {
                "level": 2,
                "filename": "include/bsls_compilerfeatures.h",
                "line_number": 1913,
                "column_number": -1,
                "description": "in call to `BloombergLP::bsls::Util::forward<1235db209d0ecbca>`"
            },
            {
                "level": 3,
                "filename": "include/bsls_util.h",
                "line_number": 294,
                "column_number": 1,
                "description": "macro expanded here"
            },
            {
                "level": 3,
                "filename": "include/bsls_keyword.h",
                "line_number": 533,
                "column_number": -1,
                "description": "parameter `t` of BloombergLP::bsls::Util::forward<1235db209d0ecbca>"
            },
            {
                "level": 3,
                "filename": "include/bsls_util.h",
                "line_number": 298,
                "column_number": 5,
                "description": "returned"
            },
            {
                "level": 2,
                "filename": "include/bslstl_list.h",
                "line_number": 2975,
                "column_number": 28,
                "description": "macro expanded here"
            },
            {
                "level": 2,
                "filename": "include/bsls_compilerfeatures.h",
                "line_number": 1913,
                "column_number": -1,
                "description": "return from call to `BloombergLP::bsls::Util::forward<1235db209d0ecbca>`"
            },
            {
                "level": 2,
                "filename": "include/bslstl_list.h",
                "line_number": 2973,
                "column_number": 5,
                "description": "when calling `bsl::allocator_traits<bsl::allocator<bsl::List_Node<BloombergLP::m_bmqstoragetool::MessageDetails>>>::construct<54530a745d58f1a1>` here"
            },
            {
                "level": 3,
                "filename": "include/bslma_bslallocator.h",
                "line_number": 870,
                "column_number": 5,
                "description": "parameter `argument1` of bsl::allocator_traits<bsl::allocator<bsl::List_Node<BloombergLP::m_bmqstoragetool::MessageDetails>>>::construct<54530a745d58f1a1>"
            },
            {
                "level": 3,
                "filename": "include/bslma_bslallocator.h",
                "line_number": 876,
                "column_number": 21,
                "description": "macro expanded here"
            },
            {
                "level": 3,
                "filename": "include/bsls_compilerfeatures.h",
                "line_number": 1913,
                "column_number": -1,
                "description": "in call to `BloombergLP::bsls::Util::forward<1235db209d0ecbca>`"
            },
            {
                "level": 4,
                "filename": "include/bsls_util.h",
                "line_number": 294,
                "column_number": 1,
                "description": "macro expanded here"
            },
            {
                "level": 4,
                "filename": "include/bsls_keyword.h",
                "line_number": 533,
                "column_number": -1,
                "description": "parameter `t` of BloombergLP::bsls::Util::forward<1235db209d0ecbca>"
            },
            {
                "level": 4,
                "filename": "include/bsls_util.h",
                "line_number": 298,
                "column_number": 5,
                "description": "returned"
            },
            {
                "level": 3,
                "filename": "include/bslma_bslallocator.h",
                "line_number": 876,
                "column_number": 21,
                "description": "macro expanded here"
            },
            {
                "level": 3,
                "filename": "include/bsls_compilerfeatures.h",
                "line_number": 1913,
                "column_number": -1,
                "description": "return from call to `BloombergLP::bsls::Util::forward<1235db209d0ecbca>`"
            },
            {
                "level": 3,
                "filename": "include/bslma_bslallocator.h",
                "line_number": 875,
                "column_number": 9,
                "description": "when calling `bsl::allocator<bsl::List_Node<BloombergLP::m_bmqstoragetool::MessageDetails>>::construct<54530a745d58f1a1>` here"
            },
            {
                "level": 4,
                "filename": "include/bslma_bslallocator.h",
                "line_number": 1011,
                "column_number": 1,
                "description": "parameter `argument1` of bsl::allocator<bsl::List_Node<BloombergLP::m_bmqstoragetool::MessageDetails>>::construct<54530a745d58f1a1>"
            },
            {
                "level": 4,
                "filename": "include/bslma_bslallocator.h",
                "line_number": 1020,
                "column_number": 9,
                "description": "macro expanded here"
            },
            {
                "level": 4,
                "filename": "include/bsls_compilerfeatures.h",
                "line_number": 1913,
                "column_number": -1,
                "description": "in call to `BloombergLP::bsls::Util::forward<1235db209d0ecbca>`"
            },
            {
                "level": 5,
                "filename": "include/bsls_util.h",
                "line_number": 294,
                "column_number": 1,
                "description": "macro expanded here"
            },
            {
                "level": 5,
                "filename": "include/bsls_keyword.h",
                "line_number": 533,
                "column_number": -1,
                "description": "parameter `t` of BloombergLP::bsls::Util::forward<1235db209d0ecbca>"
            },
            {
                "level": 5,
                "filename": "include/bsls_util.h",
                "line_number": 298,
                "column_number": 5,
                "description": "returned"
            },
            {
                "level": 4,
                "filename": "include/bslma_bslallocator.h",
                "line_number": 1020,
                "column_number": 9,
                "description": "macro expanded here"
            },
            {
                "level": 4,
                "filename": "include/bsls_compilerfeatures.h",
                "line_number": 1913,
                "column_number": -1,
                "description": "return from call to `BloombergLP::bsls::Util::forward<1235db209d0ecbca>`"
            },
            {
                "level": 4,
                "filename": "include/bslma_bslallocator.h",
                "line_number": 1017,
                "column_number": 5,
                "description": "when calling `BloombergLP::bslma::ConstructionUtil::construct<e4dcf9cf1b842936>` here"
            },
            {
                "level": 5,
                "filename": "include/bslma_constructionutil.h",
                "line_number": 1210,
                "column_number": 1,
                "description": "parameter `argument1` of BloombergLP::bslma::ConstructionUtil::construct<e4dcf9cf1b842936>"
            },
            {
                "level": 5,
                "filename": "include/bslma_constructionutil.h",
                "line_number": 1223,
                "column_number": 20,
                "description": "macro expanded here"
            },
            {
                "level": 5,
                "filename": "include/bsls_compilerfeatures.h",
                "line_number": 1913,
                "column_number": -1,
                "description": "in call to `BloombergLP::bsls::Util::forward<1235db209d0ecbca>`"
            },
            {
                "level": 6,
                "filename": "include/bsls_util.h",
                "line_number": 294,
                "column_number": 1,
                "description": "macro expanded here"
            },
            {
                "level": 6,
                "filename": "include/bsls_keyword.h",
                "line_number": 533,
                "column_number": -1,
                "description": "parameter `t` of BloombergLP::bsls::Util::forward<1235db209d0ecbca>"
            },
            {
                "level": 6,
                "filename": "include/bsls_util.h",
                "line_number": 298,
                "column_number": 5,
                "description": "returned"
            },
            {
                "level": 5,
                "filename": "include/bslma_constructionutil.h",
                "line_number": 1223,
                "column_number": 20,
                "description": "macro expanded here"
            },
            {
                "level": 5,
                "filename": "include/bsls_compilerfeatures.h",
                "line_number": 1913,
                "column_number": -1,
                "description": "return from call to `BloombergLP::bsls::Util::forward<1235db209d0ecbca>`"
            },
            {
                "level": 5,
                "filename": "include/bslma_constructionutil.h",
                "line_number": 1220,
                "column_number": 5,
                "description": "when calling `BloombergLP::bslma::ConstructionUtil_Imp::construct<e4dcf9cf1b842936>` here"
            },
            {
                "level": 6,
                "filename": "include/bslma_constructionutil.h",
                "line_number": 1445,
                "column_number": 1,
                "description": "parameter `argument1` of BloombergLP::bslma::ConstructionUtil_Imp::construct<e4dcf9cf1b842936>"
            },
            {
                "level": 6,
                "filename": "include/bslma_constructionutil.h",
                "line_number": 1455,
                "column_number": 9,
                "description": "macro expanded here"
            },
            {
                "level": 6,
                "filename": "include/bsls_compilerfeatures.h",
                "line_number": 1913,
                "column_number": -1,
                "description": "in call to `BloombergLP::bsls::Util::forward<1235db209d0ecbca>`"
            },
            {
                "level": 7,
                "filename": "include/bsls_util.h",
                "line_number": 294,
                "column_number": 1,
                "description": "macro expanded here"
            },
            {
                "level": 7,
                "filename": "include/bsls_keyword.h",
                "line_number": 533,
                "column_number": -1,
                "description": "parameter `t` of BloombergLP::bsls::Util::forward<1235db209d0ecbca>"
            },
            {
                "level": 7,
                "filename": "include/bsls_util.h",
                "line_number": 298,
                "column_number": 5,
                "description": "returned"
            },
            {
                "level": 6,
                "filename": "include/bslma_constructionutil.h",
                "line_number": 1455,
                "column_number": 9,
                "description": "macro expanded here"
            },
            {
                "level": 6,
                "filename": "include/bsls_compilerfeatures.h",
                "line_number": 1913,
                "column_number": -1,
                "description": "return from call to `BloombergLP::bsls::Util::forward<1235db209d0ecbca>`"
            },
            {
                "level": 6,
                "filename": "include/bslma_constructionutil.h",
                "line_number": 1454,
                "column_number": 30,
                "description": "when calling `BloombergLP::m_bmqstoragetool::MessageDetails::MessageDetails` here"
            },
            {
                "level": 7,
                "filename": "src/applications/bmqstoragetool/m_bmqstoragetool_messagedetails.h",
                "line_number": 39,
                "column_number": 7,
                "description": "parameter `__param_0` of BloombergLP::m_bmqstoragetool::MessageDetails::MessageDetails"
            },
            {
                "level": 7,
                "filename": "src/applications/bmqstoragetool/m_bmqstoragetool_messagedetails.h",
                "line_number": 39,
                "column_number": 7,
                "description": "when calling `BloombergLP::m_bmqstoragetool::MessageDetails::RecordDetails<BloombergLP::mqbs::DeletionRecord>::RecordDetails` here"
            },
            {
                "level": 8,
                "filename": "src/applications/bmqstoragetool/m_bmqstoragetool_messagedetails.h",
                "line_number": 45,
                "column_number": 12,
                "description": "parameter `__param_0` of BloombergLP::m_bmqstoragetool::MessageDetails::RecordDetails<BloombergLP::mqbs::DeletionRecord>::RecordDetails"
            },
            {
                "level": 8,
                "filename": "src/applications/bmqstoragetool/m_bmqstoragetool_messagedetails.h",
                "line_number": 45,
                "column_number": 12,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 42,
        "bug_trace_max_depth": 8,
        "key": "m_bmqstoragetool_searchresult.cpp|addMessageDetails|PULSE_UNINITIALIZED_VALUE",
        "node_key": "90ae7ec95c85f2757b479c05aa8a0aa7",
        "hash": "f40980b26a40f2a4c22e614f2f40e54b",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "`eventHandler` is copied into field `d_eventHandler_mp` but is not modified afterwards.",
        "suggestion": "Rather than copying into the field, move into it instead.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 659,
        "column": 3,
        "procedure": "BloombergLP::bmqa::SessionImpl::SessionImpl",
        "procedure_start_line": 654,
        "file": "src/groups/bmq/bmqa/bmqa_session.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "src/groups/bmq/bmqa/bmqa_session.cpp",
                "line_number": 659,
                "column_number": 3,
                "description": "copied here (with type `BloombergLP::bslma::ManagedPtr<BloombergLP::bmqa::SessionEventHandler>&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bmqa_session.cpp|SessionImpl|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "33a2afe0f1403a3d30ef198dc1f0c3a4",
        "hash": "25f970a9784e8f7330ef77f459f4a735",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "BloombergLP::bslma::ManagedPtr<BloombergLP::bmqa::SessionEventHandler>&"
        },
        "autofix": {
            "original": "d_eventHandler_mp(eventHandler)",
            "replacement": "d_eventHandler_mp(std::move(eventHandler))"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `eventHandler` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 681,
        "column": 19,
        "procedure": "BloombergLP::bmqa::Session::Session",
        "procedure_start_line": 678,
        "file": "src/groups/bmq/bmqa/bmqa_session.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "src/groups/bmq/bmqa/bmqa_session.cpp",
                "line_number": 681,
                "column_number": 19,
                "description": "copied here (with type `BloombergLP::bslma::ManagedPtr<BloombergLP::bmqa::SessionEventHandler>&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bmqa_session.cpp|Session|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "f99067fbb9f7fd862e1b0d6b52f1a6e2",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "BloombergLP::bslma::ManagedPtr<BloombergLP::bmqa::SessionEventHandler>&"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `it` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 522,
        "column": 1,
        "procedure": "BloombergLP::bmqc::OrderedHashMapWithHistory<BloombergLP::bmqt::MessageGUID,BloombergLP::mqbs::FileBackedStorage::Item,BloombergLP::bslh::Hash<BloombergLP::bmqt::MessageGUIDHashAlgo>,bsl::pair<BloombergLP::bmqt::MessageGUID const ,BloombergLP::mqbs::FileBackedStorage::Item>>::erase",
        "procedure_start_line": 522,
        "file": "src/groups/bmq/bmqc/bmqc_orderedhashmapwithhistory.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "src/groups/bmq/bmqc/bmqc_orderedhashmapwithhistory.h",
                "line_number": 522,
                "column_number": 1,
                "description": "Parameter it with type `BloombergLP::bmqc::OrderedHashMapWithHistory_Iterator<BloombergLP::bmqc::OrderedHashMapWithHistory<ff354afed9c5a189>::Value>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bmqc_orderedhashmapwithhistory.h|erase|PULSE_CONST_REFABLE",
        "node_key": "c1d780a30890a1959aa2c529d08326c6",
        "hash": "b7b1a538048aedaf6f41b17be70fba88",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "BloombergLP::bmqc::OrderedHashMapWithHistory_Iterator<BloombergLP::bmqc::OrderedHashMapWithHistory<ff354afed9c5a189>::Value>"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `it` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 542,
        "column": 1,
        "procedure": "BloombergLP::bmqc::OrderedHashMapWithHistory<BloombergLP::bmqt::MessageGUID,BloombergLP::mqbs::FileBackedStorage::Item,BloombergLP::bslh::Hash<BloombergLP::bmqt::MessageGUIDHashAlgo>,bsl::pair<BloombergLP::bmqt::MessageGUID const ,BloombergLP::mqbs::FileBackedStorage::Item>>::erase",
        "procedure_start_line": 542,
        "file": "src/groups/bmq/bmqc/bmqc_orderedhashmapwithhistory.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "src/groups/bmq/bmqc/bmqc_orderedhashmapwithhistory.h",
                "line_number": 542,
                "column_number": 1,
                "description": "Parameter it with type `BloombergLP::bmqc::OrderedHashMapWithHistory_Iterator<BloombergLP::bmqc::OrderedHashMapWithHistory<ff354afed9c5a189>::Value>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bmqc_orderedhashmapwithhistory.h|erase|PULSE_CONST_REFABLE",
        "node_key": "c1d780a30890a1959aa2c529d08326c6",
        "hash": "b7b1a538048aedaf6f41b17be70fba88",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "BloombergLP::bmqc::OrderedHashMapWithHistory_Iterator<BloombergLP::bmqc::OrderedHashMapWithHistory<ff354afed9c5a189>::Value>"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "`left` is copied into field `d_left` but is not modified afterwards.",
        "suggestion": "Rather than copying into the field, move into it instead.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 800,
        "column": 3,
        "procedure": "BloombergLP::bmqeval::SimpleEvaluator::Comparison<Opaque>::Comparison",
        "procedure_start_line": 798,
        "file": "src/groups/bmq/bmqeval/bmqeval_simpleevaluator.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "src/groups/bmq/bmqeval/bmqeval_simpleevaluator.h",
                "line_number": 1084,
                "column_number": 30,
                "description": "first instantiated at"
            },
            {
                "level": 0,
                "filename": "src/groups/bmq/bmqeval/bmqeval_simpleevaluator.h",
                "line_number": 800,
                "column_number": 3,
                "description": "copied here (with type `BloombergLP::bslma::ManagedPtr<BloombergLP::bmqeval::SimpleEvaluator::Expression>&`)"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "bmqeval_simpleevaluator.h|Comparison|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "a988a45a5a84526a1bea075ed74e51b8",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "BloombergLP::bslma::ManagedPtr<BloombergLP::bmqeval::SimpleEvaluator::Expression>&"
        },
        "autofix": {
            "original": "d_left(left)",
            "replacement": "d_left(std::move(left))"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "`right` is copied into field `d_right` but is not modified afterwards.",
        "suggestion": "Rather than copying into the field, move into it instead.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 801,
        "column": 3,
        "procedure": "BloombergLP::bmqeval::SimpleEvaluator::Comparison<Opaque>::Comparison",
        "procedure_start_line": 798,
        "file": "src/groups/bmq/bmqeval/bmqeval_simpleevaluator.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "src/groups/bmq/bmqeval/bmqeval_simpleevaluator.h",
                "line_number": 1084,
                "column_number": 30,
                "description": "first instantiated at"
            },
            {
                "level": 0,
                "filename": "src/groups/bmq/bmqeval/bmqeval_simpleevaluator.h",
                "line_number": 801,
                "column_number": 3,
                "description": "copied here (with type `BloombergLP::bslma::ManagedPtr<BloombergLP::bmqeval::SimpleEvaluator::Expression>&`)"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "bmqeval_simpleevaluator.h|Comparison|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "0e88bf77c485210c79809b353fb624b2",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "BloombergLP::bslma::ManagedPtr<BloombergLP::bmqeval::SimpleEvaluator::Expression>&"
        },
        "autofix": {
            "original": "d_right(right)",
            "replacement": "d_right(std::move(right))"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "`left` is copied into field `d_left` but is not modified afterwards.",
        "suggestion": "Rather than copying into the field, move into it instead.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 868,
        "column": 3,
        "procedure": "BloombergLP::bmqeval::SimpleEvaluator::Or::Or",
        "procedure_start_line": 867,
        "file": "src/groups/bmq/bmqeval/bmqeval_simpleevaluator.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "src/groups/bmq/bmqeval/bmqeval_simpleevaluator.h",
                "line_number": 868,
                "column_number": 3,
                "description": "copied here (with type `BloombergLP::bslma::ManagedPtr<BloombergLP::bmqeval::SimpleEvaluator::Expression>&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bmqeval_simpleevaluator.h|Or|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "0aa35a2ef56db7b4e3e80cc9e49cc562",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "BloombergLP::bslma::ManagedPtr<BloombergLP::bmqeval::SimpleEvaluator::Expression>&"
        },
        "autofix": {
            "original": "d_left(left)",
            "replacement": "d_left(std::move(left))"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "`right` is copied into field `d_right` but is not modified afterwards.",
        "suggestion": "Rather than copying into the field, move into it instead.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 869,
        "column": 3,
        "procedure": "BloombergLP::bmqeval::SimpleEvaluator::Or::Or",
        "procedure_start_line": 867,
        "file": "src/groups/bmq/bmqeval/bmqeval_simpleevaluator.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "src/groups/bmq/bmqeval/bmqeval_simpleevaluator.h",
                "line_number": 869,
                "column_number": 3,
                "description": "copied here (with type `BloombergLP::bslma::ManagedPtr<BloombergLP::bmqeval::SimpleEvaluator::Expression>&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bmqeval_simpleevaluator.h|Or|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "5cd650582597b0017292c07343d872ff",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "BloombergLP::bslma::ManagedPtr<BloombergLP::bmqeval::SimpleEvaluator::Expression>&"
        },
        "autofix": {
            "original": "d_right(right)",
            "replacement": "d_right(std::move(right))"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "`left` is copied into field `d_left` but is not modified afterwards.",
        "suggestion": "Rather than copying into the field, move into it instead.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 878,
        "column": 3,
        "procedure": "BloombergLP::bmqeval::SimpleEvaluator::And::And",
        "procedure_start_line": 877,
        "file": "src/groups/bmq/bmqeval/bmqeval_simpleevaluator.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "src/groups/bmq/bmqeval/bmqeval_simpleevaluator.h",
                "line_number": 878,
                "column_number": 3,
                "description": "copied here (with type `BloombergLP::bslma::ManagedPtr<BloombergLP::bmqeval::SimpleEvaluator::Expression>&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bmqeval_simpleevaluator.h|And|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "dee33090bf25698fe7ee3c36737c060f",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "BloombergLP::bslma::ManagedPtr<BloombergLP::bmqeval::SimpleEvaluator::Expression>&"
        },
        "autofix": {
            "original": "d_left(left)",
            "replacement": "d_left(std::move(left))"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "`right` is copied into field `d_right` but is not modified afterwards.",
        "suggestion": "Rather than copying into the field, move into it instead.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 879,
        "column": 3,
        "procedure": "BloombergLP::bmqeval::SimpleEvaluator::And::And",
        "procedure_start_line": 877,
        "file": "src/groups/bmq/bmqeval/bmqeval_simpleevaluator.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "src/groups/bmq/bmqeval/bmqeval_simpleevaluator.h",
                "line_number": 879,
                "column_number": 3,
                "description": "copied here (with type `BloombergLP::bslma::ManagedPtr<BloombergLP::bmqeval::SimpleEvaluator::Expression>&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bmqeval_simpleevaluator.h|And|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "f128d942f230d8de0d29ed978981d9b5",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "BloombergLP::bslma::ManagedPtr<BloombergLP::bmqeval::SimpleEvaluator::Expression>&"
        },
        "autofix": {
            "original": "d_right(right)",
            "replacement": "d_right(std::move(right))"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "`left` is copied into field `d_left` but is not modified afterwards.",
        "suggestion": "Rather than copying into the field, move into it instead.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 891,
        "column": 3,
        "procedure": "BloombergLP::bmqeval::SimpleEvaluator::NumBinaryOperation<Opaque>::NumBinaryOperation",
        "procedure_start_line": 888,
        "file": "src/groups/bmq/bmqeval/bmqeval_simpleevaluator.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "src/groups/bmq/bmqeval/bmqeval_simpleevaluator.h",
                "line_number": 1113,
                "column_number": 30,
                "description": "first instantiated at"
            },
            {
                "level": 0,
                "filename": "src/groups/bmq/bmqeval/bmqeval_simpleevaluator.h",
                "line_number": 891,
                "column_number": 3,
                "description": "copied here (with type `BloombergLP::bslma::ManagedPtr<BloombergLP::bmqeval::SimpleEvaluator::Expression>&`)"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "bmqeval_simpleevaluator.h|NumBinaryOperation|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "74a66209c1e81a31d1ee52644a56f384",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "BloombergLP::bslma::ManagedPtr<BloombergLP::bmqeval::SimpleEvaluator::Expression>&"
        },
        "autofix": {
            "original": "d_left(left)",
            "replacement": "d_left(std::move(left))"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "`right` is copied into field `d_right` but is not modified afterwards.",
        "suggestion": "Rather than copying into the field, move into it instead.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 892,
        "column": 3,
        "procedure": "BloombergLP::bmqeval::SimpleEvaluator::NumBinaryOperation<Opaque>::NumBinaryOperation",
        "procedure_start_line": 888,
        "file": "src/groups/bmq/bmqeval/bmqeval_simpleevaluator.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "src/groups/bmq/bmqeval/bmqeval_simpleevaluator.h",
                "line_number": 1113,
                "column_number": 30,
                "description": "first instantiated at"
            },
            {
                "level": 0,
                "filename": "src/groups/bmq/bmqeval/bmqeval_simpleevaluator.h",
                "line_number": 892,
                "column_number": 3,
                "description": "copied here (with type `BloombergLP::bslma::ManagedPtr<BloombergLP::bmqeval::SimpleEvaluator::Expression>&`)"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "bmqeval_simpleevaluator.h|NumBinaryOperation|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "fd6fa2262d9577d26dc4609ff69109e6",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "BloombergLP::bslma::ManagedPtr<BloombergLP::bmqeval::SimpleEvaluator::Expression>&"
        },
        "autofix": {
            "original": "d_right(right)",
            "replacement": "d_right(std::move(right))"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "`expression` is copied into field `d_expression` but is not modified afterwards.",
        "suggestion": "Rather than copying into the field, move into it instead.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 949,
        "column": 3,
        "procedure": "BloombergLP::bmqeval::SimpleEvaluator::UnaryMinus::UnaryMinus",
        "procedure_start_line": 948,
        "file": "src/groups/bmq/bmqeval/bmqeval_simpleevaluator.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "src/groups/bmq/bmqeval/bmqeval_simpleevaluator.h",
                "line_number": 949,
                "column_number": 3,
                "description": "copied here (with type `BloombergLP::bslma::ManagedPtr<BloombergLP::bmqeval::SimpleEvaluator::Expression>&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bmqeval_simpleevaluator.h|UnaryMinus|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "934b2faf54e17923a7b35d0a7519c618",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "BloombergLP::bslma::ManagedPtr<BloombergLP::bmqeval::SimpleEvaluator::Expression>&"
        },
        "autofix": {
            "original": "d_expression(expression)",
            "replacement": "d_expression(std::move(expression))"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "`expression` is copied into field `d_expression` but is not modified afterwards.",
        "suggestion": "Rather than copying into the field, move into it instead.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 958,
        "column": 3,
        "procedure": "BloombergLP::bmqeval::SimpleEvaluator::Not::Not",
        "procedure_start_line": 957,
        "file": "src/groups/bmq/bmqeval/bmqeval_simpleevaluator.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "src/groups/bmq/bmqeval/bmqeval_simpleevaluator.h",
                "line_number": 958,
                "column_number": 3,
                "description": "copied here (with type `BloombergLP::bslma::ManagedPtr<BloombergLP::bmqeval::SimpleEvaluator::Expression>&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bmqeval_simpleevaluator.h|Not|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "f38a3a77184e42df66dc09b331f99730",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "BloombergLP::bslma::ManagedPtr<BloombergLP::bmqeval::SimpleEvaluator::Expression>&"
        },
        "autofix": {
            "original": "d_expression(expression)",
            "replacement": "d_expression(std::move(expression))"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `a` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 1084,
        "column": 62,
        "procedure": "BloombergLP::bmqeval::CompilationContext::makeComparison<bsl::equal_to>",
        "procedure_start_line": 1028,
        "file": "src/groups/bmq/bmqeval/bmqeval_simpleevaluator.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "src/groups/bmq/bmqeval/bmqeval_simpleevaluator.h",
                "line_number": 1084,
                "column_number": 62,
                "description": "copied here (with type `BloombergLP::bslma::ManagedPtr<BloombergLP::bmqeval::SimpleEvaluator::Expression>&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bmqeval_simpleevaluator.h|makeComparison<bsl::equal_to>|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "39785fba2dc223c02d617885736a9e07",
        "hash": "839600e731849c1cfa3af93f8f677e2a",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "BloombergLP::bslma::ManagedPtr<BloombergLP::bmqeval::SimpleEvaluator::Expression>&"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `b` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 1084,
        "column": 65,
        "procedure": "BloombergLP::bmqeval::CompilationContext::makeComparison<bsl::equal_to>",
        "procedure_start_line": 1028,
        "file": "src/groups/bmq/bmqeval/bmqeval_simpleevaluator.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "src/groups/bmq/bmqeval/bmqeval_simpleevaluator.h",
                "line_number": 1084,
                "column_number": 65,
                "description": "copied here (with type `BloombergLP::bslma::ManagedPtr<BloombergLP::bmqeval::SimpleEvaluator::Expression>&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bmqeval_simpleevaluator.h|makeComparison<bsl::equal_to>|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "39785fba2dc223c02d617885736a9e07",
        "hash": "6b6a318599fdf3aa007712af1b2ccfe9",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "BloombergLP::bslma::ManagedPtr<BloombergLP::bmqeval::SimpleEvaluator::Expression>&"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `a` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 1099,
        "column": 51,
        "procedure": "BloombergLP::bmqeval::CompilationContext::makeBooleanBinaryExpression<414dc6b04962121c>",
        "procedure_start_line": 1089,
        "file": "src/groups/bmq/bmqeval/bmqeval_simpleevaluator.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "src/groups/bmq/bmqeval/bmqeval_simpleevaluator.h",
                "line_number": 1099,
                "column_number": 51,
                "description": "copied here (with type `BloombergLP::bslma::ManagedPtr<BloombergLP::bmqeval::SimpleEvaluator::Expression>&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bmqeval_simpleevaluator.h|makeBooleanBinaryExpression<414dc6b04962121c>|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "ed1608a421d78d56dd72eb70af7f1aee",
        "hash": "db2ad82df7cc8a4fee39185fcd2588cc",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "BloombergLP::bslma::ManagedPtr<BloombergLP::bmqeval::SimpleEvaluator::Expression>&"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `b` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 1099,
        "column": 54,
        "procedure": "BloombergLP::bmqeval::CompilationContext::makeBooleanBinaryExpression<414dc6b04962121c>",
        "procedure_start_line": 1089,
        "file": "src/groups/bmq/bmqeval/bmqeval_simpleevaluator.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "src/groups/bmq/bmqeval/bmqeval_simpleevaluator.h",
                "line_number": 1099,
                "column_number": 54,
                "description": "copied here (with type `BloombergLP::bslma::ManagedPtr<BloombergLP::bmqeval::SimpleEvaluator::Expression>&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bmqeval_simpleevaluator.h|makeBooleanBinaryExpression<414dc6b04962121c>|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "ed1608a421d78d56dd72eb70af7f1aee",
        "hash": "a00d63fec370ed3a911718745ae8d006",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "BloombergLP::bslma::ManagedPtr<BloombergLP::bmqeval::SimpleEvaluator::Expression>&"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `a` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 1113,
        "column": 70,
        "procedure": "BloombergLP::bmqeval::CompilationContext::makeNumBinaryExpression<std::divides>",
        "procedure_start_line": 1103,
        "file": "src/groups/bmq/bmqeval/bmqeval_simpleevaluator.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "src/groups/bmq/bmqeval/bmqeval_simpleevaluator.h",
                "line_number": 1113,
                "column_number": 70,
                "description": "copied here (with type `BloombergLP::bslma::ManagedPtr<BloombergLP::bmqeval::SimpleEvaluator::Expression>&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bmqeval_simpleevaluator.h|makeNumBinaryExpression<std::divides>|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "ed1608a421d78d56dd72eb70af7f1aee",
        "hash": "8ac4f02e748127e54b4be185096da877",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "BloombergLP::bslma::ManagedPtr<BloombergLP::bmqeval::SimpleEvaluator::Expression>&"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `b` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 1113,
        "column": 73,
        "procedure": "BloombergLP::bmqeval::CompilationContext::makeNumBinaryExpression<std::divides>",
        "procedure_start_line": 1103,
        "file": "src/groups/bmq/bmqeval/bmqeval_simpleevaluator.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "src/groups/bmq/bmqeval/bmqeval_simpleevaluator.h",
                "line_number": 1113,
                "column_number": 73,
                "description": "copied here (with type `BloombergLP::bslma::ManagedPtr<BloombergLP::bmqeval::SimpleEvaluator::Expression>&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bmqeval_simpleevaluator.h|makeNumBinaryExpression<std::divides>|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "ed1608a421d78d56dd72eb70af7f1aee",
        "hash": "471648363c2bf43e74d19808ff4892a8",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "BloombergLP::bslma::ManagedPtr<BloombergLP::bmqeval::SimpleEvaluator::Expression>&"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `expr` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 1118,
        "column": 1,
        "procedure": "BloombergLP::bmqeval::CompilationContext::makeUnaryExpression<5c672ee54264ce7f>",
        "procedure_start_line": 1118,
        "file": "src/groups/bmq/bmqeval/bmqeval_simpleevaluator.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "src/groups/bmq/bmqeval/bmqeval_simpleevaluator.h",
                "line_number": 1118,
                "column_number": 1,
                "description": "Parameter expr with type `bsl::basic_string<char,std::char_traits<char>,bsl::allocator<char>>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bmqeval_simpleevaluator.h|makeUnaryExpression<5c672ee54264ce7f>|PULSE_CONST_REFABLE",
        "node_key": "ed1608a421d78d56dd72eb70af7f1aee",
        "hash": "4273bcf9773f5ea59d19c9c37f771cf0",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::basic_string<char,std::char_traits<char>,bsl::allocator<char>>"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `expr` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 1127,
        "column": 51,
        "procedure": "BloombergLP::bmqeval::CompilationContext::makeUnaryExpression<978e32623c2e1bf>",
        "procedure_start_line": 1118,
        "file": "src/groups/bmq/bmqeval/bmqeval_simpleevaluator.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "src/groups/bmq/bmqeval/bmqeval_simpleevaluator.h",
                "line_number": 1127,
                "column_number": 51,
                "description": "copied here (with type `BloombergLP::bslma::ManagedPtr<BloombergLP::bmqeval::SimpleEvaluator::Expression>&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bmqeval_simpleevaluator.h|makeUnaryExpression<978e32623c2e1bf>|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "ed1608a421d78d56dd72eb70af7f1aee",
        "hash": "aa127f2e6d5e358b2320f149a1a5666a",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "BloombergLP::bslma::ManagedPtr<BloombergLP::bmqeval::SimpleEvaluator::Expression>&"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_MOVABLE",
        "qualifier": "`policy` is copied into field `d_policy` but is not modified afterwards.",
        "suggestion": "Rather than copying into the field, move into it instead.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 336,
        "column": 3,
        "procedure": "BloombergLP::bmqex::BindUtil_BindWrapper<BloombergLP::bmqex::ExecutionPolicy<BloombergLP::bmqex::ExecutionProperty::OneWay,BloombergLP::bmqex::Executor>,BloombergLP::bdlf::Bind<BloombergLP::bslmf::Nil,void,BloombergLP::bdlf::Bind_BoundTuple2<BloombergLP::bmqp::RequestManager<BloombergLP::bmqp_ctrlmsg::ControlMessage,BloombergLP::bmqp_ctrlmsg::ControlMessage>*,int>>>::BindUtil_BindWrapper<3e48d6c8d70cfe87>",
        "procedure_start_line": 332,
        "file": "src/groups/bmq/bmqex/bmqex_bindutil.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "src/groups/bmq/bmqp/bmqp_requestmanager.h",
                "line_number": 1387,
                "column_number": 9,
                "description": "first instantiated at"
            },
            {
                "level": 0,
                "filename": "src/groups/bmq/bmqex/bmqex_bindutil.h",
                "line_number": 336,
                "column_number": 3,
                "description": "copied here (with type `BloombergLP::bmqex::ExecutionPolicy<BloombergLP::bmqex::ExecutionProperty::OneWay,BloombergLP::bmqex::Executor>&&`)"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "bmqex_bindutil.h|BindUtil_BindWrapper<3e48d6c8d70cfe87>|PULSE_UNNECESSARY_COPY_MOVABLE",
        "node_key": "24b6e6bf9b580ad5f30bf9419892378e",
        "hash": "41f57b7b105e16108c07325bdbed71db",
        "bug_type_hum": "Unnecessary Copy Movable",
        "extras": {
            "copy_type": "BloombergLP::bmqex::ExecutionPolicy<BloombergLP::bmqex::ExecutionProperty::OneWay,BloombergLP::bmqex::Executor>&&"
        },
        "autofix": {
            "original": "d_policy(policy)",
            "replacement": "d_policy(std::move(policy))"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `executor` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 514,
        "column": 1,
        "procedure": "BloombergLP::bmqex::ExecutionPolicy<BloombergLP::bmqex::ExecutionProperty::OneWay,BloombergLP::bmqex::SystemExecutor>::useExecutor<BloombergLP::bmqex::Executor>",
        "procedure_start_line": 514,
        "file": "src/groups/bmq/bmqex/bmqex_executionpolicy.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "src/groups/bmq/bmqex/bmqex_executionpolicy.h",
                "line_number": 514,
                "column_number": 1,
                "description": "Parameter executor with type `BloombergLP::bmqex::Executor`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bmqex_executionpolicy.h|useExecutor<BloombergLP::bmqex::Executor>|PULSE_CONST_REFABLE",
        "node_key": "c1d780a30890a1959aa2c529d08326c6",
        "hash": "a8a3e533b398a18abfb34a58b487fe25",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "BloombergLP::bmqex::Executor"
        }
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`value` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 252,
        "column": 21,
        "procedure": "BloombergLP::bmqp::MessageProperties::streamInPropertyValue",
        "procedure_start_line": 231,
        "file": "src/groups/bmq/bmqp/bmqp_messageproperties.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "src/groups/bmq/bmqp/bmqp_messageproperties.cpp",
                "line_number": 231,
                "column_number": 1,
                "description": "variable `value` declared here"
            },
            {
                "level": 0,
                "filename": "src/groups/bmq/bmqp/bmqp_messageproperties.cpp",
                "line_number": 252,
                "column_number": 21,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "bmqp_messageproperties.cpp|streamInPropertyValue|PULSE_UNINITIALIZED_VALUE",
        "node_key": "5df8374f7c1552703d94bb15c1f58ce9",
        "hash": "1341b333952d4bdb863ae8a731df4eb8",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`value` is read without initialization during the call to `BloombergLP::bdlb::Variant7::operator=()`.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 262,
        "column": 9,
        "procedure": "BloombergLP::bmqp::MessageProperties::streamInPropertyValue",
        "procedure_start_line": 231,
        "file": "src/groups/bmq/bmqp/bmqp_messageproperties.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "src/groups/bmq/bmqp/bmqp_messageproperties.cpp",
                "line_number": 231,
                "column_number": 1,
                "description": "variable `value` declared here"
            },
            {
                "level": 0,
                "filename": "src/groups/bmq/bmqp/bmqp_messageproperties.cpp",
                "line_number": 262,
                "column_number": 9,
                "description": "when calling `BloombergLP::bdlb::Variant7<_Bool,char,short,int,long long,bsl::basic_string<char,std::char_traits<char>,bsl::allocator<char>>,bsl::vector<char,bsl::allocator<char>>>::operator=<char_&>` here"
            },
            {
                "level": 1,
                "filename": "include/bdlb_variant.h",
                "line_number": 9029,
                "column_number": 1,
                "description": "parameter `value` of BloombergLP::bdlb::Variant7<_Bool,char,short,int,long long,bsl::basic_string<char,std::char_traits<char>,bsl::allocator<char>>,bsl::vector<char,bsl::allocator<char>>>::operator=<char_&>"
            },
            {
                "level": 1,
                "filename": "include/bdlb_variant.h",
                "line_number": 9042,
                "column_number": 20,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "include/bsls_compilerfeatures.h",
                "line_number": 1913,
                "column_number": -1,
                "description": "in call to `BloombergLP::bsls::Util::forward<char_&>`"
            },
            {
                "level": 2,
                "filename": "thirdparty/bde/groups/bsl/bsls/bsls_util.h",
                "line_number": 294,
                "column_number": 1,
                "description": "macro expanded here"
            },
            {
                "level": 2,
                "filename": "thirdparty/bde/groups/bsl/bsls/bsls_keyword.h",
                "line_number": 533,
                "column_number": -1,
                "description": "parameter `t` of BloombergLP::bsls::Util::forward<char_&>"
            },
            {
                "level": 2,
                "filename": "thirdparty/bde/groups/bsl/bsls/bsls_util.h",
                "line_number": 298,
                "column_number": 5,
                "description": "returned"
            },
            {
                "level": 1,
                "filename": "include/bdlb_variant.h",
                "line_number": 9042,
                "column_number": 20,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "include/bsls_compilerfeatures.h",
                "line_number": 1913,
                "column_number": -1,
                "description": "return from call to `BloombergLP::bsls::Util::forward<char_&>`"
            },
            {
                "level": 1,
                "filename": "include/bdlb_variant.h",
                "line_number": 9042,
                "column_number": 5,
                "description": "when calling `BloombergLP::bdlb::VariantImp<BloombergLP::bslmf::TypeList<_Bool,char,short,int,long long,bsl::basic_string<char,std::char_traits<char>,bsl::allocator<char>>,bsl::vector<char,bsl::allocator<char>>>>::operator=<char_&>` here"
            },
            {
                "level": 2,
                "filename": "include/bdlb_variant.h",
                "line_number": 7251,
                "column_number": 1,
                "description": "parameter `value` of BloombergLP::bdlb::VariantImp<BloombergLP::bslmf::TypeList<_Bool,char,short,int,long long,bsl::basic_string<char,std::char_traits<char>,bsl::allocator<char>>,bsl::vector<char,bsl::allocator<char>>>>::operator=<char_&>"
            },
            {
                "level": 2,
                "filename": "include/bdlb_variant.h",
                "line_number": 7264,
                "column_number": 19,
                "description": "macro expanded here"
            },
            {
                "level": 2,
                "filename": "include/bsls_compilerfeatures.h",
                "line_number": 1913,
                "column_number": -1,
                "description": "in call to `BloombergLP::bsls::Util::forward<char_&>`"
            },
            {
                "level": 3,
                "filename": "thirdparty/bde/groups/bsl/bsls/bsls_util.h",
                "line_number": 294,
                "column_number": 1,
                "description": "macro expanded here"
            },
            {
                "level": 3,
                "filename": "thirdparty/bde/groups/bsl/bsls/bsls_keyword.h",
                "line_number": 533,
                "column_number": -1,
                "description": "parameter `t` of BloombergLP::bsls::Util::forward<char_&>"
            },
            {
                "level": 3,
                "filename": "thirdparty/bde/groups/bsl/bsls/bsls_util.h",
                "line_number": 298,
                "column_number": 5,
                "description": "returned"
            },
            {
                "level": 2,
                "filename": "include/bdlb_variant.h",
                "line_number": 7264,
                "column_number": 19,
                "description": "macro expanded here"
            },
            {
                "level": 2,
                "filename": "include/bsls_compilerfeatures.h",
                "line_number": 1913,
                "column_number": -1,
                "description": "return from call to `BloombergLP::bsls::Util::forward<char_&>`"
            },
            {
                "level": 2,
                "filename": "include/bdlb_variant.h",
                "line_number": 7264,
                "column_number": 12,
                "description": "when calling `BloombergLP::bdlb::VariantImp<BloombergLP::bslmf::TypeList<_Bool,char,short,int,long long,bsl::basic_string<char,std::char_traits<char>,bsl::allocator<char>>,bsl::vector<char,bsl::allocator<char>>>>::assign<char_&>` here"
            },
            {
                "level": 3,
                "filename": "include/bdlb_variant.h",
                "line_number": 7417,
                "column_number": 1,
                "description": "parameter `value` of BloombergLP::bdlb::VariantImp<BloombergLP::bslmf::TypeList<_Bool,char,short,int,long long,bsl::basic_string<char,std::char_traits<char>,bsl::allocator<char>>,bsl::vector<char,bsl::allocator<char>>>>::assign<char_&>"
            },
            {
                "level": 3,
                "filename": "include/bdlb_variant.h",
                "line_number": 7430,
                "column_number": 37,
                "description": "macro expanded here"
            },
            {
                "level": 3,
                "filename": "include/bsls_compilerfeatures.h",
                "line_number": 1913,
                "column_number": -1,
                "description": "in call to `BloombergLP::bsls::Util::forward<char_&>`"
            },
            {
                "level": 4,
                "filename": "thirdparty/bde/groups/bsl/bsls/bsls_util.h",
                "line_number": 294,
                "column_number": 1,
                "description": "macro expanded here"
            },
            {
                "level": 4,
                "filename": "thirdparty/bde/groups/bsl/bsls/bsls_keyword.h",
                "line_number": 533,
                "column_number": -1,
                "description": "parameter `t` of BloombergLP::bsls::Util::forward<char_&>"
            },
            {
                "level": 4,
                "filename": "thirdparty/bde/groups/bsl/bsls/bsls_util.h",
                "line_number": 298,
                "column_number": 5,
                "description": "returned"
            },
            {
                "level": 3,
                "filename": "include/bdlb_variant.h",
                "line_number": 7430,
                "column_number": 37,
                "description": "macro expanded here"
            },
            {
                "level": 3,
                "filename": "include/bsls_compilerfeatures.h",
                "line_number": 1913,
                "column_number": -1,
                "description": "return from call to `BloombergLP::bsls::Util::forward<char_&>`"
            },
            {
                "level": 3,
                "filename": "include/bdlb_variant.h",
                "line_number": 7430,
                "column_number": 37,
                "description": "macro expanded here"
            },
            {
                "level": 3,
                "filename": "include/bsls_compilerfeatures.h",
                "line_number": 1913,
                "column_number": -1,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 20,
        "bug_trace_max_depth": 4,
        "key": "bmqp_messageproperties.cpp|streamInPropertyValue|PULSE_UNINITIALIZED_VALUE",
        "node_key": "61383b9aafa360604fcd6b164ae590f9",
        "hash": "d4228b57848c9f8dcc4127f72aabf244",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY",
        "qualifier": "copied variable `subQueue` is not modified after it is copied from `it.operator->().second` on line 1300.",
        "suggestion": "To avoid the copy, use reference `&`. If this copy was intentional, call `folly::copy` to make it explicit and hence suppress the warning.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 1300,
        "column": 18,
        "procedure": "BloombergLP::bmqp::ProtocolUtil::QueueInfo<BloombergLP::mqbblp::ClusterQueueHelper::SubQueueContext>::removeSubscriptions",
        "procedure_start_line": 1295,
        "file": "src/groups/bmq/bmqp/bmqp_protocolutil.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "src/groups/mqb/mqbblp/mqbblp_clusterqueuehelper.h",
                "line_number": 204,
                "column_number": 20,
                "description": "first instantiated at"
            },
            {
                "level": 0,
                "filename": "src/groups/bmq/bmqp/bmqp_protocolutil.h",
                "line_number": 1300,
                "column_number": 18,
                "description": "copied here (with type `BloombergLP::bmqp::ProtocolUtil::QueueInfo<ac577f5e91933665>::iterator&`)"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "bmqp_protocolutil.h|removeSubscriptions|PULSE_UNNECESSARY_COPY",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "f6d9ceb768afb304f7978ebb6858bd7d",
        "bug_type_hum": "Unnecessary Copy",
        "extras": {
            "copy_type": "BloombergLP::bmqp::ProtocolUtil::QueueInfo<ac577f5e91933665>::iterator&"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `userData` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 1287,
        "column": 20,
        "procedure": "BloombergLP::bmqst::StatContextConfiguration::userData",
        "procedure_start_line": 1284,
        "file": "src/groups/bmq/bmqst/bmqst_statcontext.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "src/groups/bmq/bmqst/bmqst_statcontext.h",
                "line_number": 1287,
                "column_number": 20,
                "description": "copied here (with type `BloombergLP::bslma::ManagedPtr<BloombergLP::bmqst::StatContextUserData>&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bmqst_statcontext.h|userData|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "7d8c45ed01e55aba992fbb0ffb6aa875",
        "hash": "98d8fcd6a8957317158c4e8fc541e47a",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "BloombergLP::bslma::ManagedPtr<BloombergLP::bmqst::StatContextUserData>&"
        }
    },
    {
        "bug_type": "INFINITE_LOOP",
        "qualifier": "Recurring state leading to infinite execution at line 36, column 5.",
        "severity": "ERROR",
        "category": "No_category",
        "line": 36,
        "column": 5,
        "procedure": "BloombergLP::bmqu::AtomicState::process",
        "procedure_start_line": 26,
        "file": "src/groups/bmq/bmqu/bmqu_atomicstate.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "src/groups/bmq/bmqu/bmqu_atomicstate.cpp",
                "line_number": 36,
                "column_number": 5,
                "description": "in loop"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bmqu_atomicstate.cpp|process|INFINITE_LOOP",
        "node_key": "c1d780a30890a1959aa2c529d08326c6",
        "hash": "15eafb3c076ed4b1344904b807223d70",
        "bug_type_hum": "Infinite Loop",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY",
        "qualifier": "copied variable `subQueueIdInfo` is not modified after it is copied from `context->d_handleParameters.subIdInfo()` on line 796.",
        "suggestion": "To avoid the copy, use reference `&`. If this copy was intentional, call `folly::copy` to make it explicit and hence suppress the warning.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 796,
        "column": 17,
        "procedure": "BloombergLP::mqbblp::ClusterQueueHelper::assignUpstreamSubqueueId",
        "procedure_start_line": 782,
        "file": "src/groups/mqb/mqbblp/mqbblp_clusterqueuehelper.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "src/groups/mqb/mqbblp/mqbblp_clusterqueuehelper.cpp",
                "line_number": 796,
                "column_number": 17,
                "description": "copied here (with type `BloombergLP::bdlb::NullableValue<BloombergLP::bmqp_ctrlmsg::SubQueueIdInfo>&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "mqbblp_clusterqueuehelper.cpp|assignUpstreamSubqueueId|PULSE_UNNECESSARY_COPY",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "1818c64b32e1510bcae51776dfd84977",
        "bug_type_hum": "Unnecessary Copy",
        "extras": {
            "copy_type": "BloombergLP::bdlb::NullableValue<BloombergLP::bmqp_ctrlmsg::SubQueueIdInfo>&"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `&itApp` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 681,
        "column": 33,
        "procedure": "BloombergLP::mqbblp::PushStream::removeApp",
        "procedure_start_line": 674,
        "file": "src/groups/mqb/mqbblp/mqbblp_pushstream.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "src/groups/mqb/mqbblp/mqbblp_pushstream.h",
                "line_number": 681,
                "column_number": 33,
                "description": "copied here (with type `BloombergLP::bslstl::HashTableIterator<bsl::pair<unsigned int const ,BloombergLP::mqbblp::PushStream::App>,long>&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "mqbblp_pushstream.h|removeApp|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "062af31f18c5343afc1f995a5c2b07b6",
        "hash": "e52e78142bcc3a62fad3dc5253a6b95b",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "BloombergLP::bslstl::HashTableIterator<bsl::pair<unsigned int const ,BloombergLP::mqbblp::PushStream::App>,long>&"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "`guid` is copied into field `d_guid` but is not modified afterwards.",
        "suggestion": "Rather than copying into the field, move into it instead.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 679,
        "column": 3,
        "procedure": "BloombergLP::mqbblp::QueueHandle::ConfirmFunctor::ConfirmFunctor",
        "procedure_start_line": 674,
        "file": "src/groups/mqb/mqbblp/mqbblp_queuehandle.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "src/groups/mqb/mqbblp/mqbblp_queuehandle.h",
                "line_number": 679,
                "column_number": 3,
                "description": "copied here (with type `BloombergLP::bmqt::MessageGUID&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "mqbblp_queuehandle.h|ConfirmFunctor|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "d94fb59f2fdf347747ac9250693b89dd",
        "hash": "1548dcaa879551542fd239ff4802c213",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "BloombergLP::bmqt::MessageGUID&"
        },
        "autofix": {
            "original": "d_guid(guid)",
            "replacement": "d_guid(std::move(guid))"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `app` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 2041,
        "column": 1,
        "procedure": "BloombergLP::mqbblp::RootQueueEngine::head",
        "procedure_start_line": 2041,
        "file": "src/groups/mqb/mqbblp/mqbblp_rootqueueengine.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "src/groups/mqb/mqbblp/mqbblp_rootqueueengine.cpp",
                "line_number": 2041,
                "column_number": 1,
                "description": "Parameter app with type `bsl::shared_ptr<BloombergLP::mqbblp::QueueEngineUtil_AppState> const `"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "mqbblp_rootqueueengine.cpp|head|PULSE_CONST_REFABLE",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "6055a9eeb681be02a97f3e9055a3040b",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::shared_ptr<BloombergLP::mqbblp::QueueEngineUtil_AppState> const "
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "`netCluster` is copied into field `d_netCluster_mp` but is not modified afterwards.",
        "suggestion": "Rather than copying into the field, move into it instead.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 197,
        "column": 3,
        "procedure": "BloombergLP::mqbc::ClusterMembership::ClusterMembership",
        "procedure_start_line": 194,
        "file": "src/groups/mqb/mqbc/mqbc_clustermembership.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "src/groups/mqb/mqbc/mqbc_clustermembership.h",
                "line_number": 197,
                "column_number": 3,
                "description": "copied here (with type `BloombergLP::bslma::ManagedPtr<BloombergLP::mqbnet::Cluster>&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "mqbc_clustermembership.h|ClusterMembership|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "33a2afe0f1403a3d30ef198dc1f0c3a4",
        "hash": "382895649a40dac2ecfae09625ecd9ef",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "BloombergLP::bslma::ManagedPtr<BloombergLP::mqbnet::Cluster>&"
        },
        "autofix": {
            "original": "d_netCluster_mp(netCluster)",
            "replacement": "d_netCluster_mp(std::move(netCluster))"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `pinfo` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 54,
        "column": 1,
        "procedure": "BloombergLP::mqbc::anonymous_namespace__huge_jvanegue_pulse-experiments_blazingmq_src_groups_mqb_mqbc_mqbc_storagemanager.cpp::isPrimaryActive",
        "procedure_start_line": 54,
        "file": "src/groups/mqb/mqbc/mqbc_storagemanager.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "src/groups/mqb/mqbc/mqbc_storagemanager.cpp",
                "line_number": 54,
                "column_number": 1,
                "description": "Parameter pinfo with type `BloombergLP::mqbi::StorageManager_PartitionInfo const `"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "mqbc_storagemanager.cpp|BloombergLP::mqbc::anonymous_namespace__huge_jvanegue_pulse-experiments_blazingmq_src_groups_mqb_mqbc_mqbc_storagemanager.cpp::isPrimaryActive|PULSE_CONST_REFABLE",
        "node_key": "c1d780a30890a1959aa2c529d08326c6",
        "hash": "dbeccfc4286fecc57596dbd4feccb74e",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "BloombergLP::mqbi::StorageManager_PartitionInfo const "
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_ASSIGNMENT",
        "qualifier": "`std::move()` is copy assigned into field `d_parent` but is not modified afterwards.",
        "suggestion": "Even though `std::move` is called, nothing is actually getting moved (e.g. the type doesn't have a move operation) so make sure the copy is expected.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 480,
        "column": 9,
        "procedure": "BloombergLP::mqbcmd::CapacityMeter::operator=",
        "procedure_start_line": 469,
        "file": "src/groups/mqb/mqbcmd/mqbcmd_messages.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "src/groups/mqb/mqbcmd/mqbcmd_messages.cpp",
                "line_number": 480,
                "column_number": 9,
                "description": "copy assigned here (with type `BloombergLP::bdlb::NullableAllocatedValue<BloombergLP::mqbcmd::CapacityMeter>&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "mqbcmd_messages.cpp|operator=|PULSE_UNNECESSARY_COPY_ASSIGNMENT",
        "node_key": "7d8c45ed01e55aba992fbb0ffb6aa875",
        "hash": "c3a6b1394bdb9af376a620cb4e3fd2c3",
        "bug_type_hum": "Unnecessary Copy Assignment",
        "extras": {
            "copy_type": "BloombergLP::bdlb::NullableAllocatedValue<BloombergLP::mqbcmd::CapacityMeter>&"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `&it` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 1606,
        "column": 25,
        "procedure": "BloombergLP::mqbnet::TCPSessionFactory::PortManager::onDeleteChannelContext",
        "procedure_start_line": 1601,
        "file": "src/groups/mqb/mqbnet/mqbnet_tcpsessionfactory.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "src/groups/mqb/mqbnet/mqbnet_tcpsessionfactory.cpp",
                "line_number": 1606,
                "column_number": 25,
                "description": "copied here (with type `BloombergLP::bslstl::HashTableIterator<bsl::pair<unsigned short const ,BloombergLP::mqbnet::TCPSessionFactory::PortManager::PortContext>,long>&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "mqbnet_tcpsessionfactory.cpp|onDeleteChannelContext|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "c2839890e587a35805af29db5064de84",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "BloombergLP::bslstl::HashTableIterator<bsl::pair<unsigned short const ,BloombergLP::mqbnet::TCPSessionFactory::PortManager::PortContext>,long>&"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "`BloombergLP::bdljsn::WriteOptions::setSpacesPerLevel().setStyle().setSortMembers()` is copied into field `d_opsCompact` but is not modified afterwards.",
        "suggestion": "Rather than copying into the field, move into it instead.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 234,
        "column": 3,
        "procedure": "BloombergLP::mqbstat::JsonPrinter::JsonPrinterImpl::JsonPrinterImpl",
        "procedure_start_line": 231,
        "file": "src/groups/mqb/mqbstat/mqbstat_jsonprinter.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "src/groups/mqb/mqbstat/mqbstat_jsonprinter.cpp",
                "line_number": 234,
                "column_number": 3,
                "description": "copied here (with type `BloombergLP::bdljsn::WriteOptions&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "mqbstat_jsonprinter.cpp|JsonPrinterImpl|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "de0c250150b0057d8a9ebbaaee3c8b98",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "BloombergLP::bdljsn::WriteOptions&"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "`BloombergLP::bdljsn::WriteOptions::setSpacesPerLevel().setStyle().setSortMembers()` is copied into field `d_opsPretty` but is not modified afterwards.",
        "suggestion": "Rather than copying into the field, move into it instead.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 238,
        "column": 3,
        "procedure": "BloombergLP::mqbstat::JsonPrinter::JsonPrinterImpl::JsonPrinterImpl",
        "procedure_start_line": 231,
        "file": "src/groups/mqb/mqbstat/mqbstat_jsonprinter.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "src/groups/mqb/mqbstat/mqbstat_jsonprinter.cpp",
                "line_number": 238,
                "column_number": 3,
                "description": "copied here (with type `BloombergLP::bdljsn::WriteOptions&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "mqbstat_jsonprinter.cpp|JsonPrinterImpl|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "98b49f652b26dcc7beadcba821e22b72",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "BloombergLP::bdljsn::WriteOptions&"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY",
        "qualifier": "copied variable `statContextSp` is not modified after it is copied from `cit.operator->().second.d_statContext_sp` on line 918.",
        "suggestion": "To avoid the copy, use reference `&`. If this copy was intentional, call `folly::copy` to make it explicit and hence suppress the warning.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 918,
        "column": 39,
        "procedure": "BloombergLP::mqbstat::StatController::loadStatContexts",
        "procedure_start_line": 912,
        "file": "src/groups/mqb/mqbstat/mqbstat_statcontroller.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "src/groups/mqb/mqbstat/mqbstat_statcontroller.cpp",
                "line_number": 918,
                "column_number": 39,
                "description": "copied here (with type `bsl::shared_ptr<BloombergLP::bmqst::StatContext> const &`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "mqbstat_statcontroller.cpp|loadStatContexts|PULSE_UNNECESSARY_COPY",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "5e1b83df9628ca065c0da277e1be67f9",
        "bug_type_hum": "Unnecessary Copy",
        "extras": {
            "copy_type": "bsl::shared_ptr<BloombergLP::bmqst::StatContext> const &"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "`logEnhancedStorageInfoCb` is copied into field `d_logEnhancedStorageInfoCb` but is not modified afterwards.",
        "suggestion": "Rather than copying into the field, move into it instead.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 123,
        "column": 3,
        "procedure": "BloombergLP::mqbu::CapacityMeter::CapacityMeter",
        "procedure_start_line": 107,
        "file": "src/groups/mqb/mqbu/mqbu_capacitymeter.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "src/groups/mqb/mqbu/mqbu_capacitymeter.cpp",
                "line_number": 123,
                "column_number": 3,
                "description": "copied here (with type `bsl::function<_fn_>&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "mqbu_capacitymeter.cpp|CapacityMeter|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "0b169d83f8aff1db7ebfea3457f50b66",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "bsl::function<_fn_>&"
        },
        "autofix": {
            "original": "d_logEnhancedStorageInfoCb(logEnhancedStorageInfoCb)",
            "replacement": "d_logEnhancedStorageInfoCb(std::move(logEnhancedStorageInfoCb))"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "`logEnhancedStorageInfoCb` is copied into field `d_logEnhancedStorageInfoCb` but is not modified afterwards.",
        "suggestion": "Rather than copying into the field, move into it instead.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 145,
        "column": 3,
        "procedure": "BloombergLP::mqbu::CapacityMeter::CapacityMeter",
        "procedure_start_line": 128,
        "file": "src/groups/mqb/mqbu/mqbu_capacitymeter.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "src/groups/mqb/mqbu/mqbu_capacitymeter.cpp",
                "line_number": 145,
                "column_number": 3,
                "description": "copied here (with type `bsl::function<_fn_>&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "mqbu_capacitymeter.cpp|CapacityMeter|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "0b169d83f8aff1db7ebfea3457f50b66",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "bsl::function<_fn_>&"
        },
        "autofix": {
            "original": "d_logEnhancedStorageInfoCb(logEnhancedStorageInfoCb)",
            "replacement": "d_logEnhancedStorageInfoCb(std::move(logEnhancedStorageInfoCb))"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY",
        "qualifier": "copied variable `name` is not modified after it is copied from `options.operator[]().environmentVariableName()` on line 504.",
        "suggestion": "To avoid the copy, use reference `&`. If this copy was intentional, call `folly::copy` to make it explicit and hence suppress the warning.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 504,
        "column": 31,
        "procedure": "anonymous_namespace__huge_jvanegue_pulse-experiments_blazingmq_thirdparty_bde_groups_bal_balcl_balcl_commandline.cpp::u::validate",
        "procedure_start_line": 363,
        "file": "thirdparty/bde/groups/bal/balcl/balcl_commandline.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bal/balcl/balcl_commandline.cpp",
                "line_number": 504,
                "column_number": 31,
                "description": "copied here (with type `bsl::basic_string<char,std::char_traits<char>,bsl::allocator<char>> const &`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "balcl_commandline.cpp|anonymous_namespace__huge_jvanegue_pulse-experiments_blazingmq_thirdparty_bde_groups_bal_balcl_balcl_commandline.cpp::u::validate|PULSE_UNNECESSARY_COPY",
        "node_key": "a3aee70cdd866ec20ce3b01b9f7929e4",
        "hash": "0007b1894874ed5095da43b2f93e02ad",
        "bug_type_hum": "Unnecessary Copy",
        "extras": {
            "copy_type": "bsl::basic_string<char,std::char_traits<char>,bsl::allocator<char>> const &"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `allocator` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 928,
        "column": 1,
        "procedure": "BloombergLP::ball::anonymous_namespace__huge_jvanegue_pulse-experiments_blazingmq_thirdparty_bde_groups_bal_ball_ball_recordjsonformatter.cpp::TimestampFormatter::deleteSelf",
        "procedure_start_line": 928,
        "file": "thirdparty/bde/groups/bal/ball/ball_recordjsonformatter.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bal/ball/ball_recordjsonformatter.cpp",
                "line_number": 928,
                "column_number": 1,
                "description": "Parameter allocator with type `bsl::allocator<int> const `"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "ball_recordjsonformatter.cpp|deleteSelf|PULSE_CONST_REFABLE",
        "node_key": "ad8fc35725a4bc9e3acb67485246284f",
        "hash": "56ad663f817cc1703b29459132b6bf95",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::allocator<int> const "
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `allocator` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 1041,
        "column": 1,
        "procedure": "BloombergLP::ball::anonymous_namespace__huge_jvanegue_pulse-experiments_blazingmq_thirdparty_bde_groups_bal_ball_ball_recordjsonformatter.cpp::ThreadIdFormatter::deleteSelf",
        "procedure_start_line": 1041,
        "file": "thirdparty/bde/groups/bal/ball/ball_recordjsonformatter.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bal/ball/ball_recordjsonformatter.cpp",
                "line_number": 1041,
                "column_number": 1,
                "description": "Parameter allocator with type `bsl::allocator<int> const `"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "ball_recordjsonformatter.cpp|deleteSelf|PULSE_CONST_REFABLE",
        "node_key": "ad8fc35725a4bc9e3acb67485246284f",
        "hash": "14d1cd817351833035636aaa3e01c886",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::allocator<int> const "
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `allocator` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 1134,
        "column": 1,
        "procedure": "BloombergLP::ball::anonymous_namespace__huge_jvanegue_pulse-experiments_blazingmq_thirdparty_bde_groups_bal_ball_ball_recordjsonformatter.cpp::ProcessIdFormatter::deleteSelf",
        "procedure_start_line": 1134,
        "file": "thirdparty/bde/groups/bal/ball/ball_recordjsonformatter.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bal/ball/ball_recordjsonformatter.cpp",
                "line_number": 1134,
                "column_number": 1,
                "description": "Parameter allocator with type `bsl::allocator<int> const `"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "ball_recordjsonformatter.cpp|deleteSelf|PULSE_CONST_REFABLE",
        "node_key": "ad8fc35725a4bc9e3acb67485246284f",
        "hash": "8364303ef0248db4fe9a63e0f1d6e0e8",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::allocator<int> const "
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `allocator` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 1150,
        "column": 1,
        "procedure": "BloombergLP::ball::anonymous_namespace__huge_jvanegue_pulse-experiments_blazingmq_thirdparty_bde_groups_bal_ball_ball_recordjsonformatter.cpp::LineFormatter::deleteSelf",
        "procedure_start_line": 1150,
        "file": "thirdparty/bde/groups/bal/ball/ball_recordjsonformatter.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bal/ball/ball_recordjsonformatter.cpp",
                "line_number": 1150,
                "column_number": 1,
                "description": "Parameter allocator with type `bsl::allocator<int> const `"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "ball_recordjsonformatter.cpp|deleteSelf|PULSE_CONST_REFABLE",
        "node_key": "ad8fc35725a4bc9e3acb67485246284f",
        "hash": "25cebcae989ebd801590221e9db91e27",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::allocator<int> const "
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `allocator` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 1166,
        "column": 1,
        "procedure": "BloombergLP::ball::anonymous_namespace__huge_jvanegue_pulse-experiments_blazingmq_thirdparty_bde_groups_bal_ball_ball_recordjsonformatter.cpp::CategoryFormatter::deleteSelf",
        "procedure_start_line": 1166,
        "file": "thirdparty/bde/groups/bal/ball/ball_recordjsonformatter.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bal/ball/ball_recordjsonformatter.cpp",
                "line_number": 1166,
                "column_number": 1,
                "description": "Parameter allocator with type `bsl::allocator<int> const `"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "ball_recordjsonformatter.cpp|deleteSelf|PULSE_CONST_REFABLE",
        "node_key": "ad8fc35725a4bc9e3acb67485246284f",
        "hash": "2b2bcc92b181738ac0ce4fc672ef50d3",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::allocator<int> const "
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `allocator` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 1181,
        "column": 1,
        "procedure": "BloombergLP::ball::anonymous_namespace__huge_jvanegue_pulse-experiments_blazingmq_thirdparty_bde_groups_bal_ball_ball_recordjsonformatter.cpp::SeverityFormatter::deleteSelf",
        "procedure_start_line": 1181,
        "file": "thirdparty/bde/groups/bal/ball/ball_recordjsonformatter.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bal/ball/ball_recordjsonformatter.cpp",
                "line_number": 1181,
                "column_number": 1,
                "description": "Parameter allocator with type `bsl::allocator<int> const `"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "ball_recordjsonformatter.cpp|deleteSelf|PULSE_CONST_REFABLE",
        "node_key": "ad8fc35725a4bc9e3acb67485246284f",
        "hash": "b1b78fbe71ddd1e327bc775e67ac2065",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::allocator<int> const "
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `allocator` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 1200,
        "column": 1,
        "procedure": "BloombergLP::ball::anonymous_namespace__huge_jvanegue_pulse-experiments_blazingmq_thirdparty_bde_groups_bal_ball_ball_recordjsonformatter.cpp::MessageFormatter::deleteSelf",
        "procedure_start_line": 1200,
        "file": "thirdparty/bde/groups/bal/ball/ball_recordjsonformatter.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bal/ball/ball_recordjsonformatter.cpp",
                "line_number": 1200,
                "column_number": 1,
                "description": "Parameter allocator with type `bsl::allocator<int> const `"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "ball_recordjsonformatter.cpp|deleteSelf|PULSE_CONST_REFABLE",
        "node_key": "ad8fc35725a4bc9e3acb67485246284f",
        "hash": "0ba4d24896cf1b21ea83de13c00ccfc7",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::allocator<int> const "
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `allocator` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 1216,
        "column": 1,
        "procedure": "BloombergLP::ball::anonymous_namespace__huge_jvanegue_pulse-experiments_blazingmq_thirdparty_bde_groups_bal_ball_ball_recordjsonformatter.cpp::FileFormatter::deleteSelf",
        "procedure_start_line": 1216,
        "file": "thirdparty/bde/groups/bal/ball/ball_recordjsonformatter.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bal/ball/ball_recordjsonformatter.cpp",
                "line_number": 1216,
                "column_number": 1,
                "description": "Parameter allocator with type `bsl::allocator<int> const `"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "ball_recordjsonformatter.cpp|deleteSelf|PULSE_CONST_REFABLE",
        "node_key": "ad8fc35725a4bc9e3acb67485246284f",
        "hash": "11592f635345dd4aaccfe7e2d01a1c65",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::allocator<int> const "
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `allocator` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 1276,
        "column": 1,
        "procedure": "BloombergLP::ball::anonymous_namespace__huge_jvanegue_pulse-experiments_blazingmq_thirdparty_bde_groups_bal_ball_ball_recordjsonformatter.cpp::AttributeFormatter::deleteSelf",
        "procedure_start_line": 1276,
        "file": "thirdparty/bde/groups/bal/ball/ball_recordjsonformatter.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bal/ball/ball_recordjsonformatter.cpp",
                "line_number": 1276,
                "column_number": 1,
                "description": "Parameter allocator with type `bsl::allocator<int> const `"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "ball_recordjsonformatter.cpp|deleteSelf|PULSE_CONST_REFABLE",
        "node_key": "ad8fc35725a4bc9e3acb67485246284f",
        "hash": "56172e8f0a3996db159b47f7d7945924",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::allocator<int> const "
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `allocator` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 1347,
        "column": 1,
        "procedure": "BloombergLP::ball::anonymous_namespace__huge_jvanegue_pulse-experiments_blazingmq_thirdparty_bde_groups_bal_ball_ball_recordjsonformatter.cpp::AttributesFormatter::deleteSelf",
        "procedure_start_line": 1347,
        "file": "thirdparty/bde/groups/bal/ball/ball_recordjsonformatter.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bal/ball/ball_recordjsonformatter.cpp",
                "line_number": 1347,
                "column_number": 1,
                "description": "Parameter allocator with type `bsl::allocator<int> const `"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "ball_recordjsonformatter.cpp|deleteSelf|PULSE_CONST_REFABLE",
        "node_key": "ad8fc35725a4bc9e3acb67485246284f",
        "hash": "a58970a98f7ccc90716ef7450d1f6739",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::allocator<int> const "
        }
    },
    {
        "bug_type": "INFINITE_LOOP",
        "qualifier": "Recurring state leading to infinite execution at line 136, column 5.",
        "severity": "ERROR",
        "category": "No_category",
        "line": 136,
        "column": 5,
        "procedure": "BloombergLP::baltzo::DefaultZoneinfoCache::defaultZoneinfoDataLocation",
        "procedure_start_line": 118,
        "file": "thirdparty/bde/groups/bal/baltzo/baltzo_defaultzoneinfocache.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bal/baltzo/baltzo_defaultzoneinfocache.cpp",
                "line_number": 136,
                "column_number": 5,
                "description": "in loop"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "baltzo_defaultzoneinfocache.cpp|defaultZoneinfoDataLocation|INFINITE_LOOP",
        "node_key": "b0505af42fefa95ad84b38b49268fe07",
        "hash": "e5453aada07e0ef66075ab50925b6182",
        "bug_type_hum": "Infinite Loop",
        "extras": {}
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `parseElementCallback` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 257,
        "column": 1,
        "procedure": "BloombergLP::balxml::ListParser<bsl::vector<char,bsl::allocator<char>>>::ListParser",
        "procedure_start_line": 257,
        "file": "thirdparty/bde/groups/bal/balxml/balxml_listparser.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bal/balxml/balxml_listparser.h",
                "line_number": 257,
                "column_number": 1,
                "description": "Parameter parseElementCallback with type `bsl::function<_fn_>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "balxml_listparser.h|ListParser|PULSE_CONST_REFABLE",
        "node_key": "5bb34b30fda4606f9e6ca00a7855f241",
        "hash": "574e26b738791300c789332b0dcf2aeb",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::function<_fn_>"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_ASSIGNMENT",
        "qualifier": "`resolver` is copy assigned into field `d_resolver` but is not modified afterwards.",
        "suggestion": "Rather than copying into the field, move into it instead.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 523,
        "column": 5,
        "procedure": "BloombergLP::balxml::MiniReader::setResolver",
        "procedure_start_line": 521,
        "file": "thirdparty/bde/groups/bal/balxml/balxml_minireader.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bal/balxml/balxml_minireader.cpp",
                "line_number": 523,
                "column_number": 5,
                "description": "copy assigned here (with type `bsl::function<_fn_>&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "balxml_minireader.cpp|setResolver|PULSE_UNNECESSARY_COPY_ASSIGNMENT",
        "node_key": "ad8fc35725a4bc9e3acb67485246284f",
        "hash": "288365c34db5e81912a796c2668d3ca7",
        "bug_type_hum": "Unnecessary Copy Assignment",
        "extras": {
            "copy_type": "bsl::function<_fn_>&"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `resolver` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 164,
        "column": 1,
        "procedure": "BloombergLP::balxml::Utf8ReaderWrapper::setResolver",
        "procedure_start_line": 164,
        "file": "thirdparty/bde/groups/bal/balxml/balxml_utf8readerwrapper.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bal/balxml/balxml_utf8readerwrapper.cpp",
                "line_number": 164,
                "column_number": 1,
                "description": "Parameter resolver with type `bsl::function<_fn_>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "balxml_utf8readerwrapper.cpp|setResolver|PULSE_CONST_REFABLE",
        "node_key": "ecf3bd313f176f2fcd1b251c3288f49e",
        "hash": "8a63dfdb4e526401020a59c578120522",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::function<_fn_>"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `resolver` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 166,
        "column": 31,
        "procedure": "BloombergLP::balxml::Utf8ReaderWrapper::setResolver",
        "procedure_start_line": 164,
        "file": "thirdparty/bde/groups/bal/balxml/balxml_utf8readerwrapper.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bal/balxml/balxml_utf8readerwrapper.cpp",
                "line_number": 166,
                "column_number": 31,
                "description": "copied here (with type `bsl::function<_fn_>&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "balxml_utf8readerwrapper.cpp|setResolver|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "ecf3bd313f176f2fcd1b251c3288f49e",
        "hash": "d8e527a926af8abafe2ee1b5fa648b82",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "bsl::function<_fn_>&"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `&span` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 182,
        "column": 17,
        "procedure": "BloombergLP::bdlb::anonymous_namespace__huge_jvanegue_pulse-experiments_blazingmq_thirdparty_bde_groups_bdl_bdlb_bdlb_guidutil.cpp::guidToStringImpl<f6d4e8153f5a04dd>",
        "procedure_start_line": 173,
        "file": "thirdparty/bde/groups/bdl/bdlb/bdlb_guidutil.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bdl/bdlb/bdlb_guidutil.cpp",
                "line_number": 483,
                "column_number": 5,
                "description": "first instantiated at"
            },
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bdl/bdlb/bdlb_guidutil.cpp",
                "line_number": 182,
                "column_number": 17,
                "description": "copied here (with type `bsl::span<char,36>&`)"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "bdlb_guidutil.cpp|BloombergLP::bdlb::anonymous_namespace__huge_jvanegue_pulse-experiments_blazingmq_thirdparty_bde_groups_bdl_bdlb_bdlb_guidutil.cpp::guidToStringImpl<f6d4e8153f5a04dd>|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "7f6047caa0238b8f9bbcff23bf5c68f4",
        "hash": "1fb513962667493f876d17781a93713a",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "bsl::span<char,36>&"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `dst` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 2262,
        "column": 1,
        "procedure": "BloombergLP::bdlc::PackedIntArray<int>::insert",
        "procedure_start_line": 2262,
        "file": "thirdparty/bde/groups/bdl/bdlc/bdlc_packedintarray.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bdl/bdlc/bdlc_packedintarray.h",
                "line_number": 2262,
                "column_number": 1,
                "description": "Parameter dst with type `BloombergLP::bdlc::PackedIntArrayConstIterator<int>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bdlc_packedintarray.h|insert|PULSE_CONST_REFABLE",
        "node_key": "c1d780a30890a1959aa2c529d08326c6",
        "hash": "5959e7e54cd3624a34b4710dacf9789c",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "BloombergLP::bdlc::PackedIntArrayConstIterator<int>"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `dstFirst` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 2335,
        "column": 1,
        "procedure": "BloombergLP::bdlc::PackedIntArray<int>::remove",
        "procedure_start_line": 2335,
        "file": "thirdparty/bde/groups/bdl/bdlc/bdlc_packedintarray.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bdl/bdlc/bdlc_packedintarray.h",
                "line_number": 2335,
                "column_number": 1,
                "description": "Parameter dstFirst with type `BloombergLP::bdlc::PackedIntArrayConstIterator<int>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bdlc_packedintarray.h|remove|PULSE_CONST_REFABLE",
        "node_key": "c1d780a30890a1959aa2c529d08326c6",
        "hash": "344f796165d5da370c8df37d97fa3d11",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "BloombergLP::bdlc::PackedIntArrayConstIterator<int>"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `dstLast` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 2335,
        "column": 1,
        "procedure": "BloombergLP::bdlc::PackedIntArray<int>::remove",
        "procedure_start_line": 2335,
        "file": "thirdparty/bde/groups/bdl/bdlc/bdlc_packedintarray.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bdl/bdlc/bdlc_packedintarray.h",
                "line_number": 2335,
                "column_number": 1,
                "description": "Parameter dstLast with type `BloombergLP::bdlc::PackedIntArrayConstIterator<int>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bdlc_packedintarray.h|remove|PULSE_CONST_REFABLE",
        "node_key": "c1d780a30890a1959aa2c529d08326c6",
        "hash": "4f1e9317f4da636ac01a348f143d359b",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "BloombergLP::bdlc::PackedIntArrayConstIterator<int>"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `last` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 145,
        "column": 1,
        "procedure": "BloombergLP::bdlc::PackedIntArrayUtil::lowerBound<int>",
        "procedure_start_line": 145,
        "file": "thirdparty/bde/groups/bdl/bdlc/bdlc_packedintarrayutil.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bdl/bdlc/bdlc_packedintarrayutil.h",
                "line_number": 145,
                "column_number": 1,
                "description": "Parameter last with type `BloombergLP::bdlc::PackedIntArrayConstIterator<int>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bdlc_packedintarrayutil.h|lowerBound<int>|PULSE_CONST_REFABLE",
        "node_key": "c1d780a30890a1959aa2c529d08326c6",
        "hash": "d0e66932cc785666fc0cf6c791704284",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "BloombergLP::bdlc::PackedIntArrayConstIterator<int>"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `last` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 175,
        "column": 1,
        "procedure": "BloombergLP::bdlc::PackedIntArrayUtil::upperBound<int>",
        "procedure_start_line": 175,
        "file": "thirdparty/bde/groups/bdl/bdlc/bdlc_packedintarrayutil.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bdl/bdlc/bdlc_packedintarrayutil.h",
                "line_number": 175,
                "column_number": 1,
                "description": "Parameter last with type `BloombergLP::bdlc::PackedIntArrayConstIterator<int>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bdlc_packedintarrayutil.h|upperBound<int>|PULSE_CONST_REFABLE",
        "node_key": "c1d780a30890a1959aa2c529d08326c6",
        "hash": "fc51dcac4d614e5b624471b7f9a3099f",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "BloombergLP::bdlc::PackedIntArrayConstIterator<int>"
        }
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `node` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 1918,
        "column": 5,
        "procedure": "BloombergLP::bdlcc::SkipList::PairFactory::operator()",
        "procedure_start_line": 1913,
        "file": "thirdparty/bde/groups/bdl/bdlcc/bdlcc_skiplist.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bdl/bdlcc/bdlcc_skiplist.h",
                "line_number": 1913,
                "column_number": 1,
                "description": "parameter `node` of BloombergLP::bdlcc::SkipList::PairFactory::operator()"
            },
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bdl/bdlcc/bdlcc_skiplist.h",
                "line_number": 1918,
                "column_number": 5,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "bdlcc_skiplist.h|operator()|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "bffdbc4d6fbdfc9cd869008e74879d86",
        "hash": "3c99f5b66a98498bda1e34cf37f522cf",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "NULLPTR_DEREFERENCE",
        "qualifier": "null (null value originating from line 1981) is dereferenced.",
        "severity": "ERROR",
        "category": "Null pointer dereference",
        "line": 1981,
        "column": 5,
        "procedure": "BloombergLP::bdlcc::SkipList<long long,BloombergLP::bdlmt::EventScheduler::EventData>::offsetOfPtrs",
        "procedure_start_line": 1970,
        "file": "thirdparty/bde/groups/bdl/bdlcc/bdlcc_skiplist.h",
        "bug_trace": [
            {
                "level": 1,
                "filename": "thirdparty/bde/groups/bdl/bdlcc/bdlcc_skiplist.h",
                "line_number": 1981,
                "column_number": 5,
                "description": "is assigned to the null pointer"
            },
            {
                "level": 1,
                "filename": "thirdparty/bde/groups/bdl/bdlcc/bdlcc_skiplist.h",
                "line_number": 1981,
                "column_number": 5,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 1,
        "key": "bdlcc_skiplist.h|offsetOfPtrs|NULLPTR_DEREFERENCE",
        "node_key": "bffdbc4d6fbdfc9cd869008e74879d86",
        "hash": "49e2d72ee38def8b9810ea4df8f07b90",
        "bug_type_hum": "Null Dereference",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY",
        "qualifier": "copied variable `tempA` is not modified after it is copied from `a` on line 534.",
        "suggestion": "To avoid the copy, use reference `&`. If this copy was intentional, call `folly::copy` to make it explicit and hence suppress the warning.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 534,
        "column": 22,
        "procedure": "BloombergLP::bdld::swap",
        "procedure_start_line": 527,
        "file": "thirdparty/bde/groups/bdl/bdld/bdld_manageddatum.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bdl/bdld/bdld_manageddatum.h",
                "line_number": 534,
                "column_number": 22,
                "description": "copied here (with type `BloombergLP::bdld::ManagedDatum&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bdld_manageddatum.h|BloombergLP::bdld::swap|PULSE_UNNECESSARY_COPY",
        "node_key": "c1d780a30890a1959aa2c529d08326c6",
        "hash": "deeaa5b814df7ec53e80454104e9e765",
        "bug_type_hum": "Unnecessary Copy",
        "extras": {
            "copy_type": "BloombergLP::bdld::ManagedDatum&"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY",
        "qualifier": "copied variable `tempB` is not modified after it is copied from `b` on line 535.",
        "suggestion": "To avoid the copy, use reference `&`. If this copy was intentional, call `folly::copy` to make it explicit and hence suppress the warning.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 535,
        "column": 22,
        "procedure": "BloombergLP::bdld::swap",
        "procedure_start_line": 527,
        "file": "thirdparty/bde/groups/bdl/bdld/bdld_manageddatum.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bdl/bdld/bdld_manageddatum.h",
                "line_number": 535,
                "column_number": 22,
                "description": "copied here (with type `BloombergLP::bdld::ManagedDatum&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bdld_manageddatum.h|BloombergLP::bdld::swap|PULSE_UNNECESSARY_COPY",
        "node_key": "c1d780a30890a1959aa2c529d08326c6",
        "hash": "8acb634a890a5ecb80bc157827a3e770",
        "bug_type_hum": "Unnecessary Copy",
        "extras": {
            "copy_type": "BloombergLP::bdld::ManagedDatum&"
        }
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`flags` is read without initialization during the call to `__bid32_to_binary64()`.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 274,
        "column": 12,
        "procedure": "BloombergLP::bdldfp::DecimalConvertUtil_IntelDfp::decimalToDouble",
        "procedure_start_line": 269,
        "file": "thirdparty/bde/groups/bdl/bdldfp/bdldfp_decimalconvertutil_inteldfp.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bdl/bdldfp/bdldfp_decimalconvertutil_inteldfp.h",
                "line_number": 269,
                "column_number": 1,
                "description": "variable `flags` declared here"
            },
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bdl/bdldfp/bdldfp_decimalconvertutil_inteldfp.h",
                "line_number": 274,
                "column_number": 12,
                "description": "when calling `__bid32_to_binary64` here"
            },
            {
                "level": 1,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/src/inteldfp/bid_binarydecimal.c",
                "line_number": 144358,
                "column_number": 1,
                "description": "parameter `pfpsf` of __bid32_to_binary64"
            },
            {
                "level": 1,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/src/inteldfp/bid_binarydecimal.c",
                "line_number": 144431,
                "column_number": 5,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/src/inteldfp/bid_internal.h",
                "line_number": 810,
                "column_number": -1,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 4,
        "bug_trace_max_depth": 1,
        "key": "bdldfp_decimalconvertutil_inteldfp.h|decimalToDouble|PULSE_UNINITIALIZED_VALUE",
        "node_key": "4f6aba8272ee2dfee18d1163129ff0fb",
        "hash": "7152b7df302d4e95bdec86fea6b2dfd1",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`flags` is read without initialization during the call to `__bid64_to_binary64()`.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 282,
        "column": 12,
        "procedure": "BloombergLP::bdldfp::DecimalConvertUtil_IntelDfp::decimalToDouble",
        "procedure_start_line": 277,
        "file": "thirdparty/bde/groups/bdl/bdldfp/bdldfp_decimalconvertutil_inteldfp.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bdl/bdldfp/bdldfp_decimalconvertutil_inteldfp.h",
                "line_number": 277,
                "column_number": 1,
                "description": "variable `flags` declared here"
            },
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bdl/bdldfp/bdldfp_decimalconvertutil_inteldfp.h",
                "line_number": 282,
                "column_number": 12,
                "description": "when calling `__bid64_to_binary64` here"
            },
            {
                "level": 1,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/src/inteldfp/bid_binarydecimal.c",
                "line_number": 144451,
                "column_number": 1,
                "description": "parameter `pfpsf` of __bid64_to_binary64"
            },
            {
                "level": 1,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/src/inteldfp/bid_binarydecimal.c",
                "line_number": 144568,
                "column_number": 5,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/src/inteldfp/bid_internal.h",
                "line_number": 810,
                "column_number": -1,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 4,
        "bug_trace_max_depth": 1,
        "key": "bdldfp_decimalconvertutil_inteldfp.h|decimalToDouble|PULSE_UNINITIALIZED_VALUE",
        "node_key": "4f6aba8272ee2dfee18d1163129ff0fb",
        "hash": "ec878b81e0f61a58e489f06bc1f466b2",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`flags` is read without initialization during the call to `__bid128_to_binary64()`.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 290,
        "column": 12,
        "procedure": "BloombergLP::bdldfp::DecimalConvertUtil_IntelDfp::decimalToDouble",
        "procedure_start_line": 285,
        "file": "thirdparty/bde/groups/bdl/bdldfp/bdldfp_decimalconvertutil_inteldfp.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bdl/bdldfp/bdldfp_decimalconvertutil_inteldfp.h",
                "line_number": 285,
                "column_number": 1,
                "description": "variable `flags` declared here"
            },
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bdl/bdldfp/bdldfp_decimalconvertutil_inteldfp.h",
                "line_number": 290,
                "column_number": 12,
                "description": "when calling `__bid128_to_binary64` here"
            },
            {
                "level": 1,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/src/inteldfp/bid_binarydecimal.c",
                "line_number": 144590,
                "column_number": 1,
                "description": "parameter `pfpsf` of __bid128_to_binary64"
            },
            {
                "level": 1,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/src/inteldfp/bid_binarydecimal.c",
                "line_number": 144603,
                "column_number": 3,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/src/inteldfp/bid_internal.h",
                "line_number": 810,
                "column_number": -1,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 4,
        "bug_trace_max_depth": 1,
        "key": "bdldfp_decimalconvertutil_inteldfp.h|decimalToDouble|PULSE_UNINITIALIZED_VALUE",
        "node_key": "c18bbfe41163caf7751838c1e1fd6323",
        "hash": "6e777fb742f80c67d41bcf00d7e0fa41",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`flags` is read without initialization during the call to `__bid32_to_binary32()`.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 319,
        "column": 12,
        "procedure": "BloombergLP::bdldfp::DecimalConvertUtil_IntelDfp::decimalToFloat",
        "procedure_start_line": 314,
        "file": "thirdparty/bde/groups/bdl/bdldfp/bdldfp_decimalconvertutil_inteldfp.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bdl/bdldfp/bdldfp_decimalconvertutil_inteldfp.h",
                "line_number": 314,
                "column_number": 1,
                "description": "variable `flags` declared here"
            },
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bdl/bdldfp/bdldfp_decimalconvertutil_inteldfp.h",
                "line_number": 319,
                "column_number": 12,
                "description": "when calling `__bid32_to_binary32` here"
            },
            {
                "level": 1,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/src/inteldfp/bid_binarydecimal.c",
                "line_number": 143951,
                "column_number": 1,
                "description": "parameter `pfpsf` of __bid32_to_binary32"
            },
            {
                "level": 1,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/src/inteldfp/bid_binarydecimal.c",
                "line_number": 144066,
                "column_number": 5,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/src/inteldfp/bid_internal.h",
                "line_number": 810,
                "column_number": -1,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 4,
        "bug_trace_max_depth": 1,
        "key": "bdldfp_decimalconvertutil_inteldfp.h|decimalToFloat|PULSE_UNINITIALIZED_VALUE",
        "node_key": "4f6aba8272ee2dfee18d1163129ff0fb",
        "hash": "41c476d62d32dee4b37bc25a581a6750",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`flags` is read without initialization during the call to `__bid64_to_binary32()`.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 327,
        "column": 12,
        "procedure": "BloombergLP::bdldfp::DecimalConvertUtil_IntelDfp::decimalToFloat",
        "procedure_start_line": 322,
        "file": "thirdparty/bde/groups/bdl/bdldfp/bdldfp_decimalconvertutil_inteldfp.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bdl/bdldfp/bdldfp_decimalconvertutil_inteldfp.h",
                "line_number": 322,
                "column_number": 1,
                "description": "variable `flags` declared here"
            },
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bdl/bdldfp/bdldfp_decimalconvertutil_inteldfp.h",
                "line_number": 327,
                "column_number": 12,
                "description": "when calling `__bid64_to_binary32` here"
            },
            {
                "level": 1,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/src/inteldfp/bid_binarydecimal.c",
                "line_number": 144085,
                "column_number": 1,
                "description": "parameter `pfpsf` of __bid64_to_binary32"
            },
            {
                "level": 1,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/src/inteldfp/bid_binarydecimal.c",
                "line_number": 144204,
                "column_number": 5,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/src/inteldfp/bid_internal.h",
                "line_number": 810,
                "column_number": -1,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 4,
        "bug_trace_max_depth": 1,
        "key": "bdldfp_decimalconvertutil_inteldfp.h|decimalToFloat|PULSE_UNINITIALIZED_VALUE",
        "node_key": "4f6aba8272ee2dfee18d1163129ff0fb",
        "hash": "d4cb5df1448b4c628b995c9f067d6d41",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`flags` is read without initialization during the call to `__bid128_to_binary32()`.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 335,
        "column": 12,
        "procedure": "BloombergLP::bdldfp::DecimalConvertUtil_IntelDfp::decimalToFloat",
        "procedure_start_line": 330,
        "file": "thirdparty/bde/groups/bdl/bdldfp/bdldfp_decimalconvertutil_inteldfp.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bdl/bdldfp/bdldfp_decimalconvertutil_inteldfp.h",
                "line_number": 330,
                "column_number": 1,
                "description": "variable `flags` declared here"
            },
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bdl/bdldfp/bdldfp_decimalconvertutil_inteldfp.h",
                "line_number": 335,
                "column_number": 12,
                "description": "when calling `__bid128_to_binary32` here"
            },
            {
                "level": 1,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/src/inteldfp/bid_binarydecimal.c",
                "line_number": 144223,
                "column_number": 1,
                "description": "parameter `pfpsf` of __bid128_to_binary32"
            },
            {
                "level": 1,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/src/inteldfp/bid_binarydecimal.c",
                "line_number": 144242,
                "column_number": 3,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/src/inteldfp/bid_internal.h",
                "line_number": 810,
                "column_number": -1,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 4,
        "bug_trace_max_depth": 1,
        "key": "bdldfp_decimalconvertutil_inteldfp.h|decimalToFloat|PULSE_UNINITIALIZED_VALUE",
        "node_key": "c18bbfe41163caf7751838c1e1fd6323",
        "hash": "beb3057d292fc12f0d1ea353a6b1f640",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `func` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 1736,
        "column": 5,
        "procedure": "BloombergLP::bdlf::BindUtil::bind<9df71018b1ed2dc3>",
        "procedure_start_line": 1736,
        "file": "thirdparty/bde/groups/bdl/bdlf/bdlf_bind.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bdl/bdlf/bdlf_bind.h",
                "line_number": 1736,
                "column_number": 5,
                "description": "Parameter func with type `bsl::function<_fn_>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bdlf_bind.h|bind<9df71018b1ed2dc3>|PULSE_CONST_REFABLE",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "12371053847255feadc3fbf9a44e57f8",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::function<_fn_>"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `func` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 1773,
        "column": 5,
        "procedure": "BloombergLP::bdlf::BindUtil::bind<2e7fd2112bbf868a>",
        "procedure_start_line": 1773,
        "file": "thirdparty/bde/groups/bdl/bdlf/bdlf_bind.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bdl/bdlf/bdlf_bind.h",
                "line_number": 1773,
                "column_number": 5,
                "description": "Parameter func with type `bsl::function<_fn_>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bdlf_bind.h|bind<2e7fd2112bbf868a>|PULSE_CONST_REFABLE",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "67fa17dc46c2cc43d5d4614cfd6e8554",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::function<_fn_>"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `position` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 2143,
        "column": 28,
        "procedure": "BloombergLP::bdljsn::JsonObject::erase",
        "procedure_start_line": 2140,
        "file": "thirdparty/bde/groups/bdl/bdljsn/bdljsn_json.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bdl/bdljsn/bdljsn_json.h",
                "line_number": 2143,
                "column_number": 28,
                "description": "copied here (with type `BloombergLP::bslstl::HashTableIterator<bsl::pair<bsl::basic_string<char,std::char_traits<char>,bsl::allocator<char>> const ,BloombergLP::bdljsn::Json>,long>&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bdljsn_json.h|erase|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "c1d780a30890a1959aa2c529d08326c6",
        "hash": "299b8073749acd21337dd813d1a9c0b8",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "BloombergLP::bslstl::HashTableIterator<bsl::pair<bsl::basic_string<char,std::char_traits<char>,bsl::allocator<char>> const ,BloombergLP::bdljsn::Json>,long>&"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "`BloombergLP::bslmf::MovableRefUtil::move()` is copied into field `d_descriptor` but is not modified afterwards.",
        "suggestion": "Rather than copying into the field, move into it instead.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 331,
        "column": 3,
        "procedure": "BloombergLP::bdlm::MetricsRegistry_Data::MetricsRegistry_Data",
        "procedure_start_line": 328,
        "file": "thirdparty/bde/groups/bdl/bdlm/bdlm_metricsregistry.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bdl/bdlm/bdlm_metricsregistry.h",
                "line_number": 331,
                "column_number": 3,
                "description": "copied here (with type `BloombergLP::bdlm::MetricDescriptor&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bdlm_metricsregistry.h|MetricsRegistry_Data|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "b523ff3d28cd78396c6e90ca698c4605",
        "hash": "8b9fb3f81ab367628c1d6dd33288f488",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "BloombergLP::bdlm::MetricDescriptor&"
        }
    },
    {
        "bug_type": "NULLPTR_DEREFERENCE",
        "qualifier": "`plink` could be null (from the call to `BloombergLP::bdlma::InfrequentDeleteBlockList::allocate()` on line 163) and is dereferenced.",
        "severity": "ERROR",
        "category": "Null pointer dereference",
        "line": 169,
        "column": 13,
        "procedure": "BloombergLP::bdlma::Pool::reserveCapacity",
        "procedure_start_line": 140,
        "file": "thirdparty/bde/groups/bdl/bdlma/bdlma_pool.cpp",
        "bug_trace": [
            {
                "level": 1,
                "filename": "thirdparty/bde/groups/bdl/bdlma/bdlma_pool.cpp",
                "line_number": 140,
                "column_number": 1,
                "description": "parameter `this` of BloombergLP::bdlma::Pool::reserveCapacity"
            },
            {
                "level": 1,
                "filename": "thirdparty/bde/groups/bdl/bdlma/bdlma_pool.cpp",
                "line_number": 140,
                "column_number": 1,
                "description": "parameter `numBlocks` of BloombergLP::bdlma::Pool::reserveCapacity"
            },
            {
                "level": 1,
                "filename": "thirdparty/bde/groups/bdl/bdlma/bdlma_pool.cpp",
                "line_number": 157,
                "column_number": 5,
                "description": "assigned"
            },
            {
                "level": 1,
                "filename": "thirdparty/bde/groups/bdl/bdlma/bdlma_pool.cpp",
                "line_number": 163,
                "column_number": 24,
                "description": "in call to `BloombergLP::bdlma::InfrequentDeleteBlockList::allocate`"
            },
            {
                "level": 2,
                "filename": "thirdparty/bde/groups/bdl/bdlma/bdlma_infrequentdeleteblocklist.cpp",
                "line_number": 77,
                "column_number": 5,
                "description": "is assigned to the null pointer"
            },
            {
                "level": 2,
                "filename": "thirdparty/bde/groups/bdl/bdlma/bdlma_infrequentdeleteblocklist.cpp",
                "line_number": 77,
                "column_number": 5,
                "description": "returned"
            },
            {
                "level": 1,
                "filename": "thirdparty/bde/groups/bdl/bdlma/bdlma_pool.cpp",
                "line_number": 163,
                "column_number": 24,
                "description": "return from call to `BloombergLP::bdlma::InfrequentDeleteBlockList::allocate`"
            },
            {
                "level": 1,
                "filename": "thirdparty/bde/groups/bdl/bdlma/bdlma_pool.cpp",
                "line_number": 163,
                "column_number": 9,
                "description": "assigned"
            },
            {
                "level": 1,
                "filename": "thirdparty/bde/groups/bdl/bdlma/bdlma_pool.cpp",
                "line_number": 164,
                "column_number": 9,
                "description": "assigned"
            },
            {
                "level": 1,
                "filename": "thirdparty/bde/groups/bdl/bdlma/bdlma_pool.cpp",
                "line_number": 166,
                "column_number": 13,
                "description": "assigned"
            },
            {
                "level": 1,
                "filename": "thirdparty/bde/groups/bdl/bdlma/bdlma_pool.cpp",
                "line_number": 169,
                "column_number": 13,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 11,
        "bug_trace_max_depth": 2,
        "key": "bdlma_pool.cpp|reserveCapacity|NULLPTR_DEREFERENCE",
        "node_key": "390b877f047693d83f9ea3b178306716",
        "hash": "ee40982cc1eb76d03f9c3ee354344228",
        "bug_type_hum": "Null Dereference",
        "extras": {}
    },
    {
        "bug_type": "NULLPTR_DEREFERENCE",
        "qualifier": "`plink` could be null (null value originating from line 147) and is dereferenced.",
        "severity": "ERROR",
        "category": "Null pointer dereference",
        "line": 169,
        "column": 13,
        "procedure": "BloombergLP::bdlma::Pool::reserveCapacity",
        "procedure_start_line": 140,
        "file": "thirdparty/bde/groups/bdl/bdlma/bdlma_pool.cpp",
        "bug_trace": [
            {
                "level": 1,
                "filename": "thirdparty/bde/groups/bdl/bdlma/bdlma_pool.cpp",
                "line_number": 140,
                "column_number": 1,
                "description": "parameter `this` of BloombergLP::bdlma::Pool::reserveCapacity"
            },
            {
                "level": 1,
                "filename": "thirdparty/bde/groups/bdl/bdlma/bdlma_pool.cpp",
                "line_number": 140,
                "column_number": 1,
                "description": "parameter `numBlocks` of BloombergLP::bdlma::Pool::reserveCapacity"
            },
            {
                "level": 1,
                "filename": "thirdparty/bde/groups/bdl/bdlma/bdlma_pool.cpp",
                "line_number": 147,
                "column_number": 9,
                "description": "is assigned to the constant 1"
            },
            {
                "level": 1,
                "filename": "thirdparty/bde/groups/bdl/bdlma/bdlma_pool.cpp",
                "line_number": 147,
                "column_number": 9,
                "description": "assigned"
            },
            {
                "level": 1,
                "filename": "thirdparty/bde/groups/bdl/bdlma/bdlma_pool.cpp",
                "line_number": 157,
                "column_number": 5,
                "description": "assigned"
            },
            {
                "level": 1,
                "filename": "thirdparty/bde/groups/bdl/bdlma/bdlma_pool.cpp",
                "line_number": 163,
                "column_number": 24,
                "description": "in call to `BloombergLP::bdlma::InfrequentDeleteBlockList::allocate`"
            },
            {
                "level": 2,
                "filename": "thirdparty/bde/groups/bdl/bdlma/bdlma_infrequentdeleteblocklist.cpp",
                "line_number": 77,
                "column_number": 5,
                "description": "is assigned to the null pointer"
            },
            {
                "level": 2,
                "filename": "thirdparty/bde/groups/bdl/bdlma/bdlma_infrequentdeleteblocklist.cpp",
                "line_number": 77,
                "column_number": 5,
                "description": "returned"
            },
            {
                "level": 1,
                "filename": "thirdparty/bde/groups/bdl/bdlma/bdlma_pool.cpp",
                "line_number": 163,
                "column_number": 24,
                "description": "return from call to `BloombergLP::bdlma::InfrequentDeleteBlockList::allocate`"
            },
            {
                "level": 1,
                "filename": "thirdparty/bde/groups/bdl/bdlma/bdlma_pool.cpp",
                "line_number": 163,
                "column_number": 9,
                "description": "assigned"
            },
            {
                "level": 1,
                "filename": "thirdparty/bde/groups/bdl/bdlma/bdlma_pool.cpp",
                "line_number": 164,
                "column_number": 9,
                "description": "assigned"
            },
            {
                "level": 1,
                "filename": "thirdparty/bde/groups/bdl/bdlma/bdlma_pool.cpp",
                "line_number": 166,
                "column_number": 13,
                "description": "assigned"
            },
            {
                "level": 1,
                "filename": "thirdparty/bde/groups/bdl/bdlma/bdlma_pool.cpp",
                "line_number": 169,
                "column_number": 13,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 13,
        "bug_trace_max_depth": 2,
        "key": "bdlma_pool.cpp|reserveCapacity|NULLPTR_DEREFERENCE",
        "node_key": "390b877f047693d83f9ea3b178306716",
        "hash": "246bb7eff3729f787f5cca5ce72724c4",
        "bug_type_hum": "Null Dereference",
        "extras": {}
    },
    {
        "bug_type": "INFINITE_LOOP",
        "qualifier": "Recurring state leading to infinite execution at line 424, column 13.",
        "severity": "ERROR",
        "category": "No_category",
        "line": 424,
        "column": 13,
        "procedure": "BloombergLP::bdlmt::TimerEventScheduler::yieldToDispatcher",
        "procedure_start_line": 416,
        "file": "thirdparty/bde/groups/bdl/bdlmt/bdlmt_timereventscheduler.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bdl/bdlmt/bdlmt_timereventscheduler.cpp",
                "line_number": 424,
                "column_number": 13,
                "description": "in loop"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bdlmt_timereventscheduler.cpp|yieldToDispatcher|INFINITE_LOOP",
        "node_key": "c1d780a30890a1959aa2c529d08326c6",
        "hash": "36a1da4f5e3dff3139deb5cd6ce37af1",
        "bug_type_hum": "Infinite Loop",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`nameCount` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 630,
        "column": 9,
        "procedure": "BloombergLP::bdlpcre::RegEx::namedSubpatternsImp<5118bf9c7f63a2fd>",
        "procedure_start_line": 614,
        "file": "thirdparty/bde/groups/bdl/bdlpcre/bdlpcre_regex.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bdl/bdlpcre/bdlpcre_regex.cpp",
                "line_number": 614,
                "column_number": 1,
                "description": "variable `nameCount` declared here"
            },
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bdl/bdlpcre/bdlpcre_regex.cpp",
                "line_number": 630,
                "column_number": 9,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "bdlpcre_regex.cpp|namedSubpatternsImp<5118bf9c7f63a2fd>|PULSE_UNINITIALIZED_VALUE",
        "node_key": "25459747190b4d4d8493d1a4c2f4e097",
        "hash": "0960addad72be7d23ce2f888993719ad",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`nameEntrySize` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 649,
        "column": 38,
        "procedure": "BloombergLP::bdlpcre::RegEx::namedSubpatternsImp<5118bf9c7f63a2fd>",
        "procedure_start_line": 614,
        "file": "thirdparty/bde/groups/bdl/bdlpcre/bdlpcre_regex.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bdl/bdlpcre/bdlpcre_regex.cpp",
                "line_number": 614,
                "column_number": 1,
                "description": "variable `nameEntrySize` declared here"
            },
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bdl/bdlpcre/bdlpcre_regex.cpp",
                "line_number": 649,
                "column_number": 38,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "bdlpcre_regex.cpp|namedSubpatternsImp<5118bf9c7f63a2fd>|PULSE_UNINITIALIZED_VALUE",
        "node_key": "8b0e8edb90b3285e48bbeb5a0a402ee5",
        "hash": "c52e5486119c4557fd4eba75a08e442d",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`nameTable` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 653,
        "column": 29,
        "procedure": "BloombergLP::bdlpcre::RegEx::namedSubpatternsImp<5118bf9c7f63a2fd>",
        "procedure_start_line": 614,
        "file": "thirdparty/bde/groups/bdl/bdlpcre/bdlpcre_regex.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bdl/bdlpcre/bdlpcre_regex.cpp",
                "line_number": 614,
                "column_number": 1,
                "description": "variable `nameTable` declared here"
            },
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bdl/bdlpcre/bdlpcre_regex.cpp",
                "line_number": 653,
                "column_number": 29,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "bdlpcre_regex.cpp|namedSubpatternsImp<5118bf9c7f63a2fd>|PULSE_UNINITIALIZED_VALUE",
        "node_key": "29d02fc01178649288d75d7381b2ec43",
        "hash": "b53fbe5aeecb6907883fe4ce5a1af4a6",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`numSubpatterns` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 1204,
        "column": 12,
        "procedure": "BloombergLP::bdlpcre::RegEx::numSubpatterns",
        "procedure_start_line": 1192,
        "file": "thirdparty/bde/groups/bdl/bdlpcre/bdlpcre_regex.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bdl/bdlpcre/bdlpcre_regex.cpp",
                "line_number": 1192,
                "column_number": 1,
                "description": "variable `numSubpatterns` declared here"
            },
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bdl/bdlpcre/bdlpcre_regex.cpp",
                "line_number": 1204,
                "column_number": 12,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "bdlpcre_regex.cpp|numSubpatterns|PULSE_UNINITIALIZED_VALUE",
        "node_key": "e08783e4a15669118db243910da0768d",
        "hash": "e5d74db9f0b57a7dd0ed0c495133b50d",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `lhsHCE` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 70,
        "column": 1,
        "procedure": "BloombergLP::bdlt::appendHoliday",
        "procedure_start_line": 70,
        "file": "thirdparty/bde/groups/bdl/bdlt/bdlt_packedcalendar.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bdl/bdlt/bdlt_packedcalendar.cpp",
                "line_number": 70,
                "column_number": 1,
                "description": "Parameter lhsHCE with type `BloombergLP::bdlt::PackedCalendar_HolidayCodeConstIterator`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bdlt_packedcalendar.cpp|BloombergLP::bdlt::appendHoliday|PULSE_CONST_REFABLE",
        "node_key": "89e1fea3672f8c1bda5df785b829cfa3",
        "hash": "6c0b9d3e0dbdc327bfb3667ca13e8c87",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "BloombergLP::bdlt::PackedCalendar_HolidayCodeConstIterator"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `lhsHC` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 70,
        "column": 1,
        "procedure": "BloombergLP::bdlt::appendHoliday",
        "procedure_start_line": 70,
        "file": "thirdparty/bde/groups/bdl/bdlt/bdlt_packedcalendar.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bdl/bdlt/bdlt_packedcalendar.cpp",
                "line_number": 70,
                "column_number": 1,
                "description": "Parameter lhsHC with type `BloombergLP::bdlt::PackedCalendar_HolidayCodeConstIterator`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bdlt_packedcalendar.cpp|BloombergLP::bdlt::appendHoliday|PULSE_CONST_REFABLE",
        "node_key": "89e1fea3672f8c1bda5df785b829cfa3",
        "hash": "02596ce245ae9f5a9a6e85b1c94aef07",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "BloombergLP::bdlt::PackedCalendar_HolidayCodeConstIterator"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `lhsHCE` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 91,
        "column": 1,
        "procedure": "BloombergLP::bdlt::appendHoliday",
        "procedure_start_line": 91,
        "file": "thirdparty/bde/groups/bdl/bdlt/bdlt_packedcalendar.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bdl/bdlt/bdlt_packedcalendar.cpp",
                "line_number": 91,
                "column_number": 1,
                "description": "Parameter lhsHCE with type `BloombergLP::bdlt::PackedCalendar_HolidayCodeConstIterator`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bdlt_packedcalendar.cpp|BloombergLP::bdlt::appendHoliday|PULSE_CONST_REFABLE",
        "node_key": "89e1fea3672f8c1bda5df785b829cfa3",
        "hash": "6c0b9d3e0dbdc327bfb3667ca13e8c87",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "BloombergLP::bdlt::PackedCalendar_HolidayCodeConstIterator"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `lhsHC` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 91,
        "column": 1,
        "procedure": "BloombergLP::bdlt::appendHoliday",
        "procedure_start_line": 91,
        "file": "thirdparty/bde/groups/bdl/bdlt/bdlt_packedcalendar.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bdl/bdlt/bdlt_packedcalendar.cpp",
                "line_number": 91,
                "column_number": 1,
                "description": "Parameter lhsHC with type `BloombergLP::bdlt::PackedCalendar_HolidayCodeConstIterator`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bdlt_packedcalendar.cpp|BloombergLP::bdlt::appendHoliday|PULSE_CONST_REFABLE",
        "node_key": "89e1fea3672f8c1bda5df785b829cfa3",
        "hash": "02596ce245ae9f5a9a6e85b1c94aef07",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "BloombergLP::bdlt::PackedCalendar_HolidayCodeConstIterator"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `rhsHCE` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 91,
        "column": 1,
        "procedure": "BloombergLP::bdlt::appendHoliday",
        "procedure_start_line": 91,
        "file": "thirdparty/bde/groups/bdl/bdlt/bdlt_packedcalendar.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bdl/bdlt/bdlt_packedcalendar.cpp",
                "line_number": 91,
                "column_number": 1,
                "description": "Parameter rhsHCE with type `BloombergLP::bdlt::PackedCalendar_HolidayCodeConstIterator`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bdlt_packedcalendar.cpp|BloombergLP::bdlt::appendHoliday|PULSE_CONST_REFABLE",
        "node_key": "89e1fea3672f8c1bda5df785b829cfa3",
        "hash": "c9e8309a9e1d46a5923dd4d62f1bfc7f",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "BloombergLP::bdlt::PackedCalendar_HolidayCodeConstIterator"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `rhsHC` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 91,
        "column": 1,
        "procedure": "BloombergLP::bdlt::appendHoliday",
        "procedure_start_line": 91,
        "file": "thirdparty/bde/groups/bdl/bdlt/bdlt_packedcalendar.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bdl/bdlt/bdlt_packedcalendar.cpp",
                "line_number": 91,
                "column_number": 1,
                "description": "Parameter rhsHC with type `BloombergLP::bdlt::PackedCalendar_HolidayCodeConstIterator`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bdlt_packedcalendar.cpp|BloombergLP::bdlt::appendHoliday|PULSE_CONST_REFABLE",
        "node_key": "89e1fea3672f8c1bda5df785b829cfa3",
        "hash": "3dfb306422c58a933cf70f1a8d33a2ad",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "BloombergLP::bdlt::PackedCalendar_HolidayCodeConstIterator"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `&b` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 895,
        "column": 52,
        "procedure": "BloombergLP::bdlt::PackedCalendar::setValidRange",
        "procedure_start_line": 868,
        "file": "thirdparty/bde/groups/bdl/bdlt/bdlt_packedcalendar.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bdl/bdlt/bdlt_packedcalendar.cpp",
                "line_number": 895,
                "column_number": 52,
                "description": "copied here (with type `BloombergLP::bdlc::PackedIntArrayConstIterator<int>&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bdlt_packedcalendar.cpp|setValidRange|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "7fff9862b3a501c3a576e1e0dd0e481d",
        "hash": "037837129f574fbaf85e54056a6330c8",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "BloombergLP::bdlc::PackedIntArrayConstIterator<int>&"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `allocator` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 207,
        "column": 1,
        "procedure": "BloombergLP::bslalg::ArrayDestructionPrimitives::destroy<10bc7951ad9c1ca7>",
        "procedure_start_line": 207,
        "file": "thirdparty/bde/groups/bsl/bslalg/bslalg_arraydestructionprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bsl/bslalg/bslalg_arraydestructionprimitives.h",
                "line_number": 207,
                "column_number": 1,
                "description": "Parameter allocator with type `bsl::allocator<bsl::pair<bsl::basic_string<char,std::char_traits<char>,bsl::allocator<char>>,bsl::function<_fn_>>>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_arraydestructionprimitives.h|destroy<10bc7951ad9c1ca7>|PULSE_CONST_REFABLE",
        "node_key": "89e1fea3672f8c1bda5df785b829cfa3",
        "hash": "fcd7036bdc9e82c6f15d78cffe8f30a6",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::allocator<bsl::pair<bsl::basic_string<char,std::char_traits<char>,bsl::allocator<char>>,bsl::function<_fn_>>>"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `allocator` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 246,
        "column": 1,
        "procedure": "BloombergLP::bslalg::ArrayDestructionPrimitives::destroy<10bc7951ad9c1ca7>",
        "procedure_start_line": 246,
        "file": "thirdparty/bde/groups/bsl/bslalg/bslalg_arraydestructionprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bsl/bslalg/bslalg_arraydestructionprimitives.h",
                "line_number": 246,
                "column_number": 1,
                "description": "Parameter allocator with type `bsl::allocator<bsl::pair<bsl::basic_string<char,std::char_traits<char>,bsl::allocator<char>>,bsl::function<_fn_>>>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_arraydestructionprimitives.h|destroy<10bc7951ad9c1ca7>|PULSE_CONST_REFABLE",
        "node_key": "beb7dfba0bea12e9c9ab99f820d82919",
        "hash": "fcd7036bdc9e82c6f15d78cffe8f30a6",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::allocator<bsl::pair<bsl::basic_string<char,std::char_traits<char>,bsl::allocator<char>>,bsl::function<_fn_>>>"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `allocator` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 257,
        "column": 13,
        "procedure": "BloombergLP::bslalg::ArrayDestructionPrimitives::destroy<10bc7951ad9c1ca7>",
        "procedure_start_line": 246,
        "file": "thirdparty/bde/groups/bsl/bslalg/bslalg_arraydestructionprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bsl/bslalg/bslalg_arraydestructionprimitives.h",
                "line_number": 257,
                "column_number": 13,
                "description": "copied here (with type `bsl::allocator<bsl::pair<bsl::basic_string<char,std::char_traits<char>,bsl::allocator<char>>,bsl::function<_fn_>>>&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_arraydestructionprimitives.h|destroy<10bc7951ad9c1ca7>|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "beb7dfba0bea12e9c9ab99f820d82919",
        "hash": "1cc776d2c7874525078a47ee3faa4757",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "bsl::allocator<bsl::pair<bsl::basic_string<char,std::char_traits<char>,bsl::allocator<char>>,bsl::function<_fn_>>>&"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `allocator` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 2098,
        "column": 1,
        "procedure": "BloombergLP::bslalg::ArrayPrimitives::destructiveMoveAndEmplace<4405bbc2e9cbeb7b>",
        "procedure_start_line": 2098,
        "file": "thirdparty/bde/groups/bsl/bslalg/bslalg_arrayprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bsl/bslalg/bslalg_arrayprimitives.h",
                "line_number": 2098,
                "column_number": 1,
                "description": "Parameter allocator with type `bsl::allocator<signed char>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_arrayprimitives.h|destructiveMoveAndEmplace<4405bbc2e9cbeb7b>|PULSE_CONST_REFABLE",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "5df9ee2a7f70557f24534373fd7a2514",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::allocator<signed char>"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `allocator` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 2161,
        "column": 21,
        "procedure": "BloombergLP::bslalg::ArrayPrimitives::destructiveMoveAndEmplace<4405bbc2e9cbeb7b>",
        "procedure_start_line": 2098,
        "file": "thirdparty/bde/groups/bsl/bslalg/bslalg_arrayprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bsl/bslalg/bslalg_arrayprimitives.h",
                "line_number": 2161,
                "column_number": 21,
                "description": "copied here (with type `bsl::allocator<signed char>&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_arrayprimitives.h|destructiveMoveAndEmplace<4405bbc2e9cbeb7b>|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "eed064d58e94f69d325f0ab5394bf83a",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "bsl::allocator<signed char>&"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `allocator` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 2169,
        "column": 1,
        "procedure": "BloombergLP::bslalg::ArrayPrimitives::destructiveMoveAndInsert<2d708d9d98f184d0>",
        "procedure_start_line": 2169,
        "file": "thirdparty/bde/groups/bsl/bslalg/bslalg_arrayprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bsl/bslalg/bslalg_arrayprimitives.h",
                "line_number": 2169,
                "column_number": 1,
                "description": "Parameter allocator with type `bsl::allocator<BloombergLP::bdlb::BigEndianInt64>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_arrayprimitives.h|destructiveMoveAndInsert<2d708d9d98f184d0>|PULSE_CONST_REFABLE",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "c7855aceb37cf51016b4e1839b265713",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::allocator<BloombergLP::bdlb::BigEndianInt64>"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `allocator` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 2228,
        "column": 21,
        "procedure": "BloombergLP::bslalg::ArrayPrimitives::destructiveMoveAndInsert<2d708d9d98f184d0>",
        "procedure_start_line": 2169,
        "file": "thirdparty/bde/groups/bsl/bslalg/bslalg_arrayprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bsl/bslalg/bslalg_arrayprimitives.h",
                "line_number": 2228,
                "column_number": 21,
                "description": "copied here (with type `bsl::allocator<BloombergLP::bdlb::BigEndianInt64>&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_arrayprimitives.h|destructiveMoveAndInsert<2d708d9d98f184d0>|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "b02d71f18d1f385598cb1f7466fdf822",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "bsl::allocator<BloombergLP::bdlb::BigEndianInt64>&"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `allocator` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 2255,
        "column": 1,
        "procedure": "BloombergLP::bslalg::ArrayPrimitives::destructiveMoveAndInsert<45becdd85b5287b9>",
        "procedure_start_line": 2255,
        "file": "thirdparty/bde/groups/bsl/bslalg/bslalg_arrayprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bsl/bslalg/bslalg_arrayprimitives.h",
                "line_number": 2255,
                "column_number": 1,
                "description": "Parameter allocator with type `bsl::allocator<BloombergLP::baltzo::ZoneinfoTransition>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_arrayprimitives.h|destructiveMoveAndInsert<45becdd85b5287b9>|PULSE_CONST_REFABLE",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "9c03ab8de70252928228e71a2947878c",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::allocator<BloombergLP::baltzo::ZoneinfoTransition>"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `allocator` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 2318,
        "column": 21,
        "procedure": "BloombergLP::bslalg::ArrayPrimitives::destructiveMoveAndInsert<45becdd85b5287b9>",
        "procedure_start_line": 2255,
        "file": "thirdparty/bde/groups/bsl/bslalg/bslalg_arrayprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bsl/bslalg/bslalg_arrayprimitives.h",
                "line_number": 2318,
                "column_number": 21,
                "description": "copied here (with type `bsl::allocator<BloombergLP::baltzo::ZoneinfoTransition>&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_arrayprimitives.h|destructiveMoveAndInsert<45becdd85b5287b9>|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "ce13058104cb72d0b5b57e3d99ba5601",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "bsl::allocator<BloombergLP::baltzo::ZoneinfoTransition>&"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `allocator` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 2346,
        "column": 1,
        "procedure": "BloombergLP::bslalg::ArrayPrimitives::destructiveMoveAndInsert<12762054b862cd72>",
        "procedure_start_line": 2346,
        "file": "thirdparty/bde/groups/bsl/bslalg/bslalg_arrayprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bsl/bslalg/bslalg_arrayprimitives.h",
                "line_number": 2346,
                "column_number": 1,
                "description": "Parameter allocator with type `bsl::allocator<BloombergLP::bdlb::NullableValue<_Bool>>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_arrayprimitives.h|destructiveMoveAndInsert<12762054b862cd72>|PULSE_CONST_REFABLE",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "0222a998c138a873b39ca3d6aaeb9e53",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::allocator<BloombergLP::bdlb::NullableValue<_Bool>>"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `allocator` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 2409,
        "column": 21,
        "procedure": "BloombergLP::bslalg::ArrayPrimitives::destructiveMoveAndInsert<12762054b862cd72>",
        "procedure_start_line": 2346,
        "file": "thirdparty/bde/groups/bsl/bslalg/bslalg_arrayprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bsl/bslalg/bslalg_arrayprimitives.h",
                "line_number": 2409,
                "column_number": 21,
                "description": "copied here (with type `bsl::allocator<BloombergLP::bdlb::NullableValue<_Bool>>&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_arrayprimitives.h|destructiveMoveAndInsert<12762054b862cd72>|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "3f4289d2a501fb2c29ed9e52d7b38c2f",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "bsl::allocator<BloombergLP::bdlb::NullableValue<_Bool>>&"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `allocator` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 2440,
        "column": 1,
        "procedure": "BloombergLP::bslalg::ArrayPrimitives::destructiveMoveAndMoveInsert<bsl::allocator<_Bool>_>",
        "procedure_start_line": 2440,
        "file": "thirdparty/bde/groups/bsl/bslalg/bslalg_arrayprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bsl/bslalg/bslalg_arrayprimitives.h",
                "line_number": 2440,
                "column_number": 1,
                "description": "Parameter allocator with type `bsl::allocator<_Bool>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_arrayprimitives.h|destructiveMoveAndMoveInsert<bsl::allocator<_Bool>_>|PULSE_CONST_REFABLE",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "419037d674ab45657b2261760d528229",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::allocator<_Bool>"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `allocator` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 2508,
        "column": 21,
        "procedure": "BloombergLP::bslalg::ArrayPrimitives::destructiveMoveAndMoveInsert<bsl::allocator<_Bool>_>",
        "procedure_start_line": 2440,
        "file": "thirdparty/bde/groups/bsl/bslalg/bslalg_arrayprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bsl/bslalg/bslalg_arrayprimitives.h",
                "line_number": 2508,
                "column_number": 21,
                "description": "copied here (with type `bsl::allocator<_Bool>&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_arrayprimitives.h|destructiveMoveAndMoveInsert<bsl::allocator<_Bool>_>|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "cbd723adf95dbb138fff2c5ae3c38e91",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "bsl::allocator<_Bool>&"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `allocator` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 3442,
        "column": 1,
        "procedure": "BloombergLP::bslalg::ArrayPrimitives_Imp::copyConstruct<1bb5806661ff598e>",
        "procedure_start_line": 3442,
        "file": "thirdparty/bde/groups/bsl/bslalg/bslalg_arrayprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bsl/bslalg/bslalg_arrayprimitives.h",
                "line_number": 3442,
                "column_number": 1,
                "description": "Parameter allocator with type `bsl::allocator<BloombergLP::bdlbb::BlobBuffer>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_arrayprimitives.h|copyConstruct<1bb5806661ff598e>|PULSE_CONST_REFABLE",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "54c18bc858befbca9e6b31e356bcfbcf",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::allocator<BloombergLP::bdlbb::BlobBuffer>"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `allocator` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 3491,
        "column": 1,
        "procedure": "BloombergLP::bslalg::ArrayPrimitives_Imp::moveConstruct<1cd0f15d7b0655e7>",
        "procedure_start_line": 3491,
        "file": "thirdparty/bde/groups/bsl/bslalg/bslalg_arrayprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bsl/bslalg/bslalg_arrayprimitives.h",
                "line_number": 3491,
                "column_number": 1,
                "description": "Parameter allocator with type `bsl::allocator<BloombergLP::s_baltst::MySequenceWithChoiceArrayChoice>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_arrayprimitives.h|moveConstruct<1cd0f15d7b0655e7>|PULSE_CONST_REFABLE",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "7b2859e2ebcb9f9db228d1348ca109c3",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::allocator<BloombergLP::s_baltst::MySequenceWithChoiceArrayChoice>"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `allocator` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 3517,
        "column": 1,
        "procedure": "BloombergLP::bslalg::ArrayPrimitives_Imp::moveIfNoexcept<10bc7951ad9c1ca7>",
        "procedure_start_line": 3517,
        "file": "thirdparty/bde/groups/bsl/bslalg/bslalg_arrayprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bsl/bslalg/bslalg_arrayprimitives.h",
                "line_number": 3517,
                "column_number": 1,
                "description": "Parameter allocator with type `bsl::allocator<bsl::pair<bsl::basic_string<char,std::char_traits<char>,bsl::allocator<char>>,bsl::function<_fn_>>>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_arrayprimitives.h|moveIfNoexcept<10bc7951ad9c1ca7>|PULSE_CONST_REFABLE",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "fff19a862b3a1fe19f0218efa6007440",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::allocator<bsl::pair<bsl::basic_string<char,std::char_traits<char>,bsl::allocator<char>>,bsl::function<_fn_>>>"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `allocator` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 3564,
        "column": 1,
        "procedure": "BloombergLP::bslalg::ArrayPrimitives_Imp::defaultConstruct<4e696d2c834ebfcb>",
        "procedure_start_line": 3564,
        "file": "thirdparty/bde/groups/bsl/bslalg/bslalg_arrayprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bsl/bslalg/bslalg_arrayprimitives.h",
                "line_number": 3564,
                "column_number": 1,
                "description": "Parameter allocator with type `bsl::allocator<bsl::pair<unsigned long,unsigned long>>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_arrayprimitives.h|defaultConstruct<4e696d2c834ebfcb>|PULSE_CONST_REFABLE",
        "node_key": "c1d780a30890a1959aa2c529d08326c6",
        "hash": "ca0887a221bd52eef2c2088131dcc09d",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::allocator<bsl::pair<unsigned long,unsigned long>>"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `allocator` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 3583,
        "column": 1,
        "procedure": "BloombergLP::bslalg::ArrayPrimitives_Imp::defaultConstruct<1d154172b7fc5a57>",
        "procedure_start_line": 3583,
        "file": "thirdparty/bde/groups/bsl/bslalg/bslalg_arrayprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bsl/bslalg/bslalg_arrayprimitives.h",
                "line_number": 3583,
                "column_number": 1,
                "description": "Parameter allocator with type `bsl::allocator<bsl::vector<bsl::vector<double,bsl::allocator<double>>,bsl::allocator<bsl::vector<double,bsl::allocator<double>>>>>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_arrayprimitives.h|defaultConstruct<1d154172b7fc5a57>|PULSE_CONST_REFABLE",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "5e2135e9936676a57648130255048fdd",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::allocator<bsl::vector<bsl::vector<double,bsl::allocator<double>>,bsl::allocator<bsl::vector<double,bsl::allocator<double>>>>>"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `allocator` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 3625,
        "column": 1,
        "procedure": "BloombergLP::bslalg::ArrayPrimitives_Imp::destructiveMove<10bc7951ad9c1ca7>",
        "procedure_start_line": 3625,
        "file": "thirdparty/bde/groups/bsl/bslalg/bslalg_arrayprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bsl/bslalg/bslalg_arrayprimitives.h",
                "line_number": 3625,
                "column_number": 1,
                "description": "Parameter allocator with type `bsl::allocator<bsl::pair<bsl::basic_string<char,std::char_traits<char>,bsl::allocator<char>>,bsl::function<_fn_>>>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_arrayprimitives.h|destructiveMove<10bc7951ad9c1ca7>|PULSE_CONST_REFABLE",
        "node_key": "9290d6114ddfa0857c72e088e32ec11a",
        "hash": "d135c6678499478b75f1561ce9b90881",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::allocator<bsl::pair<bsl::basic_string<char,std::char_traits<char>,bsl::allocator<char>>,bsl::function<_fn_>>>"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `allocator` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 3642,
        "column": 61,
        "procedure": "BloombergLP::bslalg::ArrayPrimitives_Imp::destructiveMove<10bc7951ad9c1ca7>",
        "procedure_start_line": 3625,
        "file": "thirdparty/bde/groups/bsl/bslalg/bslalg_arrayprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bsl/bslalg/bslalg_arrayprimitives.h",
                "line_number": 3642,
                "column_number": 61,
                "description": "copied here (with type `bsl::allocator<bsl::pair<bsl::basic_string<char,std::char_traits<char>,bsl::allocator<char>>,bsl::function<_fn_>>>&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_arrayprimitives.h|destructiveMove<10bc7951ad9c1ca7>|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "9290d6114ddfa0857c72e088e32ec11a",
        "hash": "cb11ac253fbdf5cda5a37c86e1012c8f",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "bsl::allocator<bsl::pair<bsl::basic_string<char,std::char_traits<char>,bsl::allocator<char>>,bsl::function<_fn_>>>&"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `allocator` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 3649,
        "column": 1,
        "procedure": "BloombergLP::bslalg::ArrayPrimitives_Imp::emplace<8254ab67fd74676c>",
        "procedure_start_line": 3649,
        "file": "thirdparty/bde/groups/bsl/bslalg/bslalg_arrayprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bsl/bslalg/bslalg_arrayprimitives.h",
                "line_number": 3649,
                "column_number": 1,
                "description": "Parameter allocator with type `bsl::allocator<unsigned long>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_arrayprimitives.h|emplace<8254ab67fd74676c>|PULSE_CONST_REFABLE",
        "node_key": "fc19a5316f2be94643619d33cdcda0b1",
        "hash": "824b6610d8a977f05d7a2f27891d96dc",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::allocator<unsigned long>"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `allocator` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 3665,
        "column": 23,
        "procedure": "BloombergLP::bslalg::ArrayPrimitives_Imp::emplace<8254ab67fd74676c>",
        "procedure_start_line": 3649,
        "file": "thirdparty/bde/groups/bsl/bslalg/bslalg_arrayprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bsl/bslalg/bslalg_arrayprimitives.h",
                "line_number": 3665,
                "column_number": 23,
                "description": "copied here (with type `bsl::allocator<unsigned long>&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_arrayprimitives.h|emplace<8254ab67fd74676c>|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "fc19a5316f2be94643619d33cdcda0b1",
        "hash": "8986d55b4517a6f10ffc3a836b9f1256",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "bsl::allocator<unsigned long>&"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `allocator` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 3671,
        "column": 1,
        "procedure": "BloombergLP::bslalg::ArrayPrimitives_Imp::emplace<8254ab67fd74676c>",
        "procedure_start_line": 3671,
        "file": "thirdparty/bde/groups/bsl/bslalg/bslalg_arrayprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bsl/bslalg/bslalg_arrayprimitives.h",
                "line_number": 3671,
                "column_number": 1,
                "description": "Parameter allocator with type `bsl::allocator<unsigned long>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_arrayprimitives.h|emplace<8254ab67fd74676c>|PULSE_CONST_REFABLE",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "824b6610d8a977f05d7a2f27891d96dc",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::allocator<unsigned long>"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `allocator` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 3835,
        "column": 1,
        "procedure": "BloombergLP::bslalg::ArrayPrimitives_Imp::erase<1231304c57a03c09>",
        "procedure_start_line": 3835,
        "file": "thirdparty/bde/groups/bsl/bslalg/bslalg_arrayprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bsl/bslalg/bslalg_arrayprimitives.h",
                "line_number": 3835,
                "column_number": 1,
                "description": "Parameter allocator with type `bsl::allocator<BloombergLP::bdlb::NullableValue<BloombergLP::balb::CustomInt>>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_arrayprimitives.h|erase<1231304c57a03c09>|PULSE_CONST_REFABLE",
        "node_key": "c1d780a30890a1959aa2c529d08326c6",
        "hash": "bd9eb4aa8484dce79d6ace7297bcf04a",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::allocator<BloombergLP::bdlb::NullableValue<BloombergLP::balb::CustomInt>>"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `allocator` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 3855,
        "column": 56,
        "procedure": "BloombergLP::bslalg::ArrayPrimitives_Imp::erase<1231304c57a03c09>",
        "procedure_start_line": 3835,
        "file": "thirdparty/bde/groups/bsl/bslalg/bslalg_arrayprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bsl/bslalg/bslalg_arrayprimitives.h",
                "line_number": 3855,
                "column_number": 56,
                "description": "copied here (with type `bsl::allocator<BloombergLP::bdlb::NullableValue<BloombergLP::balb::CustomInt>>&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_arrayprimitives.h|erase<1231304c57a03c09>|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "c1d780a30890a1959aa2c529d08326c6",
        "hash": "2926bd5cad4b30c52863e735a60c04d3",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "bsl::allocator<BloombergLP::bdlb::NullableValue<BloombergLP::balb::CustomInt>>&"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `allocator` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 3868,
        "column": 1,
        "procedure": "BloombergLP::bslalg::ArrayPrimitives_Imp::erase<10bc7951ad9c1ca7>",
        "procedure_start_line": 3868,
        "file": "thirdparty/bde/groups/bsl/bslalg/bslalg_arrayprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bsl/bslalg/bslalg_arrayprimitives.h",
                "line_number": 3868,
                "column_number": 1,
                "description": "Parameter allocator with type `bsl::allocator<bsl::pair<bsl::basic_string<char,std::char_traits<char>,bsl::allocator<char>>,bsl::function<_fn_>>>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_arrayprimitives.h|erase<10bc7951ad9c1ca7>|PULSE_CONST_REFABLE",
        "node_key": "9290d6114ddfa0857c72e088e32ec11a",
        "hash": "dcffde25915d0c3b7eef820702cf096b",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::allocator<bsl::pair<bsl::basic_string<char,std::char_traits<char>,bsl::allocator<char>>,bsl::function<_fn_>>>"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `allocator` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 3903,
        "column": 1,
        "procedure": "BloombergLP::bslalg::ArrayPrimitives_Imp::insert<52754cee6e9a73b>",
        "procedure_start_line": 3903,
        "file": "thirdparty/bde/groups/bsl/bslalg/bslalg_arrayprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bsl/bslalg/bslalg_arrayprimitives.h",
                "line_number": 3903,
                "column_number": 1,
                "description": "Parameter allocator with type `bsl::allocator<unsigned long long>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_arrayprimitives.h|insert<52754cee6e9a73b>|PULSE_CONST_REFABLE",
        "node_key": "ad8fc35725a4bc9e3acb67485246284f",
        "hash": "39358b76f2dd70dc1f4724a86c738281",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::allocator<unsigned long long>"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `allocator` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 3966,
        "column": 1,
        "procedure": "BloombergLP::bslalg::ArrayPrimitives_Imp::insert<492ec1eb44c0779d>",
        "procedure_start_line": 3966,
        "file": "thirdparty/bde/groups/bsl/bslalg/bslalg_arrayprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bsl/bslalg/bslalg_arrayprimitives.h",
                "line_number": 3966,
                "column_number": 1,
                "description": "Parameter allocator with type `bsl::allocator<BloombergLP::baltzo::ZoneinfoTransition>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_arrayprimitives.h|insert<492ec1eb44c0779d>|PULSE_CONST_REFABLE",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "621b9aff6f975654f19c0782afa69c8a",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::allocator<BloombergLP::baltzo::ZoneinfoTransition>"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `allocator` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 4284,
        "column": 1,
        "procedure": "BloombergLP::bslalg::ArrayPrimitives_Imp::insert<3657dbe3f63cbd8d>",
        "procedure_start_line": 4284,
        "file": "thirdparty/bde/groups/bsl/bslalg/bslalg_arrayprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bsl/bslalg/bslalg_arrayprimitives.h",
                "line_number": 4284,
                "column_number": 1,
                "description": "Parameter allocator with type `bsl::allocator<BloombergLP::s_baltst::Choice1>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_arrayprimitives.h|insert<3657dbe3f63cbd8d>|PULSE_CONST_REFABLE",
        "node_key": "61134c01b11cce8d3f331b25d7a8e66d",
        "hash": "ccb33c142f0591794e5977cc640c751b",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::allocator<BloombergLP::s_baltst::Choice1>"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `allocator` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 4384,
        "column": 1,
        "procedure": "BloombergLP::bslalg::ArrayPrimitives_Imp::insert<404f40a751468883>",
        "procedure_start_line": 4384,
        "file": "thirdparty/bde/groups/bsl/bslalg/bslalg_arrayprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bsl/bslalg/bslalg_arrayprimitives.h",
                "line_number": 4384,
                "column_number": 1,
                "description": "Parameter allocator with type `bsl::allocator<unsigned long>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_arrayprimitives.h|insert<404f40a751468883>|PULSE_CONST_REFABLE",
        "node_key": "ed1608a421d78d56dd72eb70af7f1aee",
        "hash": "e7f6513ba9733d985203670d821d0b9a",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::allocator<unsigned long>"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `allocator` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 4479,
        "column": 23,
        "procedure": "BloombergLP::bslalg::ArrayPrimitives_Imp::insert<b4e48e8e590fc6d1>",
        "procedure_start_line": 4384,
        "file": "thirdparty/bde/groups/bsl/bslalg/bslalg_arrayprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bsl/bslalg/bslalg_arrayprimitives.h",
                "line_number": 4479,
                "column_number": 23,
                "description": "copied here (with type `bsl::allocator<bsl::function<_fn_>>&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_arrayprimitives.h|insert<b4e48e8e590fc6d1>|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "ed1608a421d78d56dd72eb70af7f1aee",
        "hash": "095355ef837773c0e3c3c83d5bedff85",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "bsl::allocator<bsl::function<_fn_>>&"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `allocator` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 4551,
        "column": 1,
        "procedure": "BloombergLP::bslalg::ArrayPrimitives_Imp::moveInsert<52754cee6e9a73b>",
        "procedure_start_line": 4551,
        "file": "thirdparty/bde/groups/bsl/bslalg/bslalg_arrayprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bsl/bslalg/bslalg_arrayprimitives.h",
                "line_number": 4551,
                "column_number": 1,
                "description": "Parameter allocator with type `bsl::allocator<unsigned long long>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_arrayprimitives.h|moveInsert<52754cee6e9a73b>|PULSE_CONST_REFABLE",
        "node_key": "56bf20f06bff3e93bf19a14345045b48",
        "hash": "269dfbe5fe8e6d536b28e871c5b8e2d8",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::allocator<unsigned long long>"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `allocator` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 4571,
        "column": 54,
        "procedure": "BloombergLP::bslalg::ArrayPrimitives_Imp::moveInsert<52754cee6e9a73b>",
        "procedure_start_line": 4551,
        "file": "thirdparty/bde/groups/bsl/bslalg/bslalg_arrayprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bsl/bslalg/bslalg_arrayprimitives.h",
                "line_number": 4571,
                "column_number": 54,
                "description": "copied here (with type `bsl::allocator<unsigned long long>&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_arrayprimitives.h|moveInsert<52754cee6e9a73b>|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "56bf20f06bff3e93bf19a14345045b48",
        "hash": "39839d2c232b3127edb83f062d13d82e",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "bsl::allocator<unsigned long long>&"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `allocator` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 4762,
        "column": 1,
        "procedure": "BloombergLP::bslalg::ArrayPrimitives_Imp::shiftAndInsert<bsl::allocator<_Bool>_>",
        "procedure_start_line": 4762,
        "file": "thirdparty/bde/groups/bsl/bslalg/bslalg_arrayprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bsl/bslalg/bslalg_arrayprimitives.h",
                "line_number": 4762,
                "column_number": 1,
                "description": "Parameter allocator with type `bsl::allocator<_Bool>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_arrayprimitives.h|shiftAndInsert<bsl::allocator<_Bool>_>|PULSE_CONST_REFABLE",
        "node_key": "9290d6114ddfa0857c72e088e32ec11a",
        "hash": "b280b5d9f10e296965a15d916bec85ce",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::allocator<_Bool>"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `allocator` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 4806,
        "column": 1,
        "procedure": "BloombergLP::bslalg::ArrayPrimitives_Imp::shiftAndInsert<8ed888961ba1f859>",
        "procedure_start_line": 4806,
        "file": "thirdparty/bde/groups/bsl/bslalg/bslalg_arrayprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bsl/bslalg/bslalg_arrayprimitives.h",
                "line_number": 4806,
                "column_number": 1,
                "description": "Parameter allocator with type `bsl::allocator<BloombergLP::bdlbb::BlobBuffer>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_arrayprimitives.h|shiftAndInsert<8ed888961ba1f859>|PULSE_CONST_REFABLE",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "14a7de7892601b42f43db5bc70f1109d",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::allocator<BloombergLP::bdlbb::BlobBuffer>"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `allocator` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 4872,
        "column": 1,
        "procedure": "BloombergLP::bslalg::ArrayPrimitives_Imp::shiftAndInsert<723af196a3c05d78>",
        "procedure_start_line": 4872,
        "file": "thirdparty/bde/groups/bsl/bslalg/bslalg_arrayprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bsl/bslalg/bslalg_arrayprimitives.h",
                "line_number": 4872,
                "column_number": 1,
                "description": "Parameter allocator with type `bsl::allocator<BloombergLP::bdlt::Timetable_CompactableTransition>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_arrayprimitives.h|shiftAndInsert<723af196a3c05d78>|PULSE_CONST_REFABLE",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "2f1e10d263d7effdb676caa67b0f17b4",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::allocator<BloombergLP::bdlt::Timetable_CompactableTransition>"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `allocator` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 4914,
        "column": 69,
        "procedure": "BloombergLP::bslalg::ArrayPrimitives_Imp::shiftAndInsert<723af196a3c05d78>",
        "procedure_start_line": 4872,
        "file": "thirdparty/bde/groups/bsl/bslalg/bslalg_arrayprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bsl/bslalg/bslalg_arrayprimitives.h",
                "line_number": 4914,
                "column_number": 69,
                "description": "copied here (with type `bsl::allocator<BloombergLP::bdlt::Timetable_CompactableTransition>&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_arrayprimitives.h|shiftAndInsert<723af196a3c05d78>|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "8e3dd3515fd93473990764132ba8e4bc",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "bsl::allocator<BloombergLP::bdlt::Timetable_CompactableTransition>&"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "`allocator` is copied into field `d_allocator` but is not modified afterwards.",
        "suggestion": "Rather than copying into the field, move into it instead.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 253,
        "column": 3,
        "procedure": "BloombergLP::bslalg::AutoArrayDestructor<BloombergLP::anonymous_namespace__huge_jvanegue_pulse-experiments_blazingmq_thirdparty_bde_groups_bal_baltzo_baltzo_zoneinfobinaryreader.cpp::RawLeapInfo,bsl::allocator<BloombergLP::anonymous_namespace__huge_jvanegue_pulse-experiments_blazingmq_thirdparty_bde_groups_bal_baltzo_baltzo_zoneinfobinaryreader.cpp::RawLeapInfo>>::AutoArrayDestructor",
        "procedure_start_line": 246,
        "file": "thirdparty/bde/groups/bsl/bslalg/bslalg_autoarraydestructor.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bsl/bslalg/bslalg_arrayprimitives.h",
                "line_number": 2203,
                "column_number": 48,
                "description": "first instantiated at"
            },
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bsl/bslalg/bslalg_autoarraydestructor.h",
                "line_number": 253,
                "column_number": 3,
                "description": "copied here (with type `bsl::allocator<BloombergLP::anonymous_namespace__huge_jvanegue_pulse-experiments_blazingmq_thirdparty_bde_groups_bal_baltzo_baltzo_zoneinfobinaryreader.cpp::RawLeapInfo>&`)"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "bslalg_autoarraydestructor.h|AutoArrayDestructor|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "9eb739ba071e67131631fd2fe9cf1b1e",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "bsl::allocator<BloombergLP::anonymous_namespace__huge_jvanegue_pulse-experiments_blazingmq_thirdparty_bde_groups_bal_baltzo_baltzo_zoneinfobinaryreader.cpp::RawLeapInfo>&"
        },
        "autofix": {
            "original": "d_allocator(allocator)",
            "replacement": "d_allocator(std::move(allocator))"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "`allocator` is copied into field `d_allocator` but is not modified afterwards.",
        "suggestion": "Rather than copying into the field, move into it instead.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 463,
        "column": 3,
        "procedure": "BloombergLP::bslalg::AutoArrayMoveDestructor<BloombergLP::balb::Choice1,bsl::allocator<BloombergLP::balb::Choice1>>::AutoArrayMoveDestructor",
        "procedure_start_line": 452,
        "file": "thirdparty/bde/groups/bsl/bslalg/bslalg_autoarraymovedestructor.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bsl/bslalg/bslalg_arrayprimitives.h",
                "line_number": 4339,
                "column_number": 53,
                "description": "first instantiated at"
            },
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bsl/bslalg/bslalg_autoarraymovedestructor.h",
                "line_number": 463,
                "column_number": 3,
                "description": "copied here (with type `bsl::allocator<BloombergLP::balb::Choice1>&`)"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "bslalg_autoarraymovedestructor.h|AutoArrayMoveDestructor|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "6c8844de6de972cadbac7e67d542bb95",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "bsl::allocator<BloombergLP::balb::Choice1>&"
        },
        "autofix": {
            "original": "d_allocator(allocator)",
            "replacement": "d_allocator(std::move(allocator))"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `allocator` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 1095,
        "column": 1,
        "procedure": "BloombergLP::bslalg::DequePrimitives<bsl::function<_fn_>,16>::destruct<606eb519b3286317>",
        "procedure_start_line": 1095,
        "file": "thirdparty/bde/groups/bsl/bslalg/bslalg_dequeprimitives.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bsl/bslalg/bslalg_dequeprimitives.h",
                "line_number": 1095,
                "column_number": 1,
                "description": "Parameter allocator with type `bsl::allocator<bsl::function<_fn_>>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_dequeprimitives.h|destruct<606eb519b3286317>|PULSE_CONST_REFABLE",
        "node_key": "89e1fea3672f8c1bda5df785b829cfa3",
        "hash": "b59961d4ab251d77775d00fb726b50fb",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::allocator<bsl::function<_fn_>>"
        }
    },
    {
        "bug_type": "INFINITE_LOOP",
        "qualifier": "Recurring state leading to infinite execution at line 1642, column 5.",
        "severity": "ERROR",
        "category": "No_category",
        "line": 1642,
        "column": 5,
        "procedure": "BloombergLP::bslalg::RbTreeUtil::findUniqueInsertLocation<c830284f80f176f>",
        "procedure_start_line": 1624,
        "file": "thirdparty/bde/groups/bsl/bslalg/bslalg_rbtreeutil.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bsl/bslalg/bslalg_rbtreeutil.h",
                "line_number": 1642,
                "column_number": 5,
                "description": "in loop"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslalg_rbtreeutil.h|findUniqueInsertLocation<c830284f80f176f>|INFINITE_LOOP",
        "node_key": "fa0c051eb65fbf8d37c52865108bb194",
        "hash": "33a9023134c14bd63d480d227d9552a7",
        "bug_type_hum": "Infinite Loop",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "`BloombergLP::bslmf::MovableRefUtil::access().d_members` is copied into field `d_members` but is not modified afterwards.",
        "suggestion": "Rather than copying into the field, move into it instead.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 1905,
        "column": 3,
        "procedure": "BloombergLP::bslma::ManagedPtr<char>::ManagedPtr",
        "procedure_start_line": 1902,
        "file": "thirdparty/bde/groups/bsl/bslma/bslma_managedptr.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bal/ball/ball_loggermanager.cpp",
                "line_number": 647,
                "column_number": 33,
                "description": "first instantiated at"
            },
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bsl/bslma/bslma_managedptr.h",
                "line_number": 1905,
                "column_number": 3,
                "description": "copied here (with type `BloombergLP::bslma::ManagedPtr_Members&`)"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "bslma_managedptr.h|ManagedPtr|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "24b6e6bf9b580ad5f30bf9419892378e",
        "hash": "61fe71b2dd439dcdac5a080427b81a17",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "BloombergLP::bslma::ManagedPtr_Members&"
        }
    },
    {
        "bug_type": "NULLPTR_DEREFERENCE",
        "qualifier": "`header_p` could be null (null value originating from line 385) and is dereferenced.",
        "severity": "ERROR",
        "category": "Null pointer dereference",
        "line": 426,
        "column": 5,
        "procedure": "BloombergLP::bslma::TestAllocator::allocate",
        "procedure_start_line": 383,
        "file": "thirdparty/bde/groups/bsl/bslma/bslma_testallocator.cpp",
        "bug_trace": [
            {
                "level": 1,
                "filename": "thirdparty/bde/groups/bsl/bslma/bslma_testallocator.cpp",
                "line_number": 385,
                "column_number": 5,
                "description": "is assigned to the null pointer"
            },
            {
                "level": 1,
                "filename": "thirdparty/bde/groups/bsl/bslma/bslma_testallocator.cpp",
                "line_number": 385,
                "column_number": 5,
                "description": "assigned"
            },
            {
                "level": 1,
                "filename": "thirdparty/bde/groups/bsl/bslma/bslma_testallocator.cpp",
                "line_number": 426,
                "column_number": 5,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 3,
        "bug_trace_max_depth": 1,
        "key": "bslma_testallocator.cpp|allocate|NULLPTR_DEREFERENCE",
        "node_key": "56e167b63f9832f0ca224871b70f052a",
        "hash": "e07b7952d85097044dd87cef62af94e7",
        "bug_type_hum": "Null Dereference",
        "extras": {}
    },
    {
        "bug_type": "INFINITE_LOOP",
        "qualifier": "Recurring state leading to infinite execution at line 99, column 5.",
        "severity": "ERROR",
        "category": "No_category",
        "line": 99,
        "column": 5,
        "procedure": "BloombergLP::bsls::AssertImpUtil::failBySleep",
        "procedure_start_line": 95,
        "file": "thirdparty/bde/groups/bsl/bsls/bsls_assertimputil.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bsl/bsls/bsls_assertimputil.cpp",
                "line_number": 99,
                "column_number": 5,
                "description": "in loop"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bsls_assertimputil.cpp|failBySleep|INFINITE_LOOP",
        "node_key": "33a2afe0f1403a3d30ef198dc1f0c3a4",
        "hash": "5722b09f1860a03b2878c49d52c05a40",
        "bug_type_hum": "Infinite Loop",
        "extras": {}
    },
    {
        "bug_type": "INFINITE_LOOP",
        "qualifier": "Recurring state leading to infinite execution at line 55, column 9.",
        "severity": "ERROR",
        "category": "No_category",
        "line": 55,
        "column": 9,
        "procedure": "BloombergLP::bsls::BslOnce::doEnter",
        "procedure_start_line": 39,
        "file": "thirdparty/bde/groups/bsl/bsls/bsls_bslonce.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bsl/bsls/bsls_bslonce.cpp",
                "line_number": 55,
                "column_number": 9,
                "description": "in loop"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bsls_bslonce.cpp|doEnter|INFINITE_LOOP",
        "node_key": "fa0c051eb65fbf8d37c52865108bb194",
        "hash": "47e7b3aa5285c227c74ec4464057a6ee",
        "bug_type_hum": "Infinite Loop",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "`allocator` is copied into field `d_allocator` but is not modified afterwards.",
        "suggestion": "Rather than copying into the field, move into it instead.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 3352,
        "column": 3,
        "procedure": "bsl::optional<BloombergLP::balb::Choice1,1>::optional",
        "procedure_start_line": 3349,
        "file": "thirdparty/bde/groups/bsl/bslstl/bslstl_optional.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bdl/bdlb/bdlb_nullablevalue.h",
                "line_number": 203,
                "column_number": 30,
                "description": "first instantiated at"
            },
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bsl/bslstl/bslstl_optional.h",
                "line_number": 3352,
                "column_number": 3,
                "description": "copied here (with type `bsl::allocator<char>&`)"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "bslstl_optional.h|optional|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "28392d71677c1233501a453d2e88e1aa",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "bsl::allocator<char>&"
        },
        "autofix": {
            "original": "d_allocator(allocator)",
            "replacement": "d_allocator(std::move(allocator))"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "`allocator` is copied into field `d_allocator` but is not modified afterwards.",
        "suggestion": "Rather than copying into the field, move into it instead.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 3370,
        "column": 3,
        "procedure": "bsl::optional<BloombergLP::balb::Choice1,1>::optional",
        "procedure_start_line": 3366,
        "file": "thirdparty/bde/groups/bsl/bslstl/bslstl_optional.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bdl/bdlb/bdlb_nullablevalue.h",
                "line_number": 203,
                "column_number": 30,
                "description": "first instantiated at"
            },
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bsl/bslstl/bslstl_optional.h",
                "line_number": 3370,
                "column_number": 3,
                "description": "copied here (with type `bsl::allocator<char>&`)"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "bslstl_optional.h|optional|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "c1d780a30890a1959aa2c529d08326c6",
        "hash": "28392d71677c1233501a453d2e88e1aa",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "bsl::allocator<char>&"
        },
        "autofix": {
            "original": "d_allocator(allocator)",
            "replacement": "d_allocator(std::move(allocator))"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "`allocator` is copied into field `d_allocator` but is not modified afterwards.",
        "suggestion": "Rather than copying into the field, move into it instead.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 3383,
        "column": 3,
        "procedure": "bsl::optional<BloombergLP::s_baltst::Choice1,1>::optional",
        "procedure_start_line": 3378,
        "file": "thirdparty/bde/groups/bsl/bslstl/bslstl_optional.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bdl/bdlb/bdlb_nullablevalue.h",
                "line_number": 203,
                "column_number": 30,
                "description": "first instantiated at"
            },
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bsl/bslstl/bslstl_optional.h",
                "line_number": 3383,
                "column_number": 3,
                "description": "copied here (with type `bsl::allocator<char>&`)"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "bslstl_optional.h|optional|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "c1d780a30890a1959aa2c529d08326c6",
        "hash": "ae3068855d8573c617a052c2dac62480",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "bsl::allocator<char>&"
        },
        "autofix": {
            "original": "d_allocator(allocator)",
            "replacement": "d_allocator(std::move(allocator))"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "`BloombergLP::bsls::Util::forward()` is copied into field `first` but is not modified afterwards.",
        "suggestion": "Rather than copying into the field, move into it instead.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 2115,
        "column": 3,
        "procedure": "bsl::Pair_First<BloombergLP::bslstl::HashTableIterator<bsl::pair<bsl::basic_string<char,std::char_traits<char>,bsl::allocator<char>> const ,BloombergLP::bdljsn::Json>,long>>::Pair_First<3191d0124f6ca6fb>",
        "procedure_start_line": 2106,
        "file": "thirdparty/bde/groups/bsl/bslstl/bslstl_pair.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bsl/bslstl/bslstl_pair.h",
                "line_number": 1150,
                "column_number": 21,
                "description": "first instantiated at"
            },
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bsl/bslstl/bslstl_pair.h",
                "line_number": 2115,
                "column_number": 3,
                "description": "copied here (with type `BloombergLP::bslstl::HashTableIterator<bsl::pair<bsl::basic_string<char,std::char_traits<char>,bsl::allocator<char>> const ,BloombergLP::bdljsn::Json>,long>&`)"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "bslstl_pair.h|Pair_First<3191d0124f6ca6fb>|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "24b6e6bf9b580ad5f30bf9419892378e",
        "hash": "26295f86f5d3e725beb7a4cdb8a80966",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "BloombergLP::bslstl::HashTableIterator<bsl::pair<bsl::basic_string<char,std::char_traits<char>,bsl::allocator<char>> const ,BloombergLP::bdljsn::Json>,long>&"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `basicAllocator` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 6348,
        "column": 1,
        "procedure": "bsl::allocate_shared<6ab32a0d4dc2c717>",
        "procedure_start_line": 6348,
        "file": "thirdparty/bde/groups/bsl/bslstl/bslstl_sharedptr.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bsl/bslstl/bslstl_sharedptr.h",
                "line_number": 6348,
                "column_number": 1,
                "description": "Parameter basicAllocator with type `bsl::allocator<int>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslstl_sharedptr.h|bsl::allocate_shared<6ab32a0d4dc2c717>|PULSE_CONST_REFABLE",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "8caa244190b7cf15ed3d8ded1a041dd7",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::allocator<int>"
        }
    },
    {
        "bug_type": "INFINITE_LOOP",
        "qualifier": "Recurring state leading to infinite execution at line 91, column 5.",
        "severity": "ERROR",
        "category": "No_category",
        "line": 91,
        "column": 5,
        "procedure": "BloombergLP::bslstl::StopState::deregister",
        "procedure_start_line": 71,
        "file": "thirdparty/bde/groups/bsl/bslstl/bslstl_stopstate.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bsl/bslstl/bslstl_stopstate.cpp",
                "line_number": 91,
                "column_number": 5,
                "description": "in loop"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslstl_stopstate.cpp|deregister|INFINITE_LOOP",
        "node_key": "e1000a1bd717f93a40e9389b449c7fad",
        "hash": "5d46feb124f72f0f449c03501e6f91aa",
        "bug_type_hum": "Infinite Loop",
        "extras": {}
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `allocator` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 61,
        "column": 1,
        "procedure": "bsl::stop_source::stop_source",
        "procedure_start_line": 61,
        "file": "thirdparty/bde/groups/bsl/bslstl/bslstl_stoptoken.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bsl/bslstl/bslstl_stoptoken.cpp",
                "line_number": 61,
                "column_number": 1,
                "description": "Parameter allocator with type `bsl::allocator<char>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslstl_stoptoken.cpp|stop_source|PULSE_CONST_REFABLE",
        "node_key": "c6fa565f3b7c7ccae1833e95de7ade09",
        "hash": "0922d58c165c796188b9d601f72e82f0",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::allocator<char>"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `operation` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 5264,
        "column": 1,
        "procedure": "bsl::basic_string<char,std::char_traits<char>,bsl::allocator<char>>::resize_and_overwrite<136a0a417d107dd4>",
        "procedure_start_line": 5264,
        "file": "thirdparty/bde/groups/bsl/bslstl/bslstl_string.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bsl/bslstl/bslstl_string.h",
                "line_number": 5264,
                "column_number": 1,
                "description": "Parameter operation with type `BloombergLP::bdlf::MemFnInstance<void,std::basic_streambuf<char,std::char_traits<char>>*>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "bslstl_string.h|resize_and_overwrite<136a0a417d107dd4>|PULSE_CONST_REFABLE",
        "node_key": "e5dfa1e1409756bdc4277d472b543297",
        "hash": "65a3b6cb543184f54f6bf2da359a07ac",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "BloombergLP::bdlf::MemFnInstance<void,std::basic_streambuf<char,std::char_traits<char>>*>"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "`allocator` is copied into field `d_allocator` but is not modified afterwards.",
        "suggestion": "Rather than copying into the field, move into it instead.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 2716,
        "column": 7,
        "procedure": "BloombergLP::bslstl::Variant_AllocatorBase<1>::Variant_AllocatorBase",
        "procedure_start_line": 2713,
        "file": "thirdparty/bde/groups/bsl/bslstl/bslstl_variant.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bsl/bslstl/bslstl_variant.h",
                "line_number": 2691,
                "column_number": 8,
                "description": "first instantiated at"
            },
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bsl/bslstl/bslstl_variant.h",
                "line_number": 2716,
                "column_number": 7,
                "description": "copied here (with type `bsl::allocator<char>&`)"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "bslstl_variant.h|Variant_AllocatorBase|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "d07c5fda9972827a5ebf6eab35ad20d3",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "bsl::allocator<char>&"
        },
        "autofix": {
            "original": "d_allocator(allocator)",
            "replacement": "d_allocator(std::move(allocator))"
        }
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`length` is read without initialization during the call to `BloombergLP::bslx::TestInStream::getLength()`.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 467,
        "column": 5,
        "procedure": "BloombergLP::bslx::TestInStream::getString",
        "procedure_start_line": 464,
        "file": "thirdparty/bde/groups/bsl/bslx/bslx_testinstream.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bsl/bslx/bslx_testinstream.cpp",
                "line_number": 464,
                "column_number": 1,
                "description": "variable `length` declared here"
            },
            {
                "level": 0,
                "filename": "thirdparty/bde/groups/bsl/bslx/bslx_testinstream.cpp",
                "line_number": 467,
                "column_number": 5,
                "description": "when calling `BloombergLP::bslx::TestInStream::getLength` here"
            },
            {
                "level": 1,
                "filename": "thirdparty/bde/groups/bsl/bslx/bslx_testinstream.cpp",
                "line_number": 135,
                "column_number": 1,
                "description": "parameter `variable` of BloombergLP::bslx::TestInStream::getLength"
            },
            {
                "level": 1,
                "filename": "thirdparty/bde/groups/bsl/bslx/bslx_testinstream.cpp",
                "line_number": 148,
                "column_number": 17,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 4,
        "bug_trace_max_depth": 1,
        "key": "bslx_testinstream.cpp|getString|PULSE_UNINITIALIZED_VALUE",
        "node_key": "65ff89e87db15c052009da72e05071c5",
        "hash": "1bff7f52a1f863ebef1f1bc223cf77d9",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`y.sign` is read without initialization during the call to `__dpml_bid_multiply__()`.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 84,
        "column": 5,
        "procedure": "bid_f128_mul",
        "procedure_start_line": 65,
        "file": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/float128/dpml_ux_bid.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/float128/dpml_ux_bid.c",
                "line_number": 65,
                "column_number": 1,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/float128/dpml_ux.h",
                "line_number": 222,
                "column_number": -1,
                "description": "struct field address `sign` created"
            },
            {
                "level": 0,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/float128/dpml_ux_bid.c",
                "line_number": 84,
                "column_number": 5,
                "description": "when calling `__dpml_bid_multiply__` here"
            },
            {
                "level": 1,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/float128/dpml_ux_ops_64.c",
                "line_number": 43,
                "column_number": 1,
                "description": "parameter `y` of __dpml_bid_multiply__"
            },
            {
                "level": 1,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/float128/dpml_ux_ops_64.c",
                "line_number": 56,
                "column_number": 9,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/float128/dpml_ux.h",
                "line_number": 106,
                "column_number": -1,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 4,
        "bug_trace_max_depth": 1,
        "key": "dpml_ux_bid.c|bid_f128_mul|PULSE_UNINITIALIZED_VALUE",
        "node_key": "cf0297b55f41cdc5e428d3c95e4a2814",
        "hash": "06b932001ed0c886e22d72d66fef0e6a",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`y.sign` is read without initialization during the call to `__dpml_bid_addsub__()`.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 154,
        "column": 5,
        "procedure": "bid_f128_add",
        "procedure_start_line": 135,
        "file": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/float128/dpml_ux_bid.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/float128/dpml_ux_bid.c",
                "line_number": 135,
                "column_number": 1,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/float128/dpml_ux.h",
                "line_number": 222,
                "column_number": -1,
                "description": "struct field address `sign` created"
            },
            {
                "level": 0,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/float128/dpml_ux_bid.c",
                "line_number": 154,
                "column_number": 5,
                "description": "when calling `__dpml_bid_addsub__` here"
            },
            {
                "level": 1,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/float128/dpml_ux_ops.c",
                "line_number": 187,
                "column_number": 1,
                "description": "parameter `y` of __dpml_bid_addsub__"
            },
            {
                "level": 1,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/float128/dpml_ux_ops.c",
                "line_number": 207,
                "column_number": 22,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/float128/dpml_ux.h",
                "line_number": 106,
                "column_number": -1,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 4,
        "bug_trace_max_depth": 1,
        "key": "dpml_ux_bid.c|bid_f128_add|PULSE_UNINITIALIZED_VALUE",
        "node_key": "cf0297b55f41cdc5e428d3c95e4a2814",
        "hash": "ca74525713a255fe053a6f8e92590fb2",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`y.sign` is read without initialization during the call to `__dpml_bid_addsub__()`.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 189,
        "column": 5,
        "procedure": "bid_f128_sub",
        "procedure_start_line": 170,
        "file": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/float128/dpml_ux_bid.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/float128/dpml_ux_bid.c",
                "line_number": 170,
                "column_number": 1,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/float128/dpml_ux.h",
                "line_number": 222,
                "column_number": -1,
                "description": "struct field address `sign` created"
            },
            {
                "level": 0,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/float128/dpml_ux_bid.c",
                "line_number": 189,
                "column_number": 5,
                "description": "when calling `__dpml_bid_addsub__` here"
            },
            {
                "level": 1,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/float128/dpml_ux_ops.c",
                "line_number": 187,
                "column_number": 1,
                "description": "parameter `y` of __dpml_bid_addsub__"
            },
            {
                "level": 1,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/float128/dpml_ux_ops.c",
                "line_number": 207,
                "column_number": 22,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/float128/dpml_ux.h",
                "line_number": 106,
                "column_number": -1,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 4,
        "bug_trace_max_depth": 1,
        "key": "dpml_ux_bid.c|bid_f128_sub|PULSE_UNINITIALIZED_VALUE",
        "node_key": "cf0297b55f41cdc5e428d3c95e4a2814",
        "hash": "0f42f1cd48f8b0960b5ec6f98fd324cc",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`unpacked_y.exponent` is read without initialization during the call to `__dpml_bid_ux_cmp__()`.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 396,
        "column": 14,
        "procedure": "bid_f128_cmp",
        "procedure_start_line": 374,
        "file": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/float128/dpml_ux_bid.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/float128/dpml_ux_bid.c",
                "line_number": 374,
                "column_number": 1,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/float128/dpml_ux.h",
                "line_number": 268,
                "column_number": -1,
                "description": "struct field address `exponent` created"
            },
            {
                "level": 0,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/float128/dpml_ux_bid.c",
                "line_number": 396,
                "column_number": 14,
                "description": "when calling `__dpml_bid_ux_cmp__` here"
            },
            {
                "level": 1,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/float128/dpml_ux_bid.c",
                "line_number": 334,
                "column_number": 1,
                "description": "parameter `unpacked_y` of __dpml_bid_ux_cmp__"
            },
            {
                "level": 1,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/float128/dpml_ux_bid.c",
                "line_number": 350,
                "column_number": 34,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/float128/dpml_ux.h",
                "line_number": 107,
                "column_number": -1,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 4,
        "bug_trace_max_depth": 1,
        "key": "dpml_ux_bid.c|bid_f128_cmp|PULSE_UNINITIALIZED_VALUE",
        "node_key": "f8da84ff61ed6f7097abca6732e3fbdd",
        "hash": "f34a613ff461b198d26de618009d4cf2",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`unpacked_y.exponent` is read without initialization during the call to `__dpml_bid_ux_cmp__()`.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 427,
        "column": 14,
        "procedure": "bid_f128_nextafter",
        "procedure_start_line": 404,
        "file": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/float128/dpml_ux_bid.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/float128/dpml_ux_bid.c",
                "line_number": 404,
                "column_number": 1,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/float128/dpml_ux.h",
                "line_number": 222,
                "column_number": -1,
                "description": "struct field address `exponent` created"
            },
            {
                "level": 0,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/float128/dpml_ux_bid.c",
                "line_number": 427,
                "column_number": 14,
                "description": "when calling `__dpml_bid_ux_cmp__` here"
            },
            {
                "level": 1,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/float128/dpml_ux_bid.c",
                "line_number": 334,
                "column_number": 1,
                "description": "parameter `unpacked_y` of __dpml_bid_ux_cmp__"
            },
            {
                "level": 1,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/float128/dpml_ux_bid.c",
                "line_number": 350,
                "column_number": 34,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/float128/dpml_ux.h",
                "line_number": 107,
                "column_number": -1,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 4,
        "bug_trace_max_depth": 1,
        "key": "dpml_ux_bid.c|bid_f128_nextafter|PULSE_UNINITIALIZED_VALUE",
        "node_key": "7d3449f323b72026defe426f770b7578",
        "hash": "48c4d37301df23dca27fceca2faf5be1",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`argument.exponent` is read without initialization during the call to `__dpml_bid_pack__()`.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 265,
        "column": 9,
        "procedure": "__dpml_bid_C_rnd_to_int__",
        "procedure_start_line": 224,
        "file": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/float128/dpml_ux_int.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/float128/dpml_ux_int.c",
                "line_number": 224,
                "column_number": 1,
                "description": "struct field address `exponent` created"
            },
            {
                "level": 0,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/float128/dpml_ux_int.c",
                "line_number": 265,
                "column_number": 9,
                "description": "when calling `__dpml_bid_pack__` here"
            },
            {
                "level": 1,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/float128/dpml_ux_ops.c",
                "line_number": 746,
                "column_number": 1,
                "description": "parameter `unpacked_result` of __dpml_bid_pack__"
            },
            {
                "level": 1,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/float128/dpml_ux_ops.c",
                "line_number": 767,
                "column_number": 5,
                "description": "when calling `__dpml_bid_ffs_and_shift__` here"
            },
            {
                "level": 2,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/float128/dpml_ux_ops.c",
                "line_number": 74,
                "column_number": 1,
                "description": "macro expanded here"
            },
            {
                "level": 2,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/float128/architecture.h",
                "line_number": 709,
                "column_number": -1,
                "description": "parameter `argument` of __dpml_bid_ffs_and_shift__"
            },
            {
                "level": 2,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/float128/dpml_ux_ops.c",
                "line_number": 87,
                "column_number": 20,
                "description": "macro expanded here"
            },
            {
                "level": 2,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/float128/dpml_ux.h",
                "line_number": 107,
                "column_number": -1,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 6,
        "bug_trace_max_depth": 2,
        "key": "dpml_ux_int.c|__dpml_bid_C_rnd_to_int__|PULSE_UNINITIALIZED_VALUE",
        "node_key": "b34edf6d20d9793b78a2d881e78776ff",
        "hash": "a6b09d48d91d07d44f4fc95e44efb4b5",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`underflow_error` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 314,
        "column": 9,
        "procedure": "bid_f128_atanh",
        "procedure_start_line": 240,
        "file": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/float128/dpml_ux_inv_hyper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/float128/dpml_ux_inv_hyper.c",
                "line_number": 240,
                "column_number": 1,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/float128/dpml_ux.h",
                "line_number": 222,
                "column_number": -1,
                "description": "variable `underflow_error` declared here"
            },
            {
                "level": 0,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/float128/dpml_ux_inv_hyper.c",
                "line_number": 314,
                "column_number": 9,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "dpml_ux_inv_hyper.c|bid_f128_atanh|PULSE_UNINITIALIZED_VALUE",
        "node_key": "d6dd64a5038abccd4d5578811eb7293c",
        "hash": "359c38ed511c26fb9f7da23dc9364e9d",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`fpsf` is read without initialization during the call to `__bid128_from_string()`.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 1250,
        "column": 7,
        "procedure": "__bid128_nan",
        "procedure_start_line": 1231,
        "file": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/src/inteldfp/bid128_noncomp.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/src/inteldfp/bid128_noncomp.c",
                "line_number": 1231,
                "column_number": 1,
                "description": "variable `fpsf` declared here"
            },
            {
                "level": 0,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/src/inteldfp/bid128_noncomp.c",
                "line_number": 1240,
                "column_number": 3,
                "description": "assigned"
            },
            {
                "level": 0,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/src/inteldfp/bid128_noncomp.c",
                "line_number": 1250,
                "column_number": 7,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/src/inteldfp/bid_conf.h",
                "line_number": 532,
                "column_number": -1,
                "description": "when calling `__bid128_from_string` here"
            },
            {
                "level": 1,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/src/inteldfp/bid128_string.c",
                "line_number": 286,
                "column_number": 1,
                "description": "parameter `pfpsf` of __bid128_from_string"
            },
            {
                "level": 1,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/src/inteldfp/bid128_string.c",
                "line_number": 306,
                "column_number": 15,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 5,
        "bug_trace_max_depth": 1,
        "key": "bid128_noncomp.c|__bid128_nan|PULSE_UNINITIALIZED_VALUE",
        "node_key": "56c0d44f1242e733b5aa4373a8c00f39",
        "hash": "c7ebc54047927de58d7dadb0b0e46912",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`fpsf` is read without initialization during the call to `__bid32_from_string()`.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 984,
        "column": 7,
        "procedure": "__bid32_nan",
        "procedure_start_line": 965,
        "file": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/src/inteldfp/bid32_noncomp.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/src/inteldfp/bid32_noncomp.c",
                "line_number": 965,
                "column_number": 1,
                "description": "variable `fpsf` declared here"
            },
            {
                "level": 0,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/src/inteldfp/bid32_noncomp.c",
                "line_number": 975,
                "column_number": 3,
                "description": "assigned"
            },
            {
                "level": 0,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/src/inteldfp/bid32_noncomp.c",
                "line_number": 984,
                "column_number": 7,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/src/inteldfp/bid_conf.h",
                "line_number": 188,
                "column_number": -1,
                "description": "when calling `__bid32_from_string` here"
            },
            {
                "level": 1,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/src/inteldfp/bid32_string.c",
                "line_number": 166,
                "column_number": 1,
                "description": "parameter `pfpsf` of __bid32_from_string"
            },
            {
                "level": 1,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/src/inteldfp/bid32_string.c",
                "line_number": 185,
                "column_number": 15,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 5,
        "bug_trace_max_depth": 1,
        "key": "bid32_noncomp.c|__bid32_nan|PULSE_UNINITIALIZED_VALUE",
        "node_key": "56c0d44f1242e733b5aa4373a8c00f39",
        "hash": "cdd26eb5ef5d3b6131a93bd80d77f099",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`fpsf` is read without initialization during the call to `__bid64_from_string()`.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 1013,
        "column": 7,
        "procedure": "__bid64_nan",
        "procedure_start_line": 995,
        "file": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/src/inteldfp/bid64_noncomp.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/src/inteldfp/bid64_noncomp.c",
                "line_number": 995,
                "column_number": 1,
                "description": "variable `fpsf` declared here"
            },
            {
                "level": 0,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/src/inteldfp/bid64_noncomp.c",
                "line_number": 1004,
                "column_number": 3,
                "description": "assigned"
            },
            {
                "level": 0,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/src/inteldfp/bid64_noncomp.c",
                "line_number": 1013,
                "column_number": 7,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/src/inteldfp/bid_conf.h",
                "line_number": 379,
                "column_number": -1,
                "description": "when calling `__bid64_from_string` here"
            },
            {
                "level": 1,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/src/inteldfp/bid64_string.c",
                "line_number": 252,
                "column_number": 1,
                "description": "parameter `pfpsf` of __bid64_from_string"
            },
            {
                "level": 1,
                "filename": "thirdparty/bde/thirdparty/inteldfp/LIBRARY/src/inteldfp/bid64_string.c",
                "line_number": 271,
                "column_number": 15,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 5,
        "bug_trace_max_depth": 1,
        "key": "bid64_noncomp.c|__bid64_nan|PULSE_UNINITIALIZED_VALUE",
        "node_key": "56c0d44f1242e733b5aa4373a8c00f39",
        "hash": "28eaa6b1f19a2e311b63eb6109c1d0bb",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "NULLPTR_DEREFERENCE",
        "qualifier": "`result` could be null (null value originating from line 506) and is dereferenced in the call to `ryu_d2s_buffered()`.",
        "severity": "ERROR",
        "category": "Null pointer dereference",
        "line": 507,
        "column": 3,
        "procedure": "ryu_d2s",
        "procedure_start_line": 505,
        "file": "thirdparty/bde/thirdparty/ryu/d2s.c",
        "bug_trace": [
            {
                "level": 1,
                "filename": "thirdparty/bde/thirdparty/ryu/d2s.c",
                "line_number": 506,
                "column_number": 32,
                "description": "in call to `malloc (null case)` (modelled)"
            },
            {
                "level": 1,
                "filename": "thirdparty/bde/thirdparty/ryu/d2s.c",
                "line_number": 506,
                "column_number": 32,
                "description": "is assigned to the null pointer"
            },
            {
                "level": 1,
                "filename": "thirdparty/bde/thirdparty/ryu/d2s.c",
                "line_number": 506,
                "column_number": 3,
                "description": "assigned"
            },
            {
                "level": 1,
                "filename": "thirdparty/bde/thirdparty/ryu/d2s.c",
                "line_number": 507,
                "column_number": 3,
                "description": "when calling `ryu_d2s_buffered` here"
            },
            {
                "level": 2,
                "filename": "thirdparty/bde/thirdparty/ryu/d2s.c",
                "line_number": 498,
                "column_number": 1,
                "description": "parameter `result` of ryu_d2s_buffered"
            },
            {
                "level": 2,
                "filename": "thirdparty/bde/thirdparty/ryu/d2s.c",
                "line_number": 499,
                "column_number": 21,
                "description": "when calling `ryu_d2s_buffered_n` here"
            },
            {
                "level": 3,
                "filename": "thirdparty/bde/thirdparty/ryu/d2s.c",
                "line_number": 454,
                "column_number": 1,
                "description": "parameter `result` of ryu_d2s_buffered_n"
            },
            {
                "level": 3,
                "filename": "thirdparty/bde/thirdparty/ryu/d2s.c",
                "line_number": 472,
                "column_number": 12,
                "description": "when calling `copy_special_str` here"
            },
            {
                "level": 4,
                "filename": "thirdparty/bde/thirdparty/ryu/common.h",
                "line_number": 86,
                "column_number": 1,
                "description": "parameter `result` of copy_special_str"
            },
            {
                "level": 4,
                "filename": "thirdparty/bde/thirdparty/ryu/common.h",
                "line_number": 86,
                "column_number": 1,
                "description": "parameter `sign` of copy_special_str"
            },
            {
                "level": 4,
                "filename": "thirdparty/bde/thirdparty/ryu/common.h",
                "line_number": 98,
                "column_number": 3,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 11,
        "bug_trace_max_depth": 4,
        "key": "d2s.c|ryu_d2s|NULLPTR_DEREFERENCE",
        "node_key": "9ccc40f0e4f10f6dd5f9f803ec43bfd1",
        "hash": "068636c8dbabff38f8421af0bd08d13e",
        "bug_type_hum": "Null Dereference",
        "extras": {}
    },
    {
        "bug_type": "NULLPTR_DEREFERENCE",
        "qualifier": "`result` could be null (null value originating from line 342) and is dereferenced in the call to `ryu_f2s_buffered()`.",
        "severity": "ERROR",
        "category": "Null pointer dereference",
        "line": 343,
        "column": 3,
        "procedure": "ryu_f2s",
        "procedure_start_line": 341,
        "file": "thirdparty/bde/thirdparty/ryu/f2s.c",
        "bug_trace": [
            {
                "level": 1,
                "filename": "thirdparty/bde/thirdparty/ryu/f2s.c",
                "line_number": 342,
                "column_number": 32,
                "description": "in call to `malloc (null case)` (modelled)"
            },
            {
                "level": 1,
                "filename": "thirdparty/bde/thirdparty/ryu/f2s.c",
                "line_number": 342,
                "column_number": 32,
                "description": "is assigned to the null pointer"
            },
            {
                "level": 1,
                "filename": "thirdparty/bde/thirdparty/ryu/f2s.c",
                "line_number": 342,
                "column_number": 3,
                "description": "assigned"
            },
            {
                "level": 1,
                "filename": "thirdparty/bde/thirdparty/ryu/f2s.c",
                "line_number": 343,
                "column_number": 3,
                "description": "when calling `ryu_f2s_buffered` here"
            },
            {
                "level": 2,
                "filename": "thirdparty/bde/thirdparty/ryu/f2s.c",
                "line_number": 334,
                "column_number": 1,
                "description": "parameter `result` of ryu_f2s_buffered"
            },
            {
                "level": 2,
                "filename": "thirdparty/bde/thirdparty/ryu/f2s.c",
                "line_number": 335,
                "column_number": 21,
                "description": "when calling `ryu_f2s_buffered_n` here"
            },
            {
                "level": 3,
                "filename": "thirdparty/bde/thirdparty/ryu/f2s.c",
                "line_number": 308,
                "column_number": 1,
                "description": "parameter `result` of ryu_f2s_buffered_n"
            },
            {
                "level": 3,
                "filename": "thirdparty/bde/thirdparty/ryu/f2s.c",
                "line_number": 327,
                "column_number": 12,
                "description": "when calling `copy_special_str` here"
            },
            {
                "level": 4,
                "filename": "thirdparty/bde/thirdparty/ryu/common.h",
                "line_number": 86,
                "column_number": 1,
                "description": "parameter `result` of copy_special_str"
            },
            {
                "level": 4,
                "filename": "thirdparty/bde/thirdparty/ryu/common.h",
                "line_number": 86,
                "column_number": 1,
                "description": "parameter `sign` of copy_special_str"
            },
            {
                "level": 4,
                "filename": "thirdparty/bde/thirdparty/ryu/common.h",
                "line_number": 98,
                "column_number": 3,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 11,
        "bug_trace_max_depth": 4,
        "key": "f2s.c|ryu_f2s|NULLPTR_DEREFERENCE",
        "node_key": "9ccc40f0e4f10f6dd5f9f803ec43bfd1",
        "hash": "7379331f436b30d1c59fa32c5f6baa24",
        "bug_type_hum": "Null Dereference",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY",
        "qualifier": "copied variable `result` is not modified after it is copied from `invocation->d_result` on line 1386.",
        "suggestion": "To avoid the copy, use reference `&`. If this copy was intentional, call `folly::copy` to make it explicit and hence suppress the warning.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 1386,
        "column": 17,
        "procedure": "TestMock::InvocationImpl<BloombergLP::ntcd::ReactorMock::MethodInfo645,void*,BloombergLP::bslmf::TypeList<BloombergLP::ntca::WaiterOptions const &>>::invokeEpilogue",
        "procedure_start_line": 1383,
        "file": "thirdparty/ntf-core/groups/ntc/ntccfg/ntccfg_test.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntccfg/ntccfg_test.h",
                "line_number": 1550,
                "column_number": 55,
                "description": "first instantiated at"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntccfg/ntccfg_test.h",
                "line_number": 1386,
                "column_number": 17,
                "description": "copied here (with type `TestMock::InvocationResult<void*>&`)"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "ntccfg_test.h|invokeEpilogue|PULSE_UNNECESSARY_COPY",
        "node_key": "7d8c45ed01e55aba992fbb0ffb6aa875",
        "hash": "9a0039ded137032be0b34b8d09c75d3f",
        "bug_type_hum": "Unnecessary Copy",
        "extras": {
            "copy_type": "TestMock::InvocationResult<void*>&"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "`iterator` is copied into field `d_iterator` but is not modified afterwards.",
        "suggestion": "Rather than copying into the field, move into it instead.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 3971,
        "column": 3,
        "procedure": "BloombergLP::ntcd::Monitor::Entry::Entry",
        "procedure_start_line": 3957,
        "file": "thirdparty/ntf-core/groups/ntc/ntcd/ntcd_machine.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcd/ntcd_machine.cpp",
                "line_number": 3971,
                "column_number": 3,
                "description": "copied here (with type `bsl::List_Iterator<bsl::shared_ptr<BloombergLP::ntcd::Monitor::Entry>>&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "ntcd_machine.cpp|Entry|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "71c5e3a68a6f72fd62e4aeb1d81b3ee8",
        "hash": "f2d6249e3daa833ba024b561904d7e9d",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "bsl::List_Iterator<bsl::shared_ptr<BloombergLP::ntcd::Monitor::Entry>>&"
        },
        "autofix": {
            "original": "d_iterator(iterator)",
            "replacement": "d_iterator(std::move(iterator))"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY",
        "qualifier": "copied variable `receive` is not modified after it is copied from `this->d_receiveQueue.front()` on line 613.",
        "suggestion": "To avoid the copy, use reference `&`. If this copy was intentional, call `folly::copy` to make it explicit and hence suppress the warning.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 613,
        "column": 27,
        "procedure": "BloombergLP::ntcd::Proactor::Work::processError",
        "procedure_start_line": 565,
        "file": "thirdparty/ntf-core/groups/ntc/ntcd/ntcd_proactor.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcd/ntcd_proactor.cpp",
                "line_number": 613,
                "column_number": 27,
                "description": "copied here (with type `BloombergLP::ntcd::Proactor::Work::Receive&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "ntcd_proactor.cpp|processError|PULSE_UNNECESSARY_COPY",
        "node_key": "94f1494332380ec11d9ac197982a535e",
        "hash": "a8d2393c2d81bc146aee39efd5342890",
        "bug_type_hum": "Unnecessary Copy",
        "extras": {
            "copy_type": "BloombergLP::ntcd::Proactor::Work::Receive&"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_ASSIGNMENT",
        "qualifier": "`value` is copy assigned into field `d_iteratorByDomainName` but is not modified afterwards.",
        "suggestion": "Rather than copying into the field, move into it instead.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 94,
        "column": 5,
        "procedure": "BloombergLP::ntcdns::CacheHostEntry::setIteratorByDomainName",
        "procedure_start_line": 91,
        "file": "thirdparty/ntf-core/groups/ntc/ntcdns/ntcdns_cache.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcdns/ntcdns_cache.cpp",
                "line_number": 94,
                "column_number": 5,
                "description": "copy assigned here (with type `BloombergLP::bslstl::HashTableIterator<bsl::pair<bsl::basic_string<char,std::char_traits<char>,bsl::allocator<char>> const ,bsl::shared_ptr<BloombergLP::ntcdns::CacheHostEntry>>,long>&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "ntcdns_cache.cpp|setIteratorByDomainName|PULSE_UNNECESSARY_COPY_ASSIGNMENT",
        "node_key": "ad8fc35725a4bc9e3acb67485246284f",
        "hash": "c53605658f207ba6996f4df1f5278fbe",
        "bug_type_hum": "Unnecessary Copy Assignment",
        "extras": {
            "copy_type": "BloombergLP::bslstl::HashTableIterator<bsl::pair<bsl::basic_string<char,std::char_traits<char>,bsl::allocator<char>> const ,bsl::shared_ptr<BloombergLP::ntcdns::CacheHostEntry>>,long>&"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_ASSIGNMENT",
        "qualifier": "`value` is copy assigned into field `d_iteratorByIpAddress` but is not modified afterwards.",
        "suggestion": "Rather than copying into the field, move into it instead.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 100,
        "column": 5,
        "procedure": "BloombergLP::ntcdns::CacheHostEntry::setIteratorByIpAddress",
        "procedure_start_line": 97,
        "file": "thirdparty/ntf-core/groups/ntc/ntcdns/ntcdns_cache.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcdns/ntcdns_cache.cpp",
                "line_number": 100,
                "column_number": 5,
                "description": "copy assigned here (with type `BloombergLP::bslstl::HashTableIterator<bsl::pair<BloombergLP::ntsa::IpAddress const ,bsl::shared_ptr<BloombergLP::ntcdns::CacheHostEntry>>,long>&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "ntcdns_cache.cpp|setIteratorByIpAddress|PULSE_UNNECESSARY_COPY_ASSIGNMENT",
        "node_key": "ad8fc35725a4bc9e3acb67485246284f",
        "hash": "cda8b2d7be61f886aad8bd4ecaeefbfd",
        "bug_type_hum": "Unnecessary Copy Assignment",
        "extras": {
            "copy_type": "BloombergLP::bslstl::HashTableIterator<bsl::pair<BloombergLP::ntsa::IpAddress const ,bsl::shared_ptr<BloombergLP::ntcdns::CacheHostEntry>>,long>&"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `&ipAddressList` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 570,
        "column": 31,
        "procedure": "BloombergLP::ntcdns::ClientGetIpAddressOperation::processError",
        "procedure_start_line": 550,
        "file": "thirdparty/ntf-core/groups/ntc/ntcdns/ntcdns_client.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcdns/ntcdns_client.cpp",
                "line_number": 570,
                "column_number": 31,
                "description": "copied here (with type `bsl::vector<BloombergLP::ntsa::IpAddress,bsl::allocator<BloombergLP::ntsa::IpAddress>>&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "ntcdns_client.cpp|processError|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "5b17e3185e9c627b267d0cf20a95f891",
        "hash": "a40d206edfd444511cdad3db85610058",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "bsl::vector<BloombergLP::ntsa::IpAddress,bsl::allocator<BloombergLP::ntsa::IpAddress>>&"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `&event` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 570,
        "column": 46,
        "procedure": "BloombergLP::ntcdns::ClientGetIpAddressOperation::processError",
        "procedure_start_line": 550,
        "file": "thirdparty/ntf-core/groups/ntc/ntcdns/ntcdns_client.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcdns/ntcdns_client.cpp",
                "line_number": 570,
                "column_number": 46,
                "description": "copied here (with type `BloombergLP::ntca::GetIpAddressEvent&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "ntcdns_client.cpp|processError|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "5b17e3185e9c627b267d0cf20a95f891",
        "hash": "9af9043e98d3b17b26bbfd8f58e0386a",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "BloombergLP::ntca::GetIpAddressEvent&"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `&domainName` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 862,
        "column": 31,
        "procedure": "BloombergLP::ntcdns::ClientGetDomainNameOperation::processError",
        "procedure_start_line": 842,
        "file": "thirdparty/ntf-core/groups/ntc/ntcdns/ntcdns_client.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcdns/ntcdns_client.cpp",
                "line_number": 862,
                "column_number": 31,
                "description": "copied here (with type `bsl::basic_string<char,std::char_traits<char>,bsl::allocator<char>>&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "ntcdns_client.cpp|processError|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "5b17e3185e9c627b267d0cf20a95f891",
        "hash": "5a0b1d5767b85f68226fba6f6d83769b",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "bsl::basic_string<char,std::char_traits<char>,bsl::allocator<char>>&"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `&event` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 862,
        "column": 43,
        "procedure": "BloombergLP::ntcdns::ClientGetDomainNameOperation::processError",
        "procedure_start_line": 842,
        "file": "thirdparty/ntf-core/groups/ntc/ntcdns/ntcdns_client.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcdns/ntcdns_client.cpp",
                "line_number": 862,
                "column_number": 43,
                "description": "copied here (with type `BloombergLP::ntca::GetDomainNameEvent&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "ntcdns_client.cpp|processError|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "5b17e3185e9c627b267d0cf20a95f891",
        "hash": "ad189912c42f78b200794b5c11cd0b71",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "BloombergLP::ntca::GetDomainNameEvent&"
        }
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`_.qr` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 1010,
        "column": 62,
        "procedure": "BloombergLP::ntcdns::Header::decode",
        "procedure_start_line": 991,
        "file": "thirdparty/ntf-core/groups/ntc/ntcdns/ntcdns_protocol.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcdns/ntcdns_protocol.cpp",
                "line_number": 1003,
                "column_number": 9,
                "description": "struct field address `qr` created"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcdns/ntcdns_protocol.cpp",
                "line_number": 1010,
                "column_number": 62,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "ntcdns_protocol.cpp|decode|PULSE_UNINITIALIZED_VALUE",
        "node_key": "3d1b705d5cbba758a2433d0439f13b6f",
        "hash": "390114418c0f55035b172cb68fb05fc4",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`_.opcode` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 1016,
        "column": 62,
        "procedure": "BloombergLP::ntcdns::Header::decode",
        "procedure_start_line": 991,
        "file": "thirdparty/ntf-core/groups/ntc/ntcdns/ntcdns_protocol.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcdns/ntcdns_protocol.cpp",
                "line_number": 1003,
                "column_number": 9,
                "description": "struct field address `opcode` created"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcdns/ntcdns_protocol.cpp",
                "line_number": 1016,
                "column_number": 62,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "ntcdns_protocol.cpp|decode|PULSE_UNINITIALIZED_VALUE",
        "node_key": "3d1b705d5cbba758a2433d0439f13b6f",
        "hash": "d1e685a63478b867e556a23fb008a968",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`_.aa` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 1021,
        "column": 16,
        "procedure": "BloombergLP::ntcdns::Header::decode",
        "procedure_start_line": 991,
        "file": "thirdparty/ntf-core/groups/ntc/ntcdns/ntcdns_protocol.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcdns/ntcdns_protocol.cpp",
                "line_number": 1003,
                "column_number": 9,
                "description": "struct field address `aa` created"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcdns/ntcdns_protocol.cpp",
                "line_number": 1021,
                "column_number": 16,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "ntcdns_protocol.cpp|decode|PULSE_UNINITIALIZED_VALUE",
        "node_key": "bf0bac0ca2d4710224e9480e6b6ee2c9",
        "hash": "f2d94818ed5f310b9d1daefe177164df",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`_.tc` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 1022,
        "column": 16,
        "procedure": "BloombergLP::ntcdns::Header::decode",
        "procedure_start_line": 991,
        "file": "thirdparty/ntf-core/groups/ntc/ntcdns/ntcdns_protocol.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcdns/ntcdns_protocol.cpp",
                "line_number": 1003,
                "column_number": 9,
                "description": "struct field address `tc` created"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcdns/ntcdns_protocol.cpp",
                "line_number": 1022,
                "column_number": 16,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "ntcdns_protocol.cpp|decode|PULSE_UNINITIALIZED_VALUE",
        "node_key": "72e94d49370130590d17277631fd9f67",
        "hash": "7d0e708f2864809d7d23aec88d407a82",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`_.rd` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 1023,
        "column": 16,
        "procedure": "BloombergLP::ntcdns::Header::decode",
        "procedure_start_line": 991,
        "file": "thirdparty/ntf-core/groups/ntc/ntcdns/ntcdns_protocol.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcdns/ntcdns_protocol.cpp",
                "line_number": 1003,
                "column_number": 9,
                "description": "struct field address `rd` created"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcdns/ntcdns_protocol.cpp",
                "line_number": 1023,
                "column_number": 16,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "ntcdns_protocol.cpp|decode|PULSE_UNINITIALIZED_VALUE",
        "node_key": "72e94d49370130590d17277631fd9f67",
        "hash": "846aec0d84fa81dca6e40d26bd0d3b9f",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`_.ra` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 1024,
        "column": 16,
        "procedure": "BloombergLP::ntcdns::Header::decode",
        "procedure_start_line": 991,
        "file": "thirdparty/ntf-core/groups/ntc/ntcdns/ntcdns_protocol.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcdns/ntcdns_protocol.cpp",
                "line_number": 1003,
                "column_number": 9,
                "description": "struct field address `ra` created"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcdns/ntcdns_protocol.cpp",
                "line_number": 1024,
                "column_number": 16,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "ntcdns_protocol.cpp|decode|PULSE_UNINITIALIZED_VALUE",
        "node_key": "72e94d49370130590d17277631fd9f67",
        "hash": "3f69efaa920e50cd2ca663fdc2f28f4d",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`_.cd` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 1025,
        "column": 16,
        "procedure": "BloombergLP::ntcdns::Header::decode",
        "procedure_start_line": 991,
        "file": "thirdparty/ntf-core/groups/ntc/ntcdns/ntcdns_protocol.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcdns/ntcdns_protocol.cpp",
                "line_number": 1003,
                "column_number": 9,
                "description": "struct field address `cd` created"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcdns/ntcdns_protocol.cpp",
                "line_number": 1025,
                "column_number": 16,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "ntcdns_protocol.cpp|decode|PULSE_UNINITIALIZED_VALUE",
        "node_key": "2797f3577e9ca5ddb3a75a7ee4ea135f",
        "hash": "5cd16fea085044595b26b85af935e589",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`_.rcode` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 1028,
        "column": 63,
        "procedure": "BloombergLP::ntcdns::Header::decode",
        "procedure_start_line": 991,
        "file": "thirdparty/ntf-core/groups/ntc/ntcdns/ntcdns_protocol.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcdns/ntcdns_protocol.cpp",
                "line_number": 1003,
                "column_number": 9,
                "description": "struct field address `rcode` created"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcdns/ntcdns_protocol.cpp",
                "line_number": 1028,
                "column_number": 63,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "ntcdns_protocol.cpp|decode|PULSE_UNINITIALIZED_VALUE",
        "node_key": "844de5ee3b1ce56a23536e42922eaf0a",
        "hash": "328fcf868185c6cc9deb148f8491bad4",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`qtypeValue` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 1297,
        "column": 49,
        "procedure": "BloombergLP::ntcdns::Question::decode",
        "procedure_start_line": 1281,
        "file": "thirdparty/ntf-core/groups/ntc/ntcdns/ntcdns_protocol.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcdns/ntcdns_protocol.cpp",
                "line_number": 1281,
                "column_number": 1,
                "description": "variable `qtypeValue` declared here"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcdns/ntcdns_protocol.cpp",
                "line_number": 1297,
                "column_number": 49,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "ntcdns_protocol.cpp|decode|PULSE_UNINITIALIZED_VALUE",
        "node_key": "3d1b705d5cbba758a2433d0439f13b6f",
        "hash": "761529cec9998d28e73ba1d79f88cd1b",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`qclassValue` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 1310,
        "column": 64,
        "procedure": "BloombergLP::ntcdns::Question::decode",
        "procedure_start_line": 1281,
        "file": "thirdparty/ntf-core/groups/ntc/ntcdns/ntcdns_protocol.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcdns/ntcdns_protocol.cpp",
                "line_number": 1281,
                "column_number": 1,
                "description": "variable `qclassValue` declared here"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcdns/ntcdns_protocol.cpp",
                "line_number": 1310,
                "column_number": 64,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "ntcdns_protocol.cpp|decode|PULSE_UNINITIALIZED_VALUE",
        "node_key": "3d1b705d5cbba758a2433d0439f13b6f",
        "hash": "15c4732f77af4e5a54d4893d25f264c6",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`typeValue` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 1525,
        "column": 66,
        "procedure": "BloombergLP::ntcdns::ResourceRecord::decode",
        "procedure_start_line": 1509,
        "file": "thirdparty/ntf-core/groups/ntc/ntcdns/ntcdns_protocol.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcdns/ntcdns_protocol.cpp",
                "line_number": 1509,
                "column_number": 1,
                "description": "variable `typeValue` declared here"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcdns/ntcdns_protocol.cpp",
                "line_number": 1525,
                "column_number": 66,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "ntcdns_protocol.cpp|decode|PULSE_UNINITIALIZED_VALUE",
        "node_key": "3d1b705d5cbba758a2433d0439f13b6f",
        "hash": "5832dd74c260db8a8067085f195e8e72",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`classificationValue` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 1539,
        "column": 39,
        "procedure": "BloombergLP::ntcdns::ResourceRecord::decode",
        "procedure_start_line": 1509,
        "file": "thirdparty/ntf-core/groups/ntc/ntcdns/ntcdns_protocol.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcdns/ntcdns_protocol.cpp",
                "line_number": 1509,
                "column_number": 1,
                "description": "variable `classificationValue` declared here"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcdns/ntcdns_protocol.cpp",
                "line_number": 1539,
                "column_number": 39,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "ntcdns_protocol.cpp|decode|PULSE_UNINITIALIZED_VALUE",
        "node_key": "3d1b705d5cbba758a2433d0439f13b6f",
        "hash": "0a9743f7dee8c213e6f28b7113c59388",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`rdataLength` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 1571,
        "column": 9,
        "procedure": "BloombergLP::ntcdns::ResourceRecord::decode",
        "procedure_start_line": 1509,
        "file": "thirdparty/ntf-core/groups/ntc/ntcdns/ntcdns_protocol.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcdns/ntcdns_protocol.cpp",
                "line_number": 1509,
                "column_number": 1,
                "description": "variable `rdataLength` declared here"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcdns/ntcdns_protocol.cpp",
                "line_number": 1571,
                "column_number": 9,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "ntcdns_protocol.cpp|decode|PULSE_UNINITIALIZED_VALUE",
        "node_key": "5df8374f7c1552703d94bb15c1f58ce9",
        "hash": "791929764e3cbebd3be8560ddaadfb4f",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `&domainName` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 297,
        "column": 14,
        "procedure": "BloombergLP::ntcdns::System::executeGetServiceName",
        "procedure_start_line": 237,
        "file": "thirdparty/ntf-core/groups/ntc/ntcdns/ntcdns_system.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcdns/ntcdns_system.cpp",
                "line_number": 297,
                "column_number": 14,
                "description": "copied here (with type `bsl::basic_string<char,std::char_traits<char>,bsl::allocator<char>>&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "ntcdns_system.cpp|executeGetServiceName|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "dbbcd2dc3b055f1dc0ad28792ac25b35",
        "hash": "b5415350578f4a6009a14681822332dc",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "bsl::basic_string<char,std::char_traits<char>,bsl::allocator<char>>&"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `&getServiceNameEvent` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 298,
        "column": 14,
        "procedure": "BloombergLP::ntcdns::System::executeGetServiceName",
        "procedure_start_line": 237,
        "file": "thirdparty/ntf-core/groups/ntc/ntcdns/ntcdns_system.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcdns/ntcdns_system.cpp",
                "line_number": 298,
                "column_number": 14,
                "description": "copied here (with type `BloombergLP::ntca::GetServiceNameEvent&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "ntcdns_system.cpp|executeGetServiceName|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "dbbcd2dc3b055f1dc0ad28792ac25b35",
        "hash": "26a9d6299afb6affe0d2251421ffae4c",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "BloombergLP::ntca::GetServiceNameEvent&"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `&it` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 369,
        "column": 27,
        "procedure": "BloombergLP::ntcdns::Map<unsigned short,bsl::shared_ptr<BloombergLP::ntcdns::ClientOperation>>::remove",
        "procedure_start_line": 362,
        "file": "thirdparty/ntf-core/groups/ntc/ntcdns/ntcdns_utility.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcdns/ntcdns_client.h",
                "line_number": 385,
                "column_number": 50,
                "description": "first instantiated at"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcdns/ntcdns_utility.h",
                "line_number": 369,
                "column_number": 27,
                "description": "copied here (with type `BloombergLP::bslstl::HashTableIterator<bsl::pair<unsigned short const ,bsl::shared_ptr<BloombergLP::ntcdns::ClientOperation>>,long>&`)"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "ntcdns_utility.h|remove|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "425e3a429986362d09bbd43f1a27e4f0",
        "hash": "d107d1a87963c2c125a452619be8ac99",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "BloombergLP::bslstl::HashTableIterator<bsl::pair<unsigned short const ,bsl::shared_ptr<BloombergLP::ntcdns::ClientOperation>>,long>&"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `arg1` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 1063,
        "column": 1,
        "procedure": "BloombergLP::ntci::Callback<_fn_>::operator()<BloombergLP::ntca::ReactorEvent>",
        "procedure_start_line": 1063,
        "file": "thirdparty/ntf-core/groups/ntc/ntci/ntci_callback.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntci/ntci_callback.h",
                "line_number": 1063,
                "column_number": 1,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntccfg/ntccfg_inline.h",
                "line_number": 31,
                "column_number": -1,
                "description": "Parameter arg1 with type `BloombergLP::ntca::ReactorEvent`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "ntci_callback.h|operator()<BloombergLP::ntca::ReactorEvent>|PULSE_CONST_REFABLE",
        "node_key": "c1d780a30890a1959aa2c529d08326c6",
        "hash": "a8ba463e338156943b602233bbba9215",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "BloombergLP::ntca::ReactorEvent"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `arg1` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 1067,
        "column": 26,
        "procedure": "BloombergLP::ntci::Callback<_fn_>::operator()<BloombergLP::ntca::ReactorEvent>",
        "procedure_start_line": 1063,
        "file": "thirdparty/ntf-core/groups/ntc/ntci/ntci_callback.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntci/ntci_reactor.h",
                "line_number": 72,
                "column_number": 9,
                "description": "first instantiated at"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntci/ntci_callback.h",
                "line_number": 1067,
                "column_number": 26,
                "description": "copied here (with type `BloombergLP::ntca::ReactorEvent&`)"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "ntci_callback.h|operator()<BloombergLP::ntca::ReactorEvent>|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "c1d780a30890a1959aa2c529d08326c6",
        "hash": "52dda3a85739c0b1357aa4fb3e4f2727",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "BloombergLP::ntca::ReactorEvent&"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `arg2` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 1072,
        "column": 1,
        "procedure": "BloombergLP::ntci::Callback<_fn_>::operator()<c6f7849d0c0f36e4>",
        "procedure_start_line": 1072,
        "file": "thirdparty/ntf-core/groups/ntc/ntci/ntci_callback.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntci/ntci_callback.h",
                "line_number": 1072,
                "column_number": 1,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntccfg/ntccfg_inline.h",
                "line_number": 31,
                "column_number": -1,
                "description": "Parameter arg2 with type `BloombergLP::ntca::TimerEvent`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "ntci_callback.h|operator()<c6f7849d0c0f36e4>|PULSE_CONST_REFABLE",
        "node_key": "c1d780a30890a1959aa2c529d08326c6",
        "hash": "0d9fd692760584906ebdd20560fb0b49",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "BloombergLP::ntca::TimerEvent"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `arg1` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 1077,
        "column": 26,
        "procedure": "BloombergLP::ntci::Callback<_fn_>::operator()<c6f7849d0c0f36e4>",
        "procedure_start_line": 1072,
        "file": "thirdparty/ntf-core/groups/ntc/ntci/ntci_callback.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntci/ntci_timercallback.h",
                "line_number": 44,
                "column_number": 9,
                "description": "first instantiated at"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntci/ntci_callback.h",
                "line_number": 1077,
                "column_number": 26,
                "description": "copied here (with type `bsl::shared_ptr<BloombergLP::ntci::Timer>&`)"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "ntci_callback.h|operator()<c6f7849d0c0f36e4>|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "c1d780a30890a1959aa2c529d08326c6",
        "hash": "b80d92cd84acc840d0b92fdefa4deffb",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "bsl::shared_ptr<BloombergLP::ntci::Timer>&"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `arg2` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 1077,
        "column": 32,
        "procedure": "BloombergLP::ntci::Callback<_fn_>::operator()<c6f7849d0c0f36e4>",
        "procedure_start_line": 1072,
        "file": "thirdparty/ntf-core/groups/ntc/ntci/ntci_callback.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntci/ntci_timercallback.h",
                "line_number": 44,
                "column_number": 9,
                "description": "first instantiated at"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntci/ntci_callback.h",
                "line_number": 1077,
                "column_number": 32,
                "description": "copied here (with type `BloombergLP::ntca::TimerEvent&`)"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "ntci_callback.h|operator()<c6f7849d0c0f36e4>|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "c1d780a30890a1959aa2c529d08326c6",
        "hash": "f68bceff0fae0c4027b0971549961af6",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "BloombergLP::ntca::TimerEvent&"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `arg2` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 1082,
        "column": 1,
        "procedure": "BloombergLP::ntci::Callback<_fn_>::operator()<80d8515fd9f3f3bf>",
        "procedure_start_line": 1082,
        "file": "thirdparty/ntf-core/groups/ntc/ntci/ntci_callback.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntci/ntci_callback.h",
                "line_number": 1082,
                "column_number": 1,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntccfg/ntccfg_inline.h",
                "line_number": 31,
                "column_number": -1,
                "description": "Parameter arg2 with type `BloombergLP::ntsa::Endpoint`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "ntci_callback.h|operator()<80d8515fd9f3f3bf>|PULSE_CONST_REFABLE",
        "node_key": "c1d780a30890a1959aa2c529d08326c6",
        "hash": "ce68684a0323eab678b0878d8d60a073",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "BloombergLP::ntsa::Endpoint"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `arg3` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 1082,
        "column": 1,
        "procedure": "BloombergLP::ntci::Callback<_fn_>::operator()<58429af43b3fbbb5>",
        "procedure_start_line": 1082,
        "file": "thirdparty/ntf-core/groups/ntc/ntci/ntci_callback.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntci/ntci_callback.h",
                "line_number": 1082,
                "column_number": 1,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntccfg/ntccfg_inline.h",
                "line_number": 31,
                "column_number": -1,
                "description": "Parameter arg3 with type `BloombergLP::ntca::GetIpAddressEvent`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "ntci_callback.h|operator()<58429af43b3fbbb5>|PULSE_CONST_REFABLE",
        "node_key": "c1d780a30890a1959aa2c529d08326c6",
        "hash": "4df713e95047aad1bcfb2ecc0b00524f",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "BloombergLP::ntca::GetIpAddressEvent"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `arg1` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 1088,
        "column": 26,
        "procedure": "BloombergLP::ntci::Callback<_fn_>::operator()<58429af43b3fbbb5>",
        "procedure_start_line": 1082,
        "file": "thirdparty/ntf-core/groups/ntc/ntci/ntci_callback.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntci/ntci_getipaddresscallback.h",
                "line_number": 49,
                "column_number": 9,
                "description": "first instantiated at"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntci/ntci_callback.h",
                "line_number": 1088,
                "column_number": 26,
                "description": "copied here (with type `bsl::shared_ptr<BloombergLP::ntci::Resolver>&`)"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "ntci_callback.h|operator()<58429af43b3fbbb5>|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "c1d780a30890a1959aa2c529d08326c6",
        "hash": "da729266d7f27c5a4b51dd14fda09492",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "bsl::shared_ptr<BloombergLP::ntci::Resolver>&"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `arg2` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 1088,
        "column": 32,
        "procedure": "BloombergLP::ntci::Callback<_fn_>::operator()<58429af43b3fbbb5>",
        "procedure_start_line": 1082,
        "file": "thirdparty/ntf-core/groups/ntc/ntci/ntci_callback.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntci/ntci_getipaddresscallback.h",
                "line_number": 49,
                "column_number": 9,
                "description": "first instantiated at"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntci/ntci_callback.h",
                "line_number": 1088,
                "column_number": 32,
                "description": "copied here (with type `bsl::vector<BloombergLP::ntsa::IpAddress,bsl::allocator<BloombergLP::ntsa::IpAddress>>&`)"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "ntci_callback.h|operator()<58429af43b3fbbb5>|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "c1d780a30890a1959aa2c529d08326c6",
        "hash": "90d2106bd3664f3b440ed44789f050c2",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "bsl::vector<BloombergLP::ntsa::IpAddress,bsl::allocator<BloombergLP::ntsa::IpAddress>>&"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `arg3` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 1088,
        "column": 38,
        "procedure": "BloombergLP::ntci::Callback<_fn_>::operator()<58429af43b3fbbb5>",
        "procedure_start_line": 1082,
        "file": "thirdparty/ntf-core/groups/ntc/ntci/ntci_callback.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntci/ntci_getipaddresscallback.h",
                "line_number": 49,
                "column_number": 9,
                "description": "first instantiated at"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntci/ntci_callback.h",
                "line_number": 1088,
                "column_number": 38,
                "description": "copied here (with type `BloombergLP::ntca::GetIpAddressEvent&`)"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "ntci_callback.h|operator()<58429af43b3fbbb5>|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "c1d780a30890a1959aa2c529d08326c6",
        "hash": "baf2cf7c4b3e5bd45436740f26fbd411",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "BloombergLP::ntca::GetIpAddressEvent&"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `arg2` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 1652,
        "column": 1,
        "procedure": "BloombergLP::ntci::Callback<_fn_>::dispatch<10b9bb1495a7e1e9>",
        "procedure_start_line": 1652,
        "file": "thirdparty/ntf-core/groups/ntc/ntci/ntci_callback.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntci/ntci_callback.h",
                "line_number": 1652,
                "column_number": 1,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntccfg/ntccfg_inline.h",
                "line_number": 31,
                "column_number": -1,
                "description": "Parameter arg2 with type `BloombergLP::ntca::SendEvent`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "ntci_callback.h|dispatch<10b9bb1495a7e1e9>|PULSE_CONST_REFABLE",
        "node_key": "c84989ca2e160c624ed4fd8a59fe2c40",
        "hash": "84e22c24f3424c079cc2b62dc9baea6e",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "BloombergLP::ntca::SendEvent"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `arg1` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 1668,
        "column": 36,
        "procedure": "BloombergLP::ntci::Callback<_fn_>::dispatch<10b9bb1495a7e1e9>",
        "procedure_start_line": 1652,
        "file": "thirdparty/ntf-core/groups/ntc/ntci/ntci_callback.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntci/ntci_sendcallback.h",
                "line_number": 46,
                "column_number": 9,
                "description": "first instantiated at"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntci/ntci_callback.h",
                "line_number": 1668,
                "column_number": 36,
                "description": "copied here (with type `bsl::shared_ptr<BloombergLP::ntcr::DatagramSocket>&`)"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "ntci_callback.h|dispatch<10b9bb1495a7e1e9>|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "c84989ca2e160c624ed4fd8a59fe2c40",
        "hash": "4e69f0f00b8d2c86d7e824a1fc39d6d3",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "bsl::shared_ptr<BloombergLP::ntcr::DatagramSocket>&"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `arg2` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 1668,
        "column": 42,
        "procedure": "BloombergLP::ntci::Callback<_fn_>::dispatch<10b9bb1495a7e1e9>",
        "procedure_start_line": 1652,
        "file": "thirdparty/ntf-core/groups/ntc/ntci/ntci_callback.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntci/ntci_sendcallback.h",
                "line_number": 46,
                "column_number": 9,
                "description": "first instantiated at"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntci/ntci_callback.h",
                "line_number": 1668,
                "column_number": 42,
                "description": "copied here (with type `BloombergLP::ntca::SendEvent&`)"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "ntci_callback.h|dispatch<10b9bb1495a7e1e9>|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "c84989ca2e160c624ed4fd8a59fe2c40",
        "hash": "4f34bdf7897047967dff9cc1c60260df",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "BloombergLP::ntca::SendEvent&"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `arg2` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 1693,
        "column": 1,
        "procedure": "BloombergLP::ntci::Callback<_fn_>::dispatch<1a4dbf3a8423d693>",
        "procedure_start_line": 1693,
        "file": "thirdparty/ntf-core/groups/ntc/ntci/ntci_callback.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntci/ntci_callback.h",
                "line_number": 1693,
                "column_number": 1,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntccfg/ntccfg_inline.h",
                "line_number": 31,
                "column_number": -1,
                "description": "Parameter arg2 with type `bsl::basic_string<char,std::char_traits<char>,bsl::allocator<char>>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "ntci_callback.h|dispatch<1a4dbf3a8423d693>|PULSE_CONST_REFABLE",
        "node_key": "c84989ca2e160c624ed4fd8a59fe2c40",
        "hash": "d33962c7461ac19fbe77faf413f105dc",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::basic_string<char,std::char_traits<char>,bsl::allocator<char>>"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `arg3` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 1693,
        "column": 1,
        "procedure": "BloombergLP::ntci::Callback<_fn_>::dispatch<1a4dbf3a8423d693>",
        "procedure_start_line": 1693,
        "file": "thirdparty/ntf-core/groups/ntc/ntci/ntci_callback.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntci/ntci_callback.h",
                "line_number": 1693,
                "column_number": 1,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntccfg/ntccfg_inline.h",
                "line_number": 31,
                "column_number": -1,
                "description": "Parameter arg3 with type `BloombergLP::ntca::GetServiceNameEvent`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "ntci_callback.h|dispatch<1a4dbf3a8423d693>|PULSE_CONST_REFABLE",
        "node_key": "c84989ca2e160c624ed4fd8a59fe2c40",
        "hash": "cdb144e893cbe2441495ef5563016fdf",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "BloombergLP::ntca::GetServiceNameEvent"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `arg1` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 1710,
        "column": 36,
        "procedure": "BloombergLP::ntci::Callback<_fn_>::dispatch<1a4dbf3a8423d693>",
        "procedure_start_line": 1693,
        "file": "thirdparty/ntf-core/groups/ntc/ntci/ntci_callback.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntci/ntci_getservicenamecallback.h",
                "line_number": 48,
                "column_number": 9,
                "description": "first instantiated at"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntci/ntci_callback.h",
                "line_number": 1710,
                "column_number": 36,
                "description": "copied here (with type `bsl::shared_ptr<BloombergLP::ntcdns::Resolver>&`)"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "ntci_callback.h|dispatch<1a4dbf3a8423d693>|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "c84989ca2e160c624ed4fd8a59fe2c40",
        "hash": "699d497d0bb730ca2e9a705416a307a9",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "bsl::shared_ptr<BloombergLP::ntcdns::Resolver>&"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `arg2` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 1710,
        "column": 42,
        "procedure": "BloombergLP::ntci::Callback<_fn_>::dispatch<1a4dbf3a8423d693>",
        "procedure_start_line": 1693,
        "file": "thirdparty/ntf-core/groups/ntc/ntci/ntci_callback.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntci/ntci_getservicenamecallback.h",
                "line_number": 48,
                "column_number": 9,
                "description": "first instantiated at"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntci/ntci_callback.h",
                "line_number": 1710,
                "column_number": 42,
                "description": "copied here (with type `bsl::basic_string<char,std::char_traits<char>,bsl::allocator<char>>&`)"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "ntci_callback.h|dispatch<1a4dbf3a8423d693>|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "c84989ca2e160c624ed4fd8a59fe2c40",
        "hash": "35f55a191b0b06094490221ef658ec8e",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "bsl::basic_string<char,std::char_traits<char>,bsl::allocator<char>>&"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `arg3` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 1710,
        "column": 48,
        "procedure": "BloombergLP::ntci::Callback<_fn_>::dispatch<1a4dbf3a8423d693>",
        "procedure_start_line": 1693,
        "file": "thirdparty/ntf-core/groups/ntc/ntci/ntci_callback.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntci/ntci_getservicenamecallback.h",
                "line_number": 48,
                "column_number": 9,
                "description": "first instantiated at"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntci/ntci_callback.h",
                "line_number": 1710,
                "column_number": 48,
                "description": "copied here (with type `BloombergLP::ntca::GetServiceNameEvent&`)"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "ntci_callback.h|dispatch<1a4dbf3a8423d693>|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "c84989ca2e160c624ed4fd8a59fe2c40",
        "hash": "5b7ba2f4554141c0c7e78be9c57efca7",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "BloombergLP::ntca::GetServiceNameEvent&"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `arg1` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 389,
        "column": 1,
        "procedure": "BloombergLP::ntci::Invoker<_fn_>::call1<BloombergLP::ntca::ReactorEvent>",
        "procedure_start_line": 389,
        "file": "thirdparty/ntf-core/groups/ntc/ntci/ntci_invoker.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntci/ntci_invoker.h",
                "line_number": 389,
                "column_number": 1,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntccfg/ntccfg_inline.h",
                "line_number": 31,
                "column_number": -1,
                "description": "Parameter arg1 with type `BloombergLP::ntca::ReactorEvent`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "ntci_invoker.h|call1<BloombergLP::ntca::ReactorEvent>|PULSE_CONST_REFABLE",
        "node_key": "e43eaed40bc499fb2714e8566c41249b",
        "hash": "94bf8d66a8fb330eb85eb9628a9c8e72",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "BloombergLP::ntca::ReactorEvent"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `arg1` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 407,
        "column": 1,
        "procedure": "BloombergLP::ntci::Invoker<_fn_>::call2<1be14bdbd1f59834>",
        "procedure_start_line": 407,
        "file": "thirdparty/ntf-core/groups/ntc/ntci/ntci_invoker.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntci/ntci_invoker.h",
                "line_number": 407,
                "column_number": 1,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntccfg/ntccfg_inline.h",
                "line_number": 31,
                "column_number": -1,
                "description": "Parameter arg1 with type `bsl::shared_ptr<BloombergLP::ntci::Bindable>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "ntci_invoker.h|call2<1be14bdbd1f59834>|PULSE_CONST_REFABLE",
        "node_key": "e43eaed40bc499fb2714e8566c41249b",
        "hash": "4669bc0344fa57da380eb1b88f235b63",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::shared_ptr<BloombergLP::ntci::Bindable>"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `arg2` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 407,
        "column": 1,
        "procedure": "BloombergLP::ntci::Invoker<_fn_>::call2<10b9bb1495a7e1e9>",
        "procedure_start_line": 407,
        "file": "thirdparty/ntf-core/groups/ntc/ntci/ntci_invoker.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntci/ntci_invoker.h",
                "line_number": 407,
                "column_number": 1,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntccfg/ntccfg_inline.h",
                "line_number": 31,
                "column_number": -1,
                "description": "Parameter arg2 with type `BloombergLP::ntca::SendEvent`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "ntci_invoker.h|call2<10b9bb1495a7e1e9>|PULSE_CONST_REFABLE",
        "node_key": "e43eaed40bc499fb2714e8566c41249b",
        "hash": "6895fb719f9310a03debf77e9aebc98e",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "BloombergLP::ntca::SendEvent"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `arg1` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 425,
        "column": 1,
        "procedure": "BloombergLP::ntci::Invoker<_fn_>::call3<58429af43b3fbbb5>",
        "procedure_start_line": 425,
        "file": "thirdparty/ntf-core/groups/ntc/ntci/ntci_invoker.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntci/ntci_invoker.h",
                "line_number": 425,
                "column_number": 1,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntccfg/ntccfg_inline.h",
                "line_number": 31,
                "column_number": -1,
                "description": "Parameter arg1 with type `bsl::shared_ptr<BloombergLP::ntci::Resolver>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "ntci_invoker.h|call3<58429af43b3fbbb5>|PULSE_CONST_REFABLE",
        "node_key": "e43eaed40bc499fb2714e8566c41249b",
        "hash": "d9a8a2a8d47eef8a8fa7a8ba22ca2fba",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::shared_ptr<BloombergLP::ntci::Resolver>"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `arg2` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 425,
        "column": 1,
        "procedure": "BloombergLP::ntci::Invoker<_fn_>::call3<1a4dbf3a8423d693>",
        "procedure_start_line": 425,
        "file": "thirdparty/ntf-core/groups/ntc/ntci/ntci_invoker.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntci/ntci_invoker.h",
                "line_number": 425,
                "column_number": 1,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntccfg/ntccfg_inline.h",
                "line_number": 31,
                "column_number": -1,
                "description": "Parameter arg2 with type `bsl::basic_string<char,std::char_traits<char>,bsl::allocator<char>>`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "ntci_invoker.h|call3<1a4dbf3a8423d693>|PULSE_CONST_REFABLE",
        "node_key": "e43eaed40bc499fb2714e8566c41249b",
        "hash": "e49b358d584bafe2edd9d2d3c7919542",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "bsl::basic_string<char,std::char_traits<char>,bsl::allocator<char>>"
        }
    },
    {
        "bug_type": "PULSE_CONST_REFABLE",
        "qualifier": "Function parameter `arg3` is passed by-value but not modified inside this function, resulting in a potential unnecessary copy at the function's callsites.",
        "suggestion": "Change the type of the parameter to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 425,
        "column": 1,
        "procedure": "BloombergLP::ntci::Invoker<_fn_>::call3<1a4dbf3a8423d693>",
        "procedure_start_line": 425,
        "file": "thirdparty/ntf-core/groups/ntc/ntci/ntci_invoker.h",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntci/ntci_invoker.h",
                "line_number": 425,
                "column_number": 1,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntccfg/ntccfg_inline.h",
                "line_number": 31,
                "column_number": -1,
                "description": "Parameter arg3 with type `BloombergLP::ntca::GetServiceNameEvent`"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "ntci_invoker.h|call3<1a4dbf3a8423d693>|PULSE_CONST_REFABLE",
        "node_key": "e43eaed40bc499fb2714e8566c41249b",
        "hash": "f9759f446c3dcc401467e0b9e49ffb69",
        "bug_type_hum": "Const Refable Parameter",
        "extras": {
            "copy_type": "BloombergLP::ntca::GetServiceNameEvent"
        }
    },
    {
        "bug_type": "INFINITE_LOOP",
        "qualifier": "Recurring state leading to infinite execution at line 56, column 5.",
        "severity": "ERROR",
        "category": "No_category",
        "line": 56,
        "column": 5,
        "procedure": "BloombergLP::ntci::Mutex::lockContention",
        "procedure_start_line": 54,
        "file": "thirdparty/ntf-core/groups/ntc/ntci/ntci_mutex.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntci/ntci_mutex.cpp",
                "line_number": 56,
                "column_number": 5,
                "description": "in loop"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "ntci_mutex.cpp|lockContention|INFINITE_LOOP",
        "node_key": "89e1fea3672f8c1bda5df785b829cfa3",
        "hash": "e4956697878ea83be19e7ae3d8fab130",
        "bug_type_hum": "Infinite Loop",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_ASSIGNMENT",
        "qualifier": "variable `&monitorableCollector` is copy assigned into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 127,
        "column": 9,
        "procedure": "BloombergLP::ntcm::MonitorableUtil::enableMonitorableCollector",
        "procedure_start_line": 92,
        "file": "thirdparty/ntf-core/groups/ntc/ntcm/ntcm_monitorableutil.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcm/ntcm_monitorableutil.cpp",
                "line_number": 127,
                "column_number": 9,
                "description": "copy assigned here (with type `bsl::shared_ptr<BloombergLP::ntci::MonitorableCollector>&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "ntcm_monitorableutil.cpp|enableMonitorableCollector|PULSE_UNNECESSARY_COPY_ASSIGNMENT",
        "node_key": "c6fa565f3b7c7ccae1833e95de7ade09",
        "hash": "cb7cac094ae7dcc4f1575008d0ff8021",
        "bug_type_hum": "Unnecessary Copy Assignment",
        "extras": {
            "copy_type": "bsl::shared_ptr<BloombergLP::ntci::MonitorableCollector>&"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `&sendEvent` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 832,
        "column": 27,
        "procedure": "BloombergLP::ntcp::DatagramSocket::privateFailSend",
        "procedure_start_line": 811,
        "file": "thirdparty/ntf-core/groups/ntc/ntcp/ntcp_datagramsocket.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcp/ntcp_datagramsocket.cpp",
                "line_number": 832,
                "column_number": 27,
                "description": "copied here (with type `BloombergLP::ntca::SendEvent&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "ntcp_datagramsocket.cpp|privateFailSend|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "61134c01b11cce8d3f331b25d7a8e66d",
        "hash": "a33570d7e614f0619ef33fa9f80ff360",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "BloombergLP::ntca::SendEvent&"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `&bindEvent` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 1927,
        "column": 31,
        "procedure": "BloombergLP::ntcp::DatagramSocket::processSourceEndpointResolution",
        "procedure_start_line": 1861,
        "file": "thirdparty/ntf-core/groups/ntc/ntcp/ntcp_datagramsocket.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcp/ntcp_datagramsocket.cpp",
                "line_number": 1927,
                "column_number": 31,
                "description": "copied here (with type `BloombergLP::ntca::BindEvent&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "ntcp_datagramsocket.cpp|processSourceEndpointResolution|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "996b658c16a913ecea5a87297b6dc99c",
        "hash": "01fed013fdeed1b67bdeb8170af7a3cd",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "BloombergLP::ntca::BindEvent&"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_ASSIGNMENT",
        "qualifier": "`&metrics` is copy assigned into field `d_socketMetrics_sp` but is not modified afterwards.",
        "suggestion": "Rather than copying into the field, move into it instead.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 489,
        "column": 9,
        "procedure": "BloombergLP::ntcp::Interface::Interface",
        "procedure_start_line": 455,
        "file": "thirdparty/ntf-core/groups/ntc/ntcp/ntcp_interface.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcp/ntcp_interface.cpp",
                "line_number": 489,
                "column_number": 9,
                "description": "copy assigned here (with type `bsl::shared_ptr<BloombergLP::ntcs::Metrics>&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "ntcp_interface.cpp|Interface|PULSE_UNNECESSARY_COPY_ASSIGNMENT",
        "node_key": "c1d780a30890a1959aa2c529d08326c6",
        "hash": "9a80e0f6cd438d55b7d84a0252dba11b",
        "bug_type_hum": "Unnecessary Copy Assignment",
        "extras": {
            "copy_type": "bsl::shared_ptr<BloombergLP::ntcs::Metrics>&"
        },
        "autofix": {
            "original": "d_socketMetrics_sp = metrics;",
            "replacement": "d_socketMetrics_sp = std::move(metrics);"
        }
    },
    {
        "bug_type": "OPTIONAL_EMPTY_ACCESS",
        "qualifier": "accessing `proactor.operator->()` that is assigned an empty value during the call to `BloombergLP::ntca::LoadBalancingOptions::LoadBalancingOptions()` on line 1349.",
        "severity": "ERROR",
        "category": "Runtime exception",
        "line": 1356,
        "column": 5,
        "procedure": "BloombergLP::ntcp::Interface::execute",
        "procedure_start_line": 1343,
        "file": "thirdparty/ntf-core/groups/ntc/ntcp/ntcp_interface.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcp/ntcp_interface.cpp",
                "line_number": 1349,
                "column_number": 32,
                "description": "invalidation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcp/ntcp_interface.cpp",
                "line_number": 1349,
                "column_number": 32,
                "description": "when calling `BloombergLP::ntca::LoadBalancingOptions::LoadBalancingOptions` here"
            },
            {
                "level": 2,
                "filename": "thirdparty/ntf-core/groups/ntc/ntca/ntca_loadbalancingoptions.cpp",
                "line_number": 33,
                "column_number": 3,
                "description": "when calling `BloombergLP::bdlb::NullableValue<unsigned long>::NullableValue` here"
            },
            {
                "level": 3,
                "filename": "include/bdlb_nullablevalue.h",
                "line_number": 1270,
                "column_number": 22,
                "description": "when calling `bsl::optional<unsigned long,0>::optional` here"
            },
            {
                "level": 4,
                "filename": "include/bslstl_optional.h",
                "line_number": 4130,
                "column_number": 24,
                "description": "in call to `std::optional::optional()` (modelled)"
            },
            {
                "level": 4,
                "filename": "include/bslstl_optional.h",
                "line_number": 4130,
                "column_number": 24,
                "description": "is assigned an empty value"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcp/ntcp_interface.cpp",
                "line_number": 1352,
                "column_number": 5,
                "description": "use-after-lifetime part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcp/ntcp_interface.cpp",
                "line_number": 1352,
                "column_number": 5,
                "description": "variable `proactor` declared here"
            },
            {
                "level": 1,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcp/ntcp_interface.cpp",
                "line_number": 1353,
                "column_number": 9,
                "description": "in call to function `BloombergLP::ntcp::Interface::acquireProactor` with no summary"
            },
            {
                "level": 1,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcp/ntcp_interface.cpp",
                "line_number": 1356,
                "column_number": 5,
                "description": "in call to `bsl::shared_ptr<BloombergLP::ntci::Proactor>::operator->`"
            },
            {
                "level": 2,
                "filename": "include/bslstl_sharedptr.h",
                "line_number": 5420,
                "column_number": 1,
                "description": "parameter `this` of bsl::shared_ptr<BloombergLP::ntci::Proactor>::operator->"
            },
            {
                "level": 2,
                "filename": "include/bslstl_sharedptr.h",
                "line_number": 5424,
                "column_number": 5,
                "description": "returned"
            },
            {
                "level": 1,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcp/ntcp_interface.cpp",
                "line_number": 1356,
                "column_number": 5,
                "description": "return from call to `bsl::shared_ptr<BloombergLP::ntci::Proactor>::operator->`"
            },
            {
                "level": 1,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcp/ntcp_interface.cpp",
                "line_number": 1356,
                "column_number": 5,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 14,
        "bug_trace_max_depth": 4,
        "key": "ntcp_interface.cpp|execute|OPTIONAL_EMPTY_ACCESS",
        "node_key": "061d9f25e695cece746d1be713cc90ba",
        "hash": "2d2d685734b03562a5d017f25c2a63d3",
        "bug_type_hum": "Optional Empty Access",
        "extras": {}
    },
    {
        "bug_type": "OPTIONAL_EMPTY_ACCESS",
        "qualifier": "accessing `proactor.operator->()` that is assigned an empty value during the call to `BloombergLP::ntca::LoadBalancingOptions::LoadBalancingOptions()` on line 1366.",
        "severity": "ERROR",
        "category": "Runtime exception",
        "line": 1373,
        "column": 5,
        "procedure": "BloombergLP::ntcp::Interface::moveAndExecute",
        "procedure_start_line": 1359,
        "file": "thirdparty/ntf-core/groups/ntc/ntcp/ntcp_interface.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcp/ntcp_interface.cpp",
                "line_number": 1366,
                "column_number": 32,
                "description": "invalidation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcp/ntcp_interface.cpp",
                "line_number": 1366,
                "column_number": 32,
                "description": "when calling `BloombergLP::ntca::LoadBalancingOptions::LoadBalancingOptions` here"
            },
            {
                "level": 2,
                "filename": "thirdparty/ntf-core/groups/ntc/ntca/ntca_loadbalancingoptions.cpp",
                "line_number": 33,
                "column_number": 3,
                "description": "when calling `BloombergLP::bdlb::NullableValue<unsigned long>::NullableValue` here"
            },
            {
                "level": 3,
                "filename": "include/bdlb_nullablevalue.h",
                "line_number": 1270,
                "column_number": 22,
                "description": "when calling `bsl::optional<unsigned long,0>::optional` here"
            },
            {
                "level": 4,
                "filename": "include/bslstl_optional.h",
                "line_number": 4130,
                "column_number": 24,
                "description": "in call to `std::optional::optional()` (modelled)"
            },
            {
                "level": 4,
                "filename": "include/bslstl_optional.h",
                "line_number": 4130,
                "column_number": 24,
                "description": "is assigned an empty value"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcp/ntcp_interface.cpp",
                "line_number": 1369,
                "column_number": 5,
                "description": "use-after-lifetime part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcp/ntcp_interface.cpp",
                "line_number": 1369,
                "column_number": 5,
                "description": "variable `proactor` declared here"
            },
            {
                "level": 1,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcp/ntcp_interface.cpp",
                "line_number": 1370,
                "column_number": 9,
                "description": "in call to function `BloombergLP::ntcp::Interface::acquireProactor` with no summary"
            },
            {
                "level": 1,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcp/ntcp_interface.cpp",
                "line_number": 1373,
                "column_number": 5,
                "description": "in call to `bsl::shared_ptr<BloombergLP::ntci::Proactor>::operator->`"
            },
            {
                "level": 2,
                "filename": "include/bslstl_sharedptr.h",
                "line_number": 5420,
                "column_number": 1,
                "description": "parameter `this` of bsl::shared_ptr<BloombergLP::ntci::Proactor>::operator->"
            },
            {
                "level": 2,
                "filename": "include/bslstl_sharedptr.h",
                "line_number": 5424,
                "column_number": 5,
                "description": "returned"
            },
            {
                "level": 1,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcp/ntcp_interface.cpp",
                "line_number": 1373,
                "column_number": 5,
                "description": "return from call to `bsl::shared_ptr<BloombergLP::ntci::Proactor>::operator->`"
            },
            {
                "level": 1,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcp/ntcp_interface.cpp",
                "line_number": 1373,
                "column_number": 5,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 14,
        "bug_trace_max_depth": 4,
        "key": "ntcp_interface.cpp|moveAndExecute|OPTIONAL_EMPTY_ACCESS",
        "node_key": "d24be0c06d25c4b217850f676613c6e5",
        "hash": "b55df47eb901647781687053e5105f3e",
        "bug_type_hum": "Optional Empty Access",
        "extras": {}
    },
    {
        "bug_type": "OPTIONAL_EMPTY_ACCESS",
        "qualifier": "accessing `proactor.operator->()` that is assigned an empty value during the call to `BloombergLP::ntca::LoadBalancingOptions::LoadBalancingOptions()` on line 1385.",
        "severity": "ERROR",
        "category": "Runtime exception",
        "line": 1392,
        "column": 12,
        "procedure": "BloombergLP::ntcp::Interface::createTimer",
        "procedure_start_line": 1376,
        "file": "thirdparty/ntf-core/groups/ntc/ntcp/ntcp_interface.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcp/ntcp_interface.cpp",
                "line_number": 1385,
                "column_number": 32,
                "description": "invalidation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcp/ntcp_interface.cpp",
                "line_number": 1385,
                "column_number": 32,
                "description": "when calling `BloombergLP::ntca::LoadBalancingOptions::LoadBalancingOptions` here"
            },
            {
                "level": 2,
                "filename": "thirdparty/ntf-core/groups/ntc/ntca/ntca_loadbalancingoptions.cpp",
                "line_number": 33,
                "column_number": 3,
                "description": "when calling `BloombergLP::bdlb::NullableValue<unsigned long>::NullableValue` here"
            },
            {
                "level": 3,
                "filename": "include/bdlb_nullablevalue.h",
                "line_number": 1270,
                "column_number": 22,
                "description": "when calling `bsl::optional<unsigned long,0>::optional` here"
            },
            {
                "level": 4,
                "filename": "include/bslstl_optional.h",
                "line_number": 4130,
                "column_number": 24,
                "description": "in call to `std::optional::optional()` (modelled)"
            },
            {
                "level": 4,
                "filename": "include/bslstl_optional.h",
                "line_number": 4130,
                "column_number": 24,
                "description": "is assigned an empty value"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcp/ntcp_interface.cpp",
                "line_number": 1388,
                "column_number": 5,
                "description": "use-after-lifetime part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcp/ntcp_interface.cpp",
                "line_number": 1388,
                "column_number": 5,
                "description": "variable `proactor` declared here"
            },
            {
                "level": 1,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcp/ntcp_interface.cpp",
                "line_number": 1389,
                "column_number": 9,
                "description": "in call to function `BloombergLP::ntcp::Interface::acquireProactor` with no summary"
            },
            {
                "level": 1,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcp/ntcp_interface.cpp",
                "line_number": 1392,
                "column_number": 12,
                "description": "in call to `bsl::shared_ptr<BloombergLP::ntci::Proactor>::operator->`"
            },
            {
                "level": 2,
                "filename": "include/bslstl_sharedptr.h",
                "line_number": 5420,
                "column_number": 1,
                "description": "parameter `this` of bsl::shared_ptr<BloombergLP::ntci::Proactor>::operator->"
            },
            {
                "level": 2,
                "filename": "include/bslstl_sharedptr.h",
                "line_number": 5424,
                "column_number": 5,
                "description": "returned"
            },
            {
                "level": 1,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcp/ntcp_interface.cpp",
                "line_number": 1392,
                "column_number": 12,
                "description": "return from call to `bsl::shared_ptr<BloombergLP::ntci::Proactor>::operator->`"
            },
            {
                "level": 1,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcp/ntcp_interface.cpp",
                "line_number": 1392,
                "column_number": 12,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 14,
        "bug_trace_max_depth": 4,
        "key": "ntcp_interface.cpp|createTimer|OPTIONAL_EMPTY_ACCESS",
        "node_key": "639797687cb3740a3c5791ba9d068474",
        "hash": "6082876f23889f50a50ca3c0dbfbf1d9",
        "bug_type_hum": "Optional Empty Access",
        "extras": {}
    },
    {
        "bug_type": "OPTIONAL_EMPTY_ACCESS",
        "qualifier": "accessing `proactor.operator->()` that is assigned an empty value during the call to `BloombergLP::ntca::LoadBalancingOptions::LoadBalancingOptions()` on line 1404.",
        "severity": "ERROR",
        "category": "Runtime exception",
        "line": 1411,
        "column": 12,
        "procedure": "BloombergLP::ntcp::Interface::createTimer",
        "procedure_start_line": 1395,
        "file": "thirdparty/ntf-core/groups/ntc/ntcp/ntcp_interface.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcp/ntcp_interface.cpp",
                "line_number": 1404,
                "column_number": 32,
                "description": "invalidation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcp/ntcp_interface.cpp",
                "line_number": 1404,
                "column_number": 32,
                "description": "when calling `BloombergLP::ntca::LoadBalancingOptions::LoadBalancingOptions` here"
            },
            {
                "level": 2,
                "filename": "thirdparty/ntf-core/groups/ntc/ntca/ntca_loadbalancingoptions.cpp",
                "line_number": 33,
                "column_number": 3,
                "description": "when calling `BloombergLP::bdlb::NullableValue<unsigned long>::NullableValue` here"
            },
            {
                "level": 3,
                "filename": "include/bdlb_nullablevalue.h",
                "line_number": 1270,
                "column_number": 22,
                "description": "when calling `bsl::optional<unsigned long,0>::optional` here"
            },
            {
                "level": 4,
                "filename": "include/bslstl_optional.h",
                "line_number": 4130,
                "column_number": 24,
                "description": "in call to `std::optional::optional()` (modelled)"
            },
            {
                "level": 4,
                "filename": "include/bslstl_optional.h",
                "line_number": 4130,
                "column_number": 24,
                "description": "is assigned an empty value"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcp/ntcp_interface.cpp",
                "line_number": 1407,
                "column_number": 5,
                "description": "use-after-lifetime part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcp/ntcp_interface.cpp",
                "line_number": 1407,
                "column_number": 5,
                "description": "variable `proactor` declared here"
            },
            {
                "level": 1,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcp/ntcp_interface.cpp",
                "line_number": 1408,
                "column_number": 9,
                "description": "in call to function `BloombergLP::ntcp::Interface::acquireProactor` with no summary"
            },
            {
                "level": 1,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcp/ntcp_interface.cpp",
                "line_number": 1411,
                "column_number": 12,
                "description": "in call to `bsl::shared_ptr<BloombergLP::ntci::Proactor>::operator->`"
            },
            {
                "level": 2,
                "filename": "include/bslstl_sharedptr.h",
                "line_number": 5420,
                "column_number": 1,
                "description": "parameter `this` of bsl::shared_ptr<BloombergLP::ntci::Proactor>::operator->"
            },
            {
                "level": 2,
                "filename": "include/bslstl_sharedptr.h",
                "line_number": 5424,
                "column_number": 5,
                "description": "returned"
            },
            {
                "level": 1,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcp/ntcp_interface.cpp",
                "line_number": 1411,
                "column_number": 12,
                "description": "return from call to `bsl::shared_ptr<BloombergLP::ntci::Proactor>::operator->`"
            },
            {
                "level": 1,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcp/ntcp_interface.cpp",
                "line_number": 1411,
                "column_number": 12,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 14,
        "bug_trace_max_depth": 4,
        "key": "ntcp_interface.cpp|createTimer|OPTIONAL_EMPTY_ACCESS",
        "node_key": "639797687cb3740a3c5791ba9d068474",
        "hash": "6082876f23889f50a50ca3c0dbfbf1d9",
        "bug_type_hum": "Optional Empty Access",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `&sendEvent` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 1648,
        "column": 27,
        "procedure": "BloombergLP::ntcp::StreamSocket::privateFailSend",
        "procedure_start_line": 1628,
        "file": "thirdparty/ntf-core/groups/ntc/ntcp/ntcp_streamsocket.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcp/ntcp_streamsocket.cpp",
                "line_number": 1648,
                "column_number": 27,
                "description": "copied here (with type `BloombergLP::ntca::SendEvent&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "ntcp_streamsocket.cpp|privateFailSend|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "61134c01b11cce8d3f331b25d7a8e66d",
        "hash": "3d8c0fe47cf5ac62edd7d3b78bd99374",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "BloombergLP::ntca::SendEvent&"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `&bindEvent` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 3141,
        "column": 31,
        "procedure": "BloombergLP::ntcp::StreamSocket::processSourceEndpointResolution",
        "procedure_start_line": 3075,
        "file": "thirdparty/ntf-core/groups/ntc/ntcp/ntcp_streamsocket.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcp/ntcp_streamsocket.cpp",
                "line_number": 3141,
                "column_number": 31,
                "description": "copied here (with type `BloombergLP::ntca::BindEvent&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "ntcp_streamsocket.cpp|processSourceEndpointResolution|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "996b658c16a913ecea5a87297b6dc99c",
        "hash": "6aca72674e44b1902af92359e3d220de",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "BloombergLP::ntca::BindEvent&"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY",
        "qualifier": "copied variable `effectiveOptions` is not modified after it is copied from `options` on line 286.",
        "suggestion": "To avoid the copy, use reference `&`. If this copy was intentional, call `folly::copy` to make it explicit and hence suppress the warning.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 286,
        "column": 42,
        "procedure": "BloombergLP::ntcq::SendQueue::batchNext",
        "procedure_start_line": 277,
        "file": "thirdparty/ntf-core/groups/ntc/ntcq/ntcq_send.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcq/ntcq_send.cpp",
                "line_number": 286,
                "column_number": 42,
                "description": "copied here (with type `BloombergLP::ntsa::SendOptions const &`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "ntcq_send.cpp|batchNext|PULSE_UNNECESSARY_COPY",
        "node_key": "da8aca3d84dd8adc6a5856f3f1a9ad3c",
        "hash": "8bd44042cbcb6323a8de53a36c1685d8",
        "bug_type_hum": "Unnecessary Copy",
        "extras": {
            "copy_type": "BloombergLP::ntsa::SendOptions const &"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `&bindEvent` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 2612,
        "column": 31,
        "procedure": "BloombergLP::ntcr::DatagramSocket::processSourceEndpointResolution",
        "procedure_start_line": 2546,
        "file": "thirdparty/ntf-core/groups/ntc/ntcr/ntcr_datagramsocket.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcr/ntcr_datagramsocket.cpp",
                "line_number": 2612,
                "column_number": 31,
                "description": "copied here (with type `BloombergLP::ntca::BindEvent&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "ntcr_datagramsocket.cpp|processSourceEndpointResolution|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "996b658c16a913ecea5a87297b6dc99c",
        "hash": "757453158bc1607a0e5b91b0f0c1cc9f",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "BloombergLP::ntca::BindEvent&"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_ASSIGNMENT",
        "qualifier": "`&metrics` is copy assigned into field `d_socketMetrics_sp` but is not modified afterwards.",
        "suggestion": "Rather than copying into the field, move into it instead.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 498,
        "column": 9,
        "procedure": "BloombergLP::ntcr::Interface::Interface",
        "procedure_start_line": 464,
        "file": "thirdparty/ntf-core/groups/ntc/ntcr/ntcr_interface.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcr/ntcr_interface.cpp",
                "line_number": 498,
                "column_number": 9,
                "description": "copy assigned here (with type `bsl::shared_ptr<BloombergLP::ntcs::Metrics>&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "ntcr_interface.cpp|Interface|PULSE_UNNECESSARY_COPY_ASSIGNMENT",
        "node_key": "c1d780a30890a1959aa2c529d08326c6",
        "hash": "23ad3191ebb65d7585425bf961905912",
        "bug_type_hum": "Unnecessary Copy Assignment",
        "extras": {
            "copy_type": "bsl::shared_ptr<BloombergLP::ntcs::Metrics>&"
        },
        "autofix": {
            "original": "d_socketMetrics_sp = metrics;",
            "replacement": "d_socketMetrics_sp = std::move(metrics);"
        }
    },
    {
        "bug_type": "OPTIONAL_EMPTY_ACCESS",
        "qualifier": "accessing `reactor.operator->()` that is assigned an empty value during the call to `BloombergLP::ntca::LoadBalancingOptions::LoadBalancingOptions()` on line 1360.",
        "severity": "ERROR",
        "category": "Runtime exception",
        "line": 1367,
        "column": 5,
        "procedure": "BloombergLP::ntcr::Interface::execute",
        "procedure_start_line": 1354,
        "file": "thirdparty/ntf-core/groups/ntc/ntcr/ntcr_interface.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcr/ntcr_interface.cpp",
                "line_number": 1360,
                "column_number": 32,
                "description": "invalidation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcr/ntcr_interface.cpp",
                "line_number": 1360,
                "column_number": 32,
                "description": "when calling `BloombergLP::ntca::LoadBalancingOptions::LoadBalancingOptions` here"
            },
            {
                "level": 2,
                "filename": "thirdparty/ntf-core/groups/ntc/ntca/ntca_loadbalancingoptions.cpp",
                "line_number": 33,
                "column_number": 3,
                "description": "when calling `BloombergLP::bdlb::NullableValue<unsigned long>::NullableValue` here"
            },
            {
                "level": 3,
                "filename": "include/bdlb_nullablevalue.h",
                "line_number": 1270,
                "column_number": 22,
                "description": "when calling `bsl::optional<unsigned long,0>::optional` here"
            },
            {
                "level": 4,
                "filename": "include/bslstl_optional.h",
                "line_number": 4130,
                "column_number": 24,
                "description": "in call to `std::optional::optional()` (modelled)"
            },
            {
                "level": 4,
                "filename": "include/bslstl_optional.h",
                "line_number": 4130,
                "column_number": 24,
                "description": "is assigned an empty value"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcr/ntcr_interface.cpp",
                "line_number": 1363,
                "column_number": 5,
                "description": "use-after-lifetime part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcr/ntcr_interface.cpp",
                "line_number": 1363,
                "column_number": 5,
                "description": "variable `reactor` declared here"
            },
            {
                "level": 1,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcr/ntcr_interface.cpp",
                "line_number": 1364,
                "column_number": 9,
                "description": "in call to function `BloombergLP::ntcr::Interface::acquireReactor` with no summary"
            },
            {
                "level": 1,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcr/ntcr_interface.cpp",
                "line_number": 1367,
                "column_number": 5,
                "description": "in call to `bsl::shared_ptr<BloombergLP::ntci::Reactor>::operator->`"
            },
            {
                "level": 2,
                "filename": "include/bslstl_sharedptr.h",
                "line_number": 5420,
                "column_number": 1,
                "description": "parameter `this` of bsl::shared_ptr<BloombergLP::ntci::Reactor>::operator->"
            },
            {
                "level": 2,
                "filename": "include/bslstl_sharedptr.h",
                "line_number": 5424,
                "column_number": 5,
                "description": "returned"
            },
            {
                "level": 1,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcr/ntcr_interface.cpp",
                "line_number": 1367,
                "column_number": 5,
                "description": "return from call to `bsl::shared_ptr<BloombergLP::ntci::Reactor>::operator->`"
            },
            {
                "level": 1,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcr/ntcr_interface.cpp",
                "line_number": 1367,
                "column_number": 5,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 14,
        "bug_trace_max_depth": 4,
        "key": "ntcr_interface.cpp|execute|OPTIONAL_EMPTY_ACCESS",
        "node_key": "061d9f25e695cece746d1be713cc90ba",
        "hash": "02093e97dbd4c26754b54fe98afaee12",
        "bug_type_hum": "Optional Empty Access",
        "extras": {}
    },
    {
        "bug_type": "OPTIONAL_EMPTY_ACCESS",
        "qualifier": "accessing `reactor.operator->()` that is assigned an empty value during the call to `BloombergLP::ntca::LoadBalancingOptions::LoadBalancingOptions()` on line 1377.",
        "severity": "ERROR",
        "category": "Runtime exception",
        "line": 1384,
        "column": 5,
        "procedure": "BloombergLP::ntcr::Interface::moveAndExecute",
        "procedure_start_line": 1370,
        "file": "thirdparty/ntf-core/groups/ntc/ntcr/ntcr_interface.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcr/ntcr_interface.cpp",
                "line_number": 1377,
                "column_number": 32,
                "description": "invalidation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcr/ntcr_interface.cpp",
                "line_number": 1377,
                "column_number": 32,
                "description": "when calling `BloombergLP::ntca::LoadBalancingOptions::LoadBalancingOptions` here"
            },
            {
                "level": 2,
                "filename": "thirdparty/ntf-core/groups/ntc/ntca/ntca_loadbalancingoptions.cpp",
                "line_number": 33,
                "column_number": 3,
                "description": "when calling `BloombergLP::bdlb::NullableValue<unsigned long>::NullableValue` here"
            },
            {
                "level": 3,
                "filename": "include/bdlb_nullablevalue.h",
                "line_number": 1270,
                "column_number": 22,
                "description": "when calling `bsl::optional<unsigned long,0>::optional` here"
            },
            {
                "level": 4,
                "filename": "include/bslstl_optional.h",
                "line_number": 4130,
                "column_number": 24,
                "description": "in call to `std::optional::optional()` (modelled)"
            },
            {
                "level": 4,
                "filename": "include/bslstl_optional.h",
                "line_number": 4130,
                "column_number": 24,
                "description": "is assigned an empty value"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcr/ntcr_interface.cpp",
                "line_number": 1380,
                "column_number": 5,
                "description": "use-after-lifetime part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcr/ntcr_interface.cpp",
                "line_number": 1380,
                "column_number": 5,
                "description": "variable `reactor` declared here"
            },
            {
                "level": 1,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcr/ntcr_interface.cpp",
                "line_number": 1381,
                "column_number": 9,
                "description": "in call to function `BloombergLP::ntcr::Interface::acquireReactor` with no summary"
            },
            {
                "level": 1,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcr/ntcr_interface.cpp",
                "line_number": 1384,
                "column_number": 5,
                "description": "in call to `bsl::shared_ptr<BloombergLP::ntci::Reactor>::operator->`"
            },
            {
                "level": 2,
                "filename": "include/bslstl_sharedptr.h",
                "line_number": 5420,
                "column_number": 1,
                "description": "parameter `this` of bsl::shared_ptr<BloombergLP::ntci::Reactor>::operator->"
            },
            {
                "level": 2,
                "filename": "include/bslstl_sharedptr.h",
                "line_number": 5424,
                "column_number": 5,
                "description": "returned"
            },
            {
                "level": 1,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcr/ntcr_interface.cpp",
                "line_number": 1384,
                "column_number": 5,
                "description": "return from call to `bsl::shared_ptr<BloombergLP::ntci::Reactor>::operator->`"
            },
            {
                "level": 1,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcr/ntcr_interface.cpp",
                "line_number": 1384,
                "column_number": 5,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 14,
        "bug_trace_max_depth": 4,
        "key": "ntcr_interface.cpp|moveAndExecute|OPTIONAL_EMPTY_ACCESS",
        "node_key": "d24be0c06d25c4b217850f676613c6e5",
        "hash": "8919f1ba678ee9e10fc05a9ece11365e",
        "bug_type_hum": "Optional Empty Access",
        "extras": {}
    },
    {
        "bug_type": "OPTIONAL_EMPTY_ACCESS",
        "qualifier": "accessing `reactor.operator->()` that is assigned an empty value during the call to `BloombergLP::ntca::LoadBalancingOptions::LoadBalancingOptions()` on line 1396.",
        "severity": "ERROR",
        "category": "Runtime exception",
        "line": 1403,
        "column": 12,
        "procedure": "BloombergLP::ntcr::Interface::createTimer",
        "procedure_start_line": 1387,
        "file": "thirdparty/ntf-core/groups/ntc/ntcr/ntcr_interface.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcr/ntcr_interface.cpp",
                "line_number": 1396,
                "column_number": 32,
                "description": "invalidation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcr/ntcr_interface.cpp",
                "line_number": 1396,
                "column_number": 32,
                "description": "when calling `BloombergLP::ntca::LoadBalancingOptions::LoadBalancingOptions` here"
            },
            {
                "level": 2,
                "filename": "thirdparty/ntf-core/groups/ntc/ntca/ntca_loadbalancingoptions.cpp",
                "line_number": 33,
                "column_number": 3,
                "description": "when calling `BloombergLP::bdlb::NullableValue<unsigned long>::NullableValue` here"
            },
            {
                "level": 3,
                "filename": "include/bdlb_nullablevalue.h",
                "line_number": 1270,
                "column_number": 22,
                "description": "when calling `bsl::optional<unsigned long,0>::optional` here"
            },
            {
                "level": 4,
                "filename": "include/bslstl_optional.h",
                "line_number": 4130,
                "column_number": 24,
                "description": "in call to `std::optional::optional()` (modelled)"
            },
            {
                "level": 4,
                "filename": "include/bslstl_optional.h",
                "line_number": 4130,
                "column_number": 24,
                "description": "is assigned an empty value"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcr/ntcr_interface.cpp",
                "line_number": 1399,
                "column_number": 5,
                "description": "use-after-lifetime part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcr/ntcr_interface.cpp",
                "line_number": 1399,
                "column_number": 5,
                "description": "variable `reactor` declared here"
            },
            {
                "level": 1,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcr/ntcr_interface.cpp",
                "line_number": 1400,
                "column_number": 9,
                "description": "in call to function `BloombergLP::ntcr::Interface::acquireReactor` with no summary"
            },
            {
                "level": 1,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcr/ntcr_interface.cpp",
                "line_number": 1403,
                "column_number": 12,
                "description": "in call to `bsl::shared_ptr<BloombergLP::ntci::Reactor>::operator->`"
            },
            {
                "level": 2,
                "filename": "include/bslstl_sharedptr.h",
                "line_number": 5420,
                "column_number": 1,
                "description": "parameter `this` of bsl::shared_ptr<BloombergLP::ntci::Reactor>::operator->"
            },
            {
                "level": 2,
                "filename": "include/bslstl_sharedptr.h",
                "line_number": 5424,
                "column_number": 5,
                "description": "returned"
            },
            {
                "level": 1,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcr/ntcr_interface.cpp",
                "line_number": 1403,
                "column_number": 12,
                "description": "return from call to `bsl::shared_ptr<BloombergLP::ntci::Reactor>::operator->`"
            },
            {
                "level": 1,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcr/ntcr_interface.cpp",
                "line_number": 1403,
                "column_number": 12,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 14,
        "bug_trace_max_depth": 4,
        "key": "ntcr_interface.cpp|createTimer|OPTIONAL_EMPTY_ACCESS",
        "node_key": "639797687cb3740a3c5791ba9d068474",
        "hash": "38356eacf53adc62ada2cdf28ba7161c",
        "bug_type_hum": "Optional Empty Access",
        "extras": {}
    },
    {
        "bug_type": "OPTIONAL_EMPTY_ACCESS",
        "qualifier": "accessing `reactor.operator->()` that is assigned an empty value during the call to `BloombergLP::ntca::LoadBalancingOptions::LoadBalancingOptions()` on line 1415.",
        "severity": "ERROR",
        "category": "Runtime exception",
        "line": 1422,
        "column": 12,
        "procedure": "BloombergLP::ntcr::Interface::createTimer",
        "procedure_start_line": 1406,
        "file": "thirdparty/ntf-core/groups/ntc/ntcr/ntcr_interface.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcr/ntcr_interface.cpp",
                "line_number": 1415,
                "column_number": 32,
                "description": "invalidation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcr/ntcr_interface.cpp",
                "line_number": 1415,
                "column_number": 32,
                "description": "when calling `BloombergLP::ntca::LoadBalancingOptions::LoadBalancingOptions` here"
            },
            {
                "level": 2,
                "filename": "thirdparty/ntf-core/groups/ntc/ntca/ntca_loadbalancingoptions.cpp",
                "line_number": 33,
                "column_number": 3,
                "description": "when calling `BloombergLP::bdlb::NullableValue<unsigned long>::NullableValue` here"
            },
            {
                "level": 3,
                "filename": "include/bdlb_nullablevalue.h",
                "line_number": 1270,
                "column_number": 22,
                "description": "when calling `bsl::optional<unsigned long,0>::optional` here"
            },
            {
                "level": 4,
                "filename": "include/bslstl_optional.h",
                "line_number": 4130,
                "column_number": 24,
                "description": "in call to `std::optional::optional()` (modelled)"
            },
            {
                "level": 4,
                "filename": "include/bslstl_optional.h",
                "line_number": 4130,
                "column_number": 24,
                "description": "is assigned an empty value"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcr/ntcr_interface.cpp",
                "line_number": 1418,
                "column_number": 5,
                "description": "use-after-lifetime part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcr/ntcr_interface.cpp",
                "line_number": 1418,
                "column_number": 5,
                "description": "variable `reactor` declared here"
            },
            {
                "level": 1,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcr/ntcr_interface.cpp",
                "line_number": 1419,
                "column_number": 9,
                "description": "in call to function `BloombergLP::ntcr::Interface::acquireReactor` with no summary"
            },
            {
                "level": 1,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcr/ntcr_interface.cpp",
                "line_number": 1422,
                "column_number": 12,
                "description": "in call to `bsl::shared_ptr<BloombergLP::ntci::Reactor>::operator->`"
            },
            {
                "level": 2,
                "filename": "include/bslstl_sharedptr.h",
                "line_number": 5420,
                "column_number": 1,
                "description": "parameter `this` of bsl::shared_ptr<BloombergLP::ntci::Reactor>::operator->"
            },
            {
                "level": 2,
                "filename": "include/bslstl_sharedptr.h",
                "line_number": 5424,
                "column_number": 5,
                "description": "returned"
            },
            {
                "level": 1,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcr/ntcr_interface.cpp",
                "line_number": 1422,
                "column_number": 12,
                "description": "return from call to `bsl::shared_ptr<BloombergLP::ntci::Reactor>::operator->`"
            },
            {
                "level": 1,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcr/ntcr_interface.cpp",
                "line_number": 1422,
                "column_number": 12,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 14,
        "bug_trace_max_depth": 4,
        "key": "ntcr_interface.cpp|createTimer|OPTIONAL_EMPTY_ACCESS",
        "node_key": "639797687cb3740a3c5791ba9d068474",
        "hash": "38356eacf53adc62ada2cdf28ba7161c",
        "bug_type_hum": "Optional Empty Access",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `&sendEvent` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 3451,
        "column": 27,
        "procedure": "BloombergLP::ntcr::StreamSocket::privateSendEncrypted",
        "procedure_start_line": 3414,
        "file": "thirdparty/ntf-core/groups/ntc/ntcr/ntcr_streamsocket.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcr/ntcr_streamsocket.cpp",
                "line_number": 3451,
                "column_number": 27,
                "description": "copied here (with type `BloombergLP::ntca::SendEvent&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "ntcr_streamsocket.cpp|privateSendEncrypted|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "5d1231a753cfbd8b0a8b24fe9c3a48fe",
        "hash": "c3e0dd8212a048e3d43793342c522176",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "BloombergLP::ntca::SendEvent&"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `&sendEvent` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 3498,
        "column": 27,
        "procedure": "BloombergLP::ntcr::StreamSocket::privateSendEncrypted",
        "procedure_start_line": 3461,
        "file": "thirdparty/ntf-core/groups/ntc/ntcr/ntcr_streamsocket.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcr/ntcr_streamsocket.cpp",
                "line_number": 3498,
                "column_number": 27,
                "description": "copied here (with type `BloombergLP::ntca::SendEvent&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "ntcr_streamsocket.cpp|privateSendEncrypted|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "f80d33438996e4c339828fed54af0b78",
        "hash": "c3e0dd8212a048e3d43793342c522176",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "BloombergLP::ntca::SendEvent&"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `&bindEvent` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 3847,
        "column": 31,
        "procedure": "BloombergLP::ntcr::StreamSocket::processSourceEndpointResolution",
        "procedure_start_line": 3785,
        "file": "thirdparty/ntf-core/groups/ntc/ntcr/ntcr_streamsocket.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcr/ntcr_streamsocket.cpp",
                "line_number": 3847,
                "column_number": 31,
                "description": "copied here (with type `BloombergLP::ntca::BindEvent&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "ntcr_streamsocket.cpp|processSourceEndpointResolution|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "996b658c16a913ecea5a87297b6dc99c",
        "hash": "594b27418f51f04ec0b158f0815e2f36",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "BloombergLP::ntca::BindEvent&"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `&event` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 145,
        "column": 21,
        "procedure": "BloombergLP::ntcs::Chronology::Timer::processCallbackCancelled",
        "procedure_start_line": 133,
        "file": "thirdparty/ntf-core/groups/ntc/ntcs/ntcs_chronology.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcs/ntcs_chronology.cpp",
                "line_number": 145,
                "column_number": 21,
                "description": "copied here (with type `BloombergLP::ntca::TimerEvent&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "ntcs_chronology.cpp|processCallbackCancelled|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "c6fa565f3b7c7ccae1833e95de7ade09",
        "hash": "3564c3e9525d3335a68c6e0c1c18923f",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "BloombergLP::ntca::TimerEvent&"
        }
    },
    {
        "bug_type": "PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "qualifier": "variable `&event` is copied into an intermediate and is never modified.",
        "suggestion": "To avoid the copy, call `std::move` instead or change the callee's parameter type to `const &`.",
        "severity": "ERROR",
        "category": "Perf regression",
        "line": 184,
        "column": 21,
        "procedure": "BloombergLP::ntcs::Chronology::Timer::processCallbackClosed",
        "procedure_start_line": 173,
        "file": "thirdparty/ntf-core/groups/ntc/ntcs/ntcs_chronology.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcs/ntcs_chronology.cpp",
                "line_number": 184,
                "column_number": 21,
                "description": "copied here (with type `BloombergLP::ntca::TimerEvent&`)"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "ntcs_chronology.cpp|processCallbackClosed|PULSE_UNNECESSARY_COPY_INTERMEDIATE",
        "node_key": "c6fa565f3b7c7ccae1833e95de7ade09",
        "hash": "0d4852df123709cecc006cc42813d41d",
        "bug_type_hum": "Unnecessary Copy Intermediate",
        "extras": {
            "copy_type": "BloombergLP::ntca::TimerEvent&"
        }
    },
    {
        "bug_type": "NULLPTR_DEREFERENCE",
        "qualifier": "null (null value originating from line 641) is dereferenced.",
        "severity": "ERROR",
        "category": "Null pointer dereference",
        "line": 641,
        "column": 5,
        "procedure": "BloombergLP::ntcs::SkipList<long,BloombergLP::ntcs::Chronology::DeadlineMapEntry,BloombergLP::ntcs::SkipList_RandomLevelGenerator>::offsetOfPtrs",
        "procedure_start_line": 629,
        "file": "thirdparty/ntf-core/groups/ntc/ntcs/ntcs_skiplist.h",
        "bug_trace": [
            {
                "level": 1,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcs/ntcs_skiplist.h",
                "line_number": 641,
                "column_number": 5,
                "description": "is assigned to the null pointer"
            },
            {
                "level": 1,
                "filename": "thirdparty/ntf-core/groups/ntc/ntcs/ntcs_skiplist.h",
                "line_number": 641,
                "column_number": 5,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 1,
        "key": "ntcs_skiplist.h|offsetOfPtrs|NULLPTR_DEREFERENCE",
        "node_key": "bffdbc4d6fbdfc9cd869008e74879d86",
        "hash": "42329a55d80b8e9419cb71a24feaf5b9",
        "bug_type_hum": "Null Dereference",
        "extras": {}
    },
    {
        "bug_type": "INFINITE_LOOP",
        "qualifier": "Recurring state leading to infinite execution at line 647, column 9.",
        "severity": "ERROR",
        "category": "No_category",
        "line": 647,
        "column": 9,
        "procedure": "BloombergLP::ntsa::AbstractSyntaxEncoderFrame::encodeValue",
        "procedure_start_line": 602,
        "file": "thirdparty/ntf-core/groups/nts/ntsa/ntsa_abstract.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntsa/ntsa_abstract.cpp",
                "line_number": 647,
                "column_number": 9,
                "description": "in loop"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "ntsa_abstract.cpp|encodeValue|INFINITE_LOOP",
        "node_key": "82e22d939134fe2d2a18a41b5764660c",
        "hash": "e0094a760aaedfe4f90410151e70cc0a",
        "bug_type_hum": "Infinite Loop",
        "extras": {}
    },
    {
        "bug_type": "INFINITE_LOOP",
        "qualifier": "Recurring state leading to infinite execution at line 1501, column 9.",
        "severity": "ERROR",
        "category": "No_category",
        "line": 1501,
        "column": 9,
        "procedure": "BloombergLP::ntsa::AbstractSyntaxEncoderUtil::encodeLength",
        "procedure_start_line": 1469,
        "file": "thirdparty/ntf-core/groups/nts/ntsa/ntsa_abstract.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntsa/ntsa_abstract.cpp",
                "line_number": 1501,
                "column_number": 9,
                "description": "in loop"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "ntsa_abstract.cpp|encodeLength|INFINITE_LOOP",
        "node_key": "82e22d939134fe2d2a18a41b5764660c",
        "hash": "5db4a52f1e108f79d6829b956bc328fe",
        "bug_type_hum": "Infinite Loop",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`nextOctet` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 3334,
        "column": 37,
        "procedure": "BloombergLP::ntsa::AbstractSyntaxDecoderUtil::decodeTag",
        "procedure_start_line": 3315,
        "file": "thirdparty/ntf-core/groups/nts/ntsa/ntsa_abstract.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntsa/ntsa_abstract.cpp",
                "line_number": 3315,
                "column_number": 1,
                "description": "variable `nextOctet` declared here"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntsa/ntsa_abstract.cpp",
                "line_number": 3334,
                "column_number": 37,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "ntsa_abstract.cpp|decodeTag|PULSE_UNINITIALIZED_VALUE",
        "node_key": "847c636c3be2f94714b96b347bb67a65",
        "hash": "656f5cabe8a2aeedcdde45afaaf4eec2",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "INFINITE_LOOP",
        "qualifier": "Recurring state leading to infinite execution at line 3417, column 13.",
        "severity": "ERROR",
        "category": "No_category",
        "line": 3417,
        "column": 13,
        "procedure": "BloombergLP::ntsa::AbstractSyntaxDecoderUtil::decodeLength",
        "procedure_start_line": 3383,
        "file": "thirdparty/ntf-core/groups/nts/ntsa/ntsa_abstract.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntsa/ntsa_abstract.cpp",
                "line_number": 3417,
                "column_number": 13,
                "description": "in loop"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "ntsa_abstract.cpp|decodeLength|INFINITE_LOOP",
        "node_key": "82e22d939134fe2d2a18a41b5764660c",
        "hash": "a33ea1d8036a96716fd9011aabf576c8",
        "bug_type_hum": "Infinite Loop",
        "extras": {}
    },
    {
        "bug_type": "PULSE_RESOURCE_LEAK",
        "qualifier": "File descriptor dynamically allocated by `fopen()`, indirectly via call to `BloombergLP::ntsu::SocketUtil::create()` on line 51 is not closed after the last access at line 60, column 1.",
        "severity": "ERROR",
        "category": "Resource leak",
        "line": 60,
        "column": 1,
        "procedure": "BloombergLP::ntsb::DatagramSocket::open",
        "procedure_start_line": 44,
        "file": "thirdparty/ntf-core/groups/nts/ntsb/ntsb_datagramsocket.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntsb/ntsb_datagramsocket.cpp",
                "line_number": 51,
                "column_number": 26,
                "description": "allocation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "thirdparty/ntf-core/groups/nts/ntsb/ntsb_datagramsocket.cpp",
                "line_number": 51,
                "column_number": 26,
                "description": "when calling `BloombergLP::ntsu::SocketUtil::create` here"
            },
            {
                "level": 2,
                "filename": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
                "line_number": 1100,
                "column_number": 15,
                "description": "allocated by `fopen()` here"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntsb/ntsb_datagramsocket.cpp",
                "line_number": 60,
                "column_number": 1,
                "description": "file descriptor becomes unreachable here"
            }
        ],
        "bug_trace_length": 4,
        "bug_trace_max_depth": 2,
        "key": "ntsb_datagramsocket.cpp|open|PULSE_RESOURCE_LEAK",
        "node_key": "e43eaed40bc499fb2714e8566c41249b",
        "hash": "49ccae8ab48fb0b5938e6ae9d7e3eefb",
        "bug_type_hum": "Resource Leak",
        "extras": {}
    },
    {
        "bug_type": "PULSE_RESOURCE_LEAK",
        "qualifier": "File descriptor dynamically allocated by `fopen()`, indirectly via call to `BloombergLP::ntsu::SocketUtil::pair()` on line 249 is not closed after the last access at line 255, column 5.",
        "severity": "ERROR",
        "category": "Resource leak",
        "line": 255,
        "column": 5,
        "procedure": "BloombergLP::ntsb::DatagramSocket::pair",
        "procedure_start_line": 241,
        "file": "thirdparty/ntf-core/groups/nts/ntsb/ntsb_datagramsocket.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntsb/ntsb_datagramsocket.cpp",
                "line_number": 249,
                "column_number": 9,
                "description": "allocation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "thirdparty/ntf-core/groups/nts/ntsb/ntsb_datagramsocket.cpp",
                "line_number": 249,
                "column_number": 9,
                "description": "when calling `BloombergLP::ntsu::SocketUtil::pair` here"
            },
            {
                "level": 2,
                "filename": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
                "line_number": 4064,
                "column_number": 17,
                "description": "when calling `BloombergLP::ntsu::SocketUtil::create` here"
            },
            {
                "level": 3,
                "filename": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
                "line_number": 1100,
                "column_number": 15,
                "description": "allocated by `fopen()` here"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntsb/ntsb_datagramsocket.cpp",
                "line_number": 255,
                "column_number": 5,
                "description": "file descriptor becomes unreachable here"
            }
        ],
        "bug_trace_length": 5,
        "bug_trace_max_depth": 3,
        "key": "ntsb_datagramsocket.cpp|pair|PULSE_RESOURCE_LEAK",
        "node_key": "bc4989cc9780fa0901d81fdc195144aa",
        "hash": "8f84c665429a7f0a7c4d9d37866c7a63",
        "bug_type_hum": "Resource Leak",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`clientHandle` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 255,
        "column": 21,
        "procedure": "BloombergLP::ntsb::DatagramSocket::pair",
        "procedure_start_line": 241,
        "file": "thirdparty/ntf-core/groups/nts/ntsb/ntsb_datagramsocket.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntsb/ntsb_datagramsocket.cpp",
                "line_number": 241,
                "column_number": 1,
                "description": "variable `clientHandle` declared here"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntsb/ntsb_datagramsocket.cpp",
                "line_number": 255,
                "column_number": 21,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "ntsb_datagramsocket.cpp|pair|PULSE_UNINITIALIZED_VALUE",
        "node_key": "ef43566449b136347ea2b6090b787a74",
        "hash": "266c0ce3c9d2ede2a378b5321e0d17b3",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`serverHandle` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 256,
        "column": 21,
        "procedure": "BloombergLP::ntsb::DatagramSocket::pair",
        "procedure_start_line": 241,
        "file": "thirdparty/ntf-core/groups/nts/ntsb/ntsb_datagramsocket.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntsb/ntsb_datagramsocket.cpp",
                "line_number": 241,
                "column_number": 1,
                "description": "variable `serverHandle` declared here"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntsb/ntsb_datagramsocket.cpp",
                "line_number": 256,
                "column_number": 21,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "ntsb_datagramsocket.cpp|pair|PULSE_UNINITIALIZED_VALUE",
        "node_key": "74662da1246a3a9cc979057eed3ad9c2",
        "hash": "f47e1d483aaf2cbcd7e34d06e564956f",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_RESOURCE_LEAK",
        "qualifier": "File descriptor dynamically allocated by `fopen()`, indirectly via call to `BloombergLP::ntsu::SocketUtil::pair()` on line 249 is not closed after the last access at line 259, column 1.",
        "severity": "ERROR",
        "category": "Resource leak",
        "line": 259,
        "column": 1,
        "procedure": "BloombergLP::ntsb::DatagramSocket::pair",
        "procedure_start_line": 241,
        "file": "thirdparty/ntf-core/groups/nts/ntsb/ntsb_datagramsocket.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntsb/ntsb_datagramsocket.cpp",
                "line_number": 249,
                "column_number": 9,
                "description": "allocation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "thirdparty/ntf-core/groups/nts/ntsb/ntsb_datagramsocket.cpp",
                "line_number": 249,
                "column_number": 9,
                "description": "when calling `BloombergLP::ntsu::SocketUtil::pair` here"
            },
            {
                "level": 2,
                "filename": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
                "line_number": 4064,
                "column_number": 17,
                "description": "when calling `BloombergLP::ntsu::SocketUtil::create` here"
            },
            {
                "level": 3,
                "filename": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
                "line_number": 1100,
                "column_number": 15,
                "description": "allocated by `fopen()` here"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntsb/ntsb_datagramsocket.cpp",
                "line_number": 259,
                "column_number": 1,
                "description": "file descriptor becomes unreachable here"
            }
        ],
        "bug_trace_length": 5,
        "bug_trace_max_depth": 3,
        "key": "ntsb_datagramsocket.cpp|pair|PULSE_RESOURCE_LEAK",
        "node_key": "bc4989cc9780fa0901d81fdc195144aa",
        "hash": "8f84c665429a7f0a7c4d9d37866c7a63",
        "bug_type_hum": "Resource Leak",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`clientHandle` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 279,
        "column": 56,
        "procedure": "BloombergLP::ntsb::DatagramSocket::pair",
        "procedure_start_line": 261,
        "file": "thirdparty/ntf-core/groups/nts/ntsb/ntsb_datagramsocket.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntsb/ntsb_datagramsocket.cpp",
                "line_number": 261,
                "column_number": 1,
                "description": "variable `clientHandle` declared here"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntsb/ntsb_datagramsocket.cpp",
                "line_number": 279,
                "column_number": 56,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "ntsb_datagramsocket.cpp|pair|PULSE_UNINITIALIZED_VALUE",
        "node_key": "5cc3e8bbfd2e5d0c76c1f50e95519110",
        "hash": "266c0ce3c9d2ede2a378b5321e0d17b3",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`serverHandle` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 282,
        "column": 56,
        "procedure": "BloombergLP::ntsb::DatagramSocket::pair",
        "procedure_start_line": 261,
        "file": "thirdparty/ntf-core/groups/nts/ntsb/ntsb_datagramsocket.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntsb/ntsb_datagramsocket.cpp",
                "line_number": 261,
                "column_number": 1,
                "description": "variable `serverHandle` declared here"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntsb/ntsb_datagramsocket.cpp",
                "line_number": 282,
                "column_number": 56,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "ntsb_datagramsocket.cpp|pair|PULSE_UNINITIALIZED_VALUE",
        "node_key": "5cc3e8bbfd2e5d0c76c1f50e95519110",
        "hash": "f47e1d483aaf2cbcd7e34d06e564956f",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_RESOURCE_LEAK",
        "qualifier": "File descriptor dynamically allocated by `fopen()`, indirectly via call to `BloombergLP::ntsu::SocketUtil::create()` on line 51 is not closed after the last access at line 60, column 1.",
        "severity": "ERROR",
        "category": "Resource leak",
        "line": 60,
        "column": 1,
        "procedure": "BloombergLP::ntsb::ListenerSocket::open",
        "procedure_start_line": 44,
        "file": "thirdparty/ntf-core/groups/nts/ntsb/ntsb_listenersocket.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntsb/ntsb_listenersocket.cpp",
                "line_number": 51,
                "column_number": 26,
                "description": "allocation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "thirdparty/ntf-core/groups/nts/ntsb/ntsb_listenersocket.cpp",
                "line_number": 51,
                "column_number": 26,
                "description": "when calling `BloombergLP::ntsu::SocketUtil::create` here"
            },
            {
                "level": 2,
                "filename": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
                "line_number": 1100,
                "column_number": 15,
                "description": "allocated by `fopen()` here"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntsb/ntsb_listenersocket.cpp",
                "line_number": 60,
                "column_number": 1,
                "description": "file descriptor becomes unreachable here"
            }
        ],
        "bug_trace_length": 4,
        "bug_trace_max_depth": 2,
        "key": "ntsb_listenersocket.cpp|open|PULSE_RESOURCE_LEAK",
        "node_key": "e43eaed40bc499fb2714e8566c41249b",
        "hash": "3c85de14d7c01e1054920f58d71a7514",
        "bug_type_hum": "Resource Leak",
        "extras": {}
    },
    {
        "bug_type": "PULSE_RESOURCE_LEAK",
        "qualifier": "File descriptor dynamically allocated by `fopen()`, indirectly via call to `BloombergLP::ntsu::SocketUtil::create()` on line 51 is not closed after the last access at line 60, column 1.",
        "severity": "ERROR",
        "category": "Resource leak",
        "line": 60,
        "column": 1,
        "procedure": "BloombergLP::ntsb::StreamSocket::open",
        "procedure_start_line": 44,
        "file": "thirdparty/ntf-core/groups/nts/ntsb/ntsb_streamsocket.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntsb/ntsb_streamsocket.cpp",
                "line_number": 51,
                "column_number": 26,
                "description": "allocation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "thirdparty/ntf-core/groups/nts/ntsb/ntsb_streamsocket.cpp",
                "line_number": 51,
                "column_number": 26,
                "description": "when calling `BloombergLP::ntsu::SocketUtil::create` here"
            },
            {
                "level": 2,
                "filename": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
                "line_number": 1100,
                "column_number": 15,
                "description": "allocated by `fopen()` here"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntsb/ntsb_streamsocket.cpp",
                "line_number": 60,
                "column_number": 1,
                "description": "file descriptor becomes unreachable here"
            }
        ],
        "bug_trace_length": 4,
        "bug_trace_max_depth": 2,
        "key": "ntsb_streamsocket.cpp|open|PULSE_RESOURCE_LEAK",
        "node_key": "e43eaed40bc499fb2714e8566c41249b",
        "hash": "18b0dd8f90be0dc8f0fb1f25f2c22b15",
        "bug_type_hum": "Resource Leak",
        "extras": {}
    },
    {
        "bug_type": "PULSE_RESOURCE_LEAK",
        "qualifier": "File descriptor dynamically allocated by `fopen()`, indirectly via call to `BloombergLP::ntsu::SocketUtil::pair()` on line 218 is not closed after the last access at line 224, column 5.",
        "severity": "ERROR",
        "category": "Resource leak",
        "line": 224,
        "column": 5,
        "procedure": "BloombergLP::ntsb::StreamSocket::pair",
        "procedure_start_line": 210,
        "file": "thirdparty/ntf-core/groups/nts/ntsb/ntsb_streamsocket.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntsb/ntsb_streamsocket.cpp",
                "line_number": 218,
                "column_number": 9,
                "description": "allocation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "thirdparty/ntf-core/groups/nts/ntsb/ntsb_streamsocket.cpp",
                "line_number": 218,
                "column_number": 9,
                "description": "when calling `BloombergLP::ntsu::SocketUtil::pair` here"
            },
            {
                "level": 2,
                "filename": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
                "line_number": 4064,
                "column_number": 17,
                "description": "when calling `BloombergLP::ntsu::SocketUtil::create` here"
            },
            {
                "level": 3,
                "filename": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
                "line_number": 1100,
                "column_number": 15,
                "description": "allocated by `fopen()` here"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntsb/ntsb_streamsocket.cpp",
                "line_number": 224,
                "column_number": 5,
                "description": "file descriptor becomes unreachable here"
            }
        ],
        "bug_trace_length": 5,
        "bug_trace_max_depth": 3,
        "key": "ntsb_streamsocket.cpp|pair|PULSE_RESOURCE_LEAK",
        "node_key": "bc4989cc9780fa0901d81fdc195144aa",
        "hash": "7dd1594dc82efa6cff78d9287b1ae36e",
        "bug_type_hum": "Resource Leak",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`clientHandle` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 224,
        "column": 21,
        "procedure": "BloombergLP::ntsb::StreamSocket::pair",
        "procedure_start_line": 210,
        "file": "thirdparty/ntf-core/groups/nts/ntsb/ntsb_streamsocket.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntsb/ntsb_streamsocket.cpp",
                "line_number": 210,
                "column_number": 1,
                "description": "variable `clientHandle` declared here"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntsb/ntsb_streamsocket.cpp",
                "line_number": 224,
                "column_number": 21,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "ntsb_streamsocket.cpp|pair|PULSE_UNINITIALIZED_VALUE",
        "node_key": "ef43566449b136347ea2b6090b787a74",
        "hash": "d0c72154825d8614e641aa8a8c57c522",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`serverHandle` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 225,
        "column": 21,
        "procedure": "BloombergLP::ntsb::StreamSocket::pair",
        "procedure_start_line": 210,
        "file": "thirdparty/ntf-core/groups/nts/ntsb/ntsb_streamsocket.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntsb/ntsb_streamsocket.cpp",
                "line_number": 210,
                "column_number": 1,
                "description": "variable `serverHandle` declared here"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntsb/ntsb_streamsocket.cpp",
                "line_number": 225,
                "column_number": 21,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "ntsb_streamsocket.cpp|pair|PULSE_UNINITIALIZED_VALUE",
        "node_key": "74662da1246a3a9cc979057eed3ad9c2",
        "hash": "abe4bb4eb1a8ec6d4a44ac26fb22bbb5",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_RESOURCE_LEAK",
        "qualifier": "File descriptor dynamically allocated by `fopen()`, indirectly via call to `BloombergLP::ntsu::SocketUtil::pair()` on line 218 is not closed after the last access at line 228, column 1.",
        "severity": "ERROR",
        "category": "Resource leak",
        "line": 228,
        "column": 1,
        "procedure": "BloombergLP::ntsb::StreamSocket::pair",
        "procedure_start_line": 210,
        "file": "thirdparty/ntf-core/groups/nts/ntsb/ntsb_streamsocket.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntsb/ntsb_streamsocket.cpp",
                "line_number": 218,
                "column_number": 9,
                "description": "allocation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "thirdparty/ntf-core/groups/nts/ntsb/ntsb_streamsocket.cpp",
                "line_number": 218,
                "column_number": 9,
                "description": "when calling `BloombergLP::ntsu::SocketUtil::pair` here"
            },
            {
                "level": 2,
                "filename": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
                "line_number": 4064,
                "column_number": 17,
                "description": "when calling `BloombergLP::ntsu::SocketUtil::create` here"
            },
            {
                "level": 3,
                "filename": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
                "line_number": 1100,
                "column_number": 15,
                "description": "allocated by `fopen()` here"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntsb/ntsb_streamsocket.cpp",
                "line_number": 228,
                "column_number": 1,
                "description": "file descriptor becomes unreachable here"
            }
        ],
        "bug_trace_length": 5,
        "bug_trace_max_depth": 3,
        "key": "ntsb_streamsocket.cpp|pair|PULSE_RESOURCE_LEAK",
        "node_key": "bc4989cc9780fa0901d81fdc195144aa",
        "hash": "7dd1594dc82efa6cff78d9287b1ae36e",
        "bug_type_hum": "Resource Leak",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`clientHandle` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 247,
        "column": 54,
        "procedure": "BloombergLP::ntsb::StreamSocket::pair",
        "procedure_start_line": 230,
        "file": "thirdparty/ntf-core/groups/nts/ntsb/ntsb_streamsocket.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntsb/ntsb_streamsocket.cpp",
                "line_number": 230,
                "column_number": 1,
                "description": "variable `clientHandle` declared here"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntsb/ntsb_streamsocket.cpp",
                "line_number": 247,
                "column_number": 54,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "ntsb_streamsocket.cpp|pair|PULSE_UNINITIALIZED_VALUE",
        "node_key": "5cc3e8bbfd2e5d0c76c1f50e95519110",
        "hash": "d0c72154825d8614e641aa8a8c57c522",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`serverHandle` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 248,
        "column": 54,
        "procedure": "BloombergLP::ntsb::StreamSocket::pair",
        "procedure_start_line": 230,
        "file": "thirdparty/ntf-core/groups/nts/ntsb/ntsb_streamsocket.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntsb/ntsb_streamsocket.cpp",
                "line_number": 230,
                "column_number": 1,
                "description": "variable `serverHandle` declared here"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntsb/ntsb_streamsocket.cpp",
                "line_number": 248,
                "column_number": 54,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "ntsb_streamsocket.cpp|pair|PULSE_UNINITIALIZED_VALUE",
        "node_key": "5cc3e8bbfd2e5d0c76c1f50e95519110",
        "hash": "abe4bb4eb1a8ec6d4a44ac26fb22bbb5",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`socketAddressStorageSize` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 275,
        "column": 21,
        "procedure": "BloombergLP::ntsu::ResolverUtil::getDomainName",
        "procedure_start_line": 257,
        "file": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_resolverutil.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_resolverutil.cpp",
                "line_number": 257,
                "column_number": 1,
                "description": "variable `socketAddressStorageSize` declared here"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_resolverutil.cpp",
                "line_number": 275,
                "column_number": 21,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntscfg/ntscfg_platform.h",
                "line_number": 168,
                "column_number": -1,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "ntsu_resolverutil.cpp|getDomainName|PULSE_UNINITIALIZED_VALUE",
        "node_key": "9793b83b5da0429b4ea183550d6f401c",
        "hash": "e16512b7d17717278d2b8e3773f46152",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`socketAddressStorageSize` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 483,
        "column": 21,
        "procedure": "BloombergLP::ntsu::ResolverUtil::getServiceName",
        "procedure_start_line": 447,
        "file": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_resolverutil.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_resolverutil.cpp",
                "line_number": 447,
                "column_number": 1,
                "description": "variable `socketAddressStorageSize` declared here"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_resolverutil.cpp",
                "line_number": 483,
                "column_number": 21,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntscfg/ntscfg_platform.h",
                "line_number": 168,
                "column_number": -1,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "ntsu_resolverutil.cpp|getServiceName|PULSE_UNINITIALIZED_VALUE",
        "node_key": "9793b83b5da0429b4ea183550d6f401c",
        "hash": "22c5a374c64668bf62747a9998537987",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_RESOURCE_LEAK",
        "qualifier": "File descriptor dynamically allocated by `fopen()`, indirectly via call to `BloombergLP::ntsu::SocketUtil::create()` on line 4038 is not closed after the last access at line 4220, column 1.",
        "severity": "ERROR",
        "category": "Resource leak",
        "line": 4220,
        "column": 1,
        "procedure": "BloombergLP::ntsu::SocketUtil::pair",
        "procedure_start_line": 3983,
        "file": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
                "line_number": 4038,
                "column_number": 17,
                "description": "allocation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
                "line_number": 4038,
                "column_number": 17,
                "description": "when calling `BloombergLP::ntsu::SocketUtil::create` here"
            },
            {
                "level": 2,
                "filename": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
                "line_number": 1100,
                "column_number": 15,
                "description": "allocated by `fopen()` here"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
                "line_number": 4220,
                "column_number": 1,
                "description": "file descriptor becomes unreachable here"
            }
        ],
        "bug_trace_length": 4,
        "bug_trace_max_depth": 2,
        "key": "ntsu_socketutil.cpp|pair|PULSE_RESOURCE_LEAK",
        "node_key": "468b0b2396c04808d0f6ff1540dad334",
        "hash": "3a15a57cf0e271c842f7d7181d7fa4af",
        "bug_type_hum": "Resource Leak",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`address` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 4496,
        "column": 39,
        "procedure": "BloombergLP::ntsu::reportInfoProcNetTcpLine",
        "procedure_start_line": 4427,
        "file": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
                "line_number": 4427,
                "column_number": 1,
                "description": "variable `address` declared here"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
                "line_number": 4496,
                "column_number": 39,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "ntsu_socketutil.cpp|BloombergLP::ntsu::reportInfoProcNetTcpLine|PULSE_UNINITIALIZED_VALUE",
        "node_key": "8f04eeb938d253aaa5cfc2961a8395b3",
        "hash": "77f82d31c189e26c2546b6aa4338fdda",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`port` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 4498,
        "column": 50,
        "procedure": "BloombergLP::ntsu::reportInfoProcNetTcpLine",
        "procedure_start_line": 4427,
        "file": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
                "line_number": 4427,
                "column_number": 1,
                "description": "variable `port` declared here"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
                "line_number": 4498,
                "column_number": 50,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "ntsu_socketutil.cpp|BloombergLP::ntsu::reportInfoProcNetTcpLine|PULSE_UNINITIALIZED_VALUE",
        "node_key": "b2c4c777fa9122b0a2a7c821cd70fd52",
        "hash": "c586938236c8fd10c0df642342ea0204",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`address` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 4536,
        "column": 39,
        "procedure": "BloombergLP::ntsu::reportInfoProcNetTcpLine",
        "procedure_start_line": 4427,
        "file": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
                "line_number": 4427,
                "column_number": 1,
                "description": "variable `address` declared here"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
                "line_number": 4536,
                "column_number": 39,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "ntsu_socketutil.cpp|BloombergLP::ntsu::reportInfoProcNetTcpLine|PULSE_UNINITIALIZED_VALUE",
        "node_key": "8f04eeb938d253aaa5cfc2961a8395b3",
        "hash": "77f82d31c189e26c2546b6aa4338fdda",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`port` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 4538,
        "column": 50,
        "procedure": "BloombergLP::ntsu::reportInfoProcNetTcpLine",
        "procedure_start_line": 4427,
        "file": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
                "line_number": 4427,
                "column_number": 1,
                "description": "variable `port` declared here"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
                "line_number": 4538,
                "column_number": 50,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "ntsu_socketutil.cpp|BloombergLP::ntsu::reportInfoProcNetTcpLine|PULSE_UNINITIALIZED_VALUE",
        "node_key": "b2c4c777fa9122b0a2a7c821cd70fd52",
        "hash": "c586938236c8fd10c0df642342ea0204",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`connectionState` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 4565,
        "column": 17,
        "procedure": "BloombergLP::ntsu::reportInfoProcNetTcpLine",
        "procedure_start_line": 4427,
        "file": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
                "line_number": 4427,
                "column_number": 1,
                "description": "variable `connectionState` declared here"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
                "line_number": 4565,
                "column_number": 17,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "ntsu_socketutil.cpp|BloombergLP::ntsu::reportInfoProcNetTcpLine|PULSE_UNINITIALIZED_VALUE",
        "node_key": "5df8374f7c1552703d94bb15c1f58ce9",
        "hash": "02e591a37df9b35ee7c0c7f90573b758",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`sendQueueSize` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 4618,
        "column": 37,
        "procedure": "BloombergLP::ntsu::reportInfoProcNetTcpLine",
        "procedure_start_line": 4427,
        "file": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
                "line_number": 4427,
                "column_number": 1,
                "description": "variable `sendQueueSize` declared here"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
                "line_number": 4618,
                "column_number": 37,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "ntsu_socketutil.cpp|BloombergLP::ntsu::reportInfoProcNetTcpLine|PULSE_UNINITIALIZED_VALUE",
        "node_key": "21c2d3e02aacbdd5e4d9271407967624",
        "hash": "c09ab64e07443d61a330a10bf10f401a",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`receiveQueueSize` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 4633,
        "column": 40,
        "procedure": "BloombergLP::ntsu::reportInfoProcNetTcpLine",
        "procedure_start_line": 4427,
        "file": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
                "line_number": 4427,
                "column_number": 1,
                "description": "variable `receiveQueueSize` declared here"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
                "line_number": 4633,
                "column_number": 40,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "ntsu_socketutil.cpp|BloombergLP::ntsu::reportInfoProcNetTcpLine|PULSE_UNINITIALIZED_VALUE",
        "node_key": "84c09b8b3b784857d267448514e0d734",
        "hash": "c5402ba09f6475c9863e6c668c76723f",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`userId` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 4693,
        "column": 30,
        "procedure": "BloombergLP::ntsu::reportInfoProcNetTcpLine",
        "procedure_start_line": 4427,
        "file": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
                "line_number": 4427,
                "column_number": 1,
                "description": "variable `userId` declared here"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
                "line_number": 4693,
                "column_number": 30,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "ntsu_socketutil.cpp|BloombergLP::ntsu::reportInfoProcNetTcpLine|PULSE_UNINITIALIZED_VALUE",
        "node_key": "ba54af6d72c7c0fa825db1a47ce7c526",
        "hash": "728fa8a052885b44b51b8b5e864edb47",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`address` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 4774,
        "column": 39,
        "procedure": "BloombergLP::ntsu::reportInfoProcNetUdpLine",
        "procedure_start_line": 4705,
        "file": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
                "line_number": 4705,
                "column_number": 1,
                "description": "variable `address` declared here"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
                "line_number": 4774,
                "column_number": 39,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "ntsu_socketutil.cpp|BloombergLP::ntsu::reportInfoProcNetUdpLine|PULSE_UNINITIALIZED_VALUE",
        "node_key": "8f04eeb938d253aaa5cfc2961a8395b3",
        "hash": "74523e12cfee3b0d8fdce301e77c1478",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`port` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 4776,
        "column": 50,
        "procedure": "BloombergLP::ntsu::reportInfoProcNetUdpLine",
        "procedure_start_line": 4705,
        "file": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
                "line_number": 4705,
                "column_number": 1,
                "description": "variable `port` declared here"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
                "line_number": 4776,
                "column_number": 50,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "ntsu_socketutil.cpp|BloombergLP::ntsu::reportInfoProcNetUdpLine|PULSE_UNINITIALIZED_VALUE",
        "node_key": "b2c4c777fa9122b0a2a7c821cd70fd52",
        "hash": "a0319a87e81dc28e6c530d0facbd2490",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`address` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 4814,
        "column": 39,
        "procedure": "BloombergLP::ntsu::reportInfoProcNetUdpLine",
        "procedure_start_line": 4705,
        "file": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
                "line_number": 4705,
                "column_number": 1,
                "description": "variable `address` declared here"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
                "line_number": 4814,
                "column_number": 39,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "ntsu_socketutil.cpp|BloombergLP::ntsu::reportInfoProcNetUdpLine|PULSE_UNINITIALIZED_VALUE",
        "node_key": "8f04eeb938d253aaa5cfc2961a8395b3",
        "hash": "74523e12cfee3b0d8fdce301e77c1478",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`port` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 4816,
        "column": 50,
        "procedure": "BloombergLP::ntsu::reportInfoProcNetUdpLine",
        "procedure_start_line": 4705,
        "file": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
                "line_number": 4705,
                "column_number": 1,
                "description": "variable `port` declared here"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
                "line_number": 4816,
                "column_number": 50,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "ntsu_socketutil.cpp|BloombergLP::ntsu::reportInfoProcNetUdpLine|PULSE_UNINITIALIZED_VALUE",
        "node_key": "b2c4c777fa9122b0a2a7c821cd70fd52",
        "hash": "a0319a87e81dc28e6c530d0facbd2490",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`connectionState` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 4843,
        "column": 17,
        "procedure": "BloombergLP::ntsu::reportInfoProcNetUdpLine",
        "procedure_start_line": 4705,
        "file": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
                "line_number": 4705,
                "column_number": 1,
                "description": "variable `connectionState` declared here"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
                "line_number": 4843,
                "column_number": 17,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "ntsu_socketutil.cpp|BloombergLP::ntsu::reportInfoProcNetUdpLine|PULSE_UNINITIALIZED_VALUE",
        "node_key": "5df8374f7c1552703d94bb15c1f58ce9",
        "hash": "80118f4dba67debee2b2974daa3e87fd",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`sendQueueSize` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 4896,
        "column": 37,
        "procedure": "BloombergLP::ntsu::reportInfoProcNetUdpLine",
        "procedure_start_line": 4705,
        "file": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
                "line_number": 4705,
                "column_number": 1,
                "description": "variable `sendQueueSize` declared here"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
                "line_number": 4896,
                "column_number": 37,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "ntsu_socketutil.cpp|BloombergLP::ntsu::reportInfoProcNetUdpLine|PULSE_UNINITIALIZED_VALUE",
        "node_key": "21c2d3e02aacbdd5e4d9271407967624",
        "hash": "77aad81067a2e563d2f10a260cd9d3c3",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`receiveQueueSize` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 4911,
        "column": 40,
        "procedure": "BloombergLP::ntsu::reportInfoProcNetUdpLine",
        "procedure_start_line": 4705,
        "file": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
                "line_number": 4705,
                "column_number": 1,
                "description": "variable `receiveQueueSize` declared here"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
                "line_number": 4911,
                "column_number": 40,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "ntsu_socketutil.cpp|BloombergLP::ntsu::reportInfoProcNetUdpLine|PULSE_UNINITIALIZED_VALUE",
        "node_key": "84c09b8b3b784857d267448514e0d734",
        "hash": "1475b4033b6894c5e58d21f3c7de167d",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`userId` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 4971,
        "column": 30,
        "procedure": "BloombergLP::ntsu::reportInfoProcNetUdpLine",
        "procedure_start_line": 4705,
        "file": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
        "bug_trace": [
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
                "line_number": 4705,
                "column_number": 1,
                "description": "variable `userId` declared here"
            },
            {
                "level": 0,
                "filename": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
                "line_number": 4971,
                "column_number": 30,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "ntsu_socketutil.cpp|BloombergLP::ntsu::reportInfoProcNetUdpLine|PULSE_UNINITIALIZED_VALUE",
        "node_key": "ba54af6d72c7c0fa825db1a47ce7c526",
        "hash": "938a1904273339a99a66ce7aeb86ca5f",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "NULLPTR_DEREFERENCE",
        "qualifier": "`file` could be null (null value originating from line 4999) and is dereferenced.",
        "severity": "ERROR",
        "category": "Null pointer dereference",
        "line": 5001,
        "column": 29,
        "procedure": "BloombergLP::ntsu::reportInfoProcNetTcp",
        "procedure_start_line": 4983,
        "file": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
        "bug_trace": [
            {
                "level": 1,
                "filename": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
                "line_number": 4999,
                "column_number": 18,
                "description": "in call to `fopen` (modelled)"
            },
            {
                "level": 1,
                "filename": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
                "line_number": 4999,
                "column_number": 18,
                "description": "is assigned to the null pointer"
            },
            {
                "level": 1,
                "filename": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
                "line_number": 4999,
                "column_number": 5,
                "description": "assigned"
            },
            {
                "level": 1,
                "filename": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
                "line_number": 5000,
                "column_number": 9,
                "description": "was compared to null on line 5000, column 9"
            },
            {
                "level": 1,
                "filename": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
                "line_number": 5001,
                "column_number": 29,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 5,
        "bug_trace_max_depth": 1,
        "key": "ntsu_socketutil.cpp|BloombergLP::ntsu::reportInfoProcNetTcp|NULLPTR_DEREFERENCE",
        "node_key": "776709b937e14c9bfd798e44240cbc79",
        "hash": "8bba09d73e02d98ad6500ccfc5953b0e",
        "bug_type_hum": "Null Dereference",
        "extras": {}
    },
    {
        "bug_type": "NULLPTR_DEREFERENCE",
        "qualifier": "`file` could be null (null value originating from line 5062) and is dereferenced.",
        "severity": "ERROR",
        "category": "Null pointer dereference",
        "line": 5064,
        "column": 29,
        "procedure": "BloombergLP::ntsu::reportInfoProcNetUdp",
        "procedure_start_line": 5046,
        "file": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
        "bug_trace": [
            {
                "level": 1,
                "filename": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
                "line_number": 5062,
                "column_number": 18,
                "description": "in call to `fopen` (modelled)"
            },
            {
                "level": 1,
                "filename": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
                "line_number": 5062,
                "column_number": 18,
                "description": "is assigned to the null pointer"
            },
            {
                "level": 1,
                "filename": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
                "line_number": 5062,
                "column_number": 5,
                "description": "assigned"
            },
            {
                "level": 1,
                "filename": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
                "line_number": 5063,
                "column_number": 9,
                "description": "was compared to null on line 5063, column 9"
            },
            {
                "level": 1,
                "filename": "thirdparty/ntf-core/groups/nts/ntsu/ntsu_socketutil.cpp",
                "line_number": 5064,
                "column_number": 29,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 5,
        "bug_trace_max_depth": 1,
        "key": "ntsu_socketutil.cpp|BloombergLP::ntsu::reportInfoProcNetUdp|NULLPTR_DEREFERENCE",
        "node_key": "776709b937e14c9bfd798e44240cbc79",
        "hash": "8810857f04d65d681d0fb1598a137a7a",
        "bug_type_hum": "Null Dereference",
        "extras": {}
    }
]
