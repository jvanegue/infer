[
    {
        "bug_type": "MEMORY_LEAK_C",
        "qualifier": "Memory dynamically allocated by `malloc`, indirectly via call to `aw_confalloc()` on line 1657 is not freed after the last access at line 1668, column 3.",
        "severity": "ERROR",
        "category": "Resource leak",
        "line": 1668,
        "column": 3,
        "procedure": "aw_conf_create_buffer",
        "procedure_start_line": 1653,
        "file": "build/subprojects/freeDiameter/extensions/acl_wl/acl_wl.fdx.p/lex.aw_conf.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "build/subprojects/freeDiameter/extensions/acl_wl/acl_wl.fdx.p/lex.aw_conf.c",
                "line_number": 1657,
                "column_number": 24,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "build/subprojects/freeDiameter/extensions/acl_wl/acl_wl.fdx.p/lex.aw_conf.c",
                "line_number": 30,
                "column_number": -1,
                "description": "allocation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "build/subprojects/freeDiameter/extensions/acl_wl/acl_wl.fdx.p/lex.aw_conf.c",
                "line_number": 1657,
                "column_number": 24,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "build/subprojects/freeDiameter/extensions/acl_wl/acl_wl.fdx.p/lex.aw_conf.c",
                "line_number": 30,
                "column_number": -1,
                "description": "when calling `aw_confalloc` here"
            },
            {
                "level": 2,
                "filename": "build/subprojects/freeDiameter/extensions/acl_wl/acl_wl.fdx.p/lex.aw_conf.c",
                "line_number": 2119,
                "column_number": 11,
                "description": "allocated by `malloc` here"
            },
            {
                "level": 0,
                "filename": "build/subprojects/freeDiameter/extensions/acl_wl/acl_wl.fdx.p/lex.aw_conf.c",
                "line_number": 1668,
                "column_number": 3,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "build/subprojects/freeDiameter/extensions/acl_wl/acl_wl.fdx.p/lex.aw_conf.c",
                "line_number": 968,
                "column_number": -1,
                "description": "memory becomes unreachable here"
            }
        ],
        "bug_trace_length": 4,
        "bug_trace_max_depth": 2,
        "key": "lex.aw_conf.c|aw_conf_create_buffer|MEMORY_LEAK_C",
        "node_key": "5404d4092cf9df1d56f88662365db637",
        "hash": "aa223a34c9d561bbaa1037a5b9ff6934",
        "bug_type_hum": "Memory Leak",
        "extras": {}
    },
    {
        "bug_type": "MEMORY_LEAK_C",
        "qualifier": "Memory dynamically allocated by `malloc`, indirectly via call to `rtd_confalloc()` on line 1836 is not freed after the last access at line 1847, column 3.",
        "severity": "ERROR",
        "category": "Resource leak",
        "line": 1847,
        "column": 3,
        "procedure": "rtd_conf_create_buffer",
        "procedure_start_line": 1832,
        "file": "build/subprojects/freeDiameter/extensions/rt_default/rt_default.fdx.p/lex.rtd_conf.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "build/subprojects/freeDiameter/extensions/rt_default/rt_default.fdx.p/lex.rtd_conf.c",
                "line_number": 1836,
                "column_number": 24,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "build/subprojects/freeDiameter/extensions/rt_default/rt_default.fdx.p/lex.rtd_conf.c",
                "line_number": 30,
                "column_number": -1,
                "description": "allocation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "build/subprojects/freeDiameter/extensions/rt_default/rt_default.fdx.p/lex.rtd_conf.c",
                "line_number": 1836,
                "column_number": 24,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "build/subprojects/freeDiameter/extensions/rt_default/rt_default.fdx.p/lex.rtd_conf.c",
                "line_number": 30,
                "column_number": -1,
                "description": "when calling `rtd_confalloc` here"
            },
            {
                "level": 2,
                "filename": "build/subprojects/freeDiameter/extensions/rt_default/rt_default.fdx.p/lex.rtd_conf.c",
                "line_number": 2298,
                "column_number": 11,
                "description": "allocated by `malloc` here"
            },
            {
                "level": 0,
                "filename": "build/subprojects/freeDiameter/extensions/rt_default/rt_default.fdx.p/lex.rtd_conf.c",
                "line_number": 1847,
                "column_number": 3,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "build/subprojects/freeDiameter/extensions/rt_default/rt_default.fdx.p/lex.rtd_conf.c",
                "line_number": 1031,
                "column_number": -1,
                "description": "memory becomes unreachable here"
            }
        ],
        "bug_trace_length": 4,
        "bug_trace_max_depth": 2,
        "key": "lex.rtd_conf.c|rtd_conf_create_buffer|MEMORY_LEAK_C",
        "node_key": "5404d4092cf9df1d56f88662365db637",
        "hash": "dabeee61e2302fdac95bb4bd1fa376ac",
        "bug_type_hum": "Memory Leak",
        "extras": {}
    },
    {
        "bug_type": "MEMORY_LEAK_C",
        "qualifier": "Memory dynamically allocated by `malloc`, indirectly via call to `fddalloc()` on line 2246 is not freed after the last access at line 2257, column 3.",
        "severity": "ERROR",
        "category": "Resource leak",
        "line": 2257,
        "column": 3,
        "procedure": "fdd_create_buffer",
        "procedure_start_line": 2242,
        "file": "build/subprojects/freeDiameter/libfdcore/libfdcore.so.1.5.0.p/fdd.l.yy.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "build/subprojects/freeDiameter/libfdcore/libfdcore.so.1.5.0.p/fdd.l.yy.c",
                "line_number": 2246,
                "column_number": 24,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "build/subprojects/freeDiameter/libfdcore/libfdcore.so.1.5.0.p/fdd.l.yy.c",
                "line_number": 30,
                "column_number": -1,
                "description": "allocation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "build/subprojects/freeDiameter/libfdcore/libfdcore.so.1.5.0.p/fdd.l.yy.c",
                "line_number": 2246,
                "column_number": 24,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "build/subprojects/freeDiameter/libfdcore/libfdcore.so.1.5.0.p/fdd.l.yy.c",
                "line_number": 30,
                "column_number": -1,
                "description": "when calling `fddalloc` here"
            },
            {
                "level": 2,
                "filename": "build/subprojects/freeDiameter/libfdcore/libfdcore.so.1.5.0.p/fdd.l.yy.c",
                "line_number": 2708,
                "column_number": 11,
                "description": "allocated by `malloc` here"
            },
            {
                "level": 0,
                "filename": "build/subprojects/freeDiameter/libfdcore/libfdcore.so.1.5.0.p/fdd.l.yy.c",
                "line_number": 2257,
                "column_number": 3,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "build/subprojects/freeDiameter/libfdcore/libfdcore.so.1.5.0.p/fdd.l.yy.c",
                "line_number": 1250,
                "column_number": -1,
                "description": "memory becomes unreachable here"
            }
        ],
        "bug_trace_length": 4,
        "bug_trace_max_depth": 2,
        "key": "fdd.l.yy.c|fdd_create_buffer|MEMORY_LEAK_C",
        "node_key": "5404d4092cf9df1d56f88662365db637",
        "hash": "ecb566005efd1861938904b82021b512",
        "bug_type_hum": "Memory Leak",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`_.code` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 91,
        "column": 8,
        "procedure": "ANY_to_type_aper",
        "procedure_start_line": 74,
        "file": "lib/asn1c/common/ANY_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/ANY_aper.c",
                "line_number": 74,
                "column_number": 1,
                "description": "struct field address `code` created"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/ANY_aper.c",
                "line_number": 91,
                "column_number": 8,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "ANY_aper.c|ANY_to_type_aper|PULSE_UNINITIALIZED_VALUE",
        "node_key": "db496254fc64b9760f814f106032d777",
        "hash": "110508e490d47980ef46feadeddeead8",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmprval` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 136,
        "column": 25,
        "procedure": "ANY_decode_aper",
        "procedure_start_line": 101,
        "file": "lib/asn1c/common/ANY_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/ANY_aper.c",
                "line_number": 101,
                "column_number": 1,
                "description": "variable `tmprval` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/ANY_aper.c",
                "line_number": 136,
                "column_number": 25,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/ANY_aper.c",
                "line_number": 16,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "ANY_aper.c|ANY_decode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "8ed4dd3ced0c04d99d4b173b3af342dd",
        "hash": "f1405b9c5d877da0fa60b98a7d7e2b74",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 170,
        "column": 39,
        "procedure": "ANY_encode_aper",
        "procedure_start_line": 158,
        "file": "lib/asn1c/common/ANY_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/ANY_aper.c",
                "line_number": 158,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/ANY_aper.c",
                "line_number": 170,
                "column_number": 39,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 65,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "ANY_aper.c|ANY_encode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "43b8ccfdfbf903aa4389c29e9414ed78",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 177,
        "column": 26,
        "procedure": "ANY_encode_aper",
        "procedure_start_line": 158,
        "file": "lib/asn1c/common/ANY_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/ANY_aper.c",
                "line_number": 158,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/ANY_aper.c",
                "line_number": 177,
                "column_number": 26,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 65,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "ANY_aper.c|ANY_encode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "43b8ccfdfbf903aa4389c29e9414ed78",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `er` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 189,
        "column": 5,
        "procedure": "ANY_encode_aper",
        "procedure_start_line": 158,
        "file": "lib/asn1c/common/ANY_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/ANY_aper.c",
                "line_number": 163,
                "column_number": 5,
                "description": "variable `er` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/ANY_aper.c",
                "line_number": 189,
                "column_number": 5,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 70,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "ANY_aper.c|ANY_encode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "bca484ba9fd6bb1bcedd35a030bfc273",
        "hash": "62f46e0a390a5d78e9b6b11db7e6eee0",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `result_skipped` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 28,
        "column": 25,
        "procedure": "BIT_STRING_random_fill",
        "procedure_start_line": 9,
        "file": "lib/asn1c/common/BIT_STRING_rfill.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/BIT_STRING_rfill.c",
                "line_number": 18,
                "column_number": 5,
                "description": "variable `result_skipped` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/BIT_STRING_rfill.c",
                "line_number": 28,
                "column_number": 25,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "BIT_STRING_rfill.c|BIT_STRING_random_fill|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "e4980b5a416d1df9f1143a0bb7476f67",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `result_failed` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 32,
        "column": 9,
        "procedure": "BIT_STRING_random_fill",
        "procedure_start_line": 9,
        "file": "lib/asn1c/common/BIT_STRING_rfill.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/BIT_STRING_rfill.c",
                "line_number": 17,
                "column_number": 5,
                "description": "variable `result_failed` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/BIT_STRING_rfill.c",
                "line_number": 32,
                "column_number": 9,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "BIT_STRING_rfill.c|BIT_STRING_random_fill|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "769749f523c10c238f1fc6d65b9d9e91",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`_.code` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 26,
        "column": 8,
        "procedure": "ENUMERATED_decode_aper",
        "procedure_start_line": 10,
        "file": "lib/asn1c/common/ENUMERATED_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/ENUMERATED_aper.c",
                "line_number": 10,
                "column_number": 1,
                "description": "struct field address `code` created"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/ENUMERATED_aper.c",
                "line_number": 26,
                "column_number": 8,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "ENUMERATED_aper.c|ENUMERATED_decode_aper|PULSE_UNINITIALIZED_VALUE",
        "node_key": "53671b53fb0f0eacc4f655cbfba1c439",
        "hash": "ddb88f312cf341719410b6064736bf00",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `rval` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 29,
        "column": 5,
        "procedure": "ENUMERATED_decode_aper",
        "procedure_start_line": 10,
        "file": "lib/asn1c/common/ENUMERATED_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/ENUMERATED_aper.c",
                "line_number": 10,
                "column_number": 1,
                "description": "variable `rval` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/ENUMERATED_aper.c",
                "line_number": 29,
                "column_number": 5,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "ENUMERATED_aper.c|ENUMERATED_decode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "bffdbc4d6fbdfc9cd869008e74879d86",
        "hash": "59a3c88b3ad48f4b52a2dc75fa08f6f8",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 40,
        "column": 9,
        "procedure": "ENUMERATED_encode_aper",
        "procedure_start_line": 32,
        "file": "lib/asn1c/common/ENUMERATED_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/ENUMERATED_aper.c",
                "line_number": 32,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/ENUMERATED_aper.c",
                "line_number": 40,
                "column_number": 9,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 65,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "ENUMERATED_aper.c|ENUMERATED_encode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "267a189f882914bb05e752142ca52257",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 31,
        "column": 23,
        "procedure": "INTEGER_decode_aper",
        "procedure_start_line": 9,
        "file": "lib/asn1c/common/INTEGER_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/INTEGER_aper.c",
                "line_number": 9,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/INTEGER_aper.c",
                "line_number": 31,
                "column_number": 23,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 101,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "INTEGER_aper.c|INTEGER_decode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "bca484ba9fd6bb1bcedd35a030bfc273",
        "hash": "272c79d3cb5eb227b769f4adfe156298",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 96,
        "column": 35,
        "procedure": "INTEGER_decode_aper",
        "procedure_start_line": 9,
        "file": "lib/asn1c/common/INTEGER_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/INTEGER_aper.c",
                "line_number": 9,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/INTEGER_aper.c",
                "line_number": 96,
                "column_number": 35,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 101,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "INTEGER_aper.c|INTEGER_decode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "bca484ba9fd6bb1bcedd35a030bfc273",
        "hash": "272c79d3cb5eb227b769f4adfe156298",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 99,
        "column": 25,
        "procedure": "INTEGER_decode_aper",
        "procedure_start_line": 9,
        "file": "lib/asn1c/common/INTEGER_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/INTEGER_aper.c",
                "line_number": 9,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/INTEGER_aper.c",
                "line_number": 99,
                "column_number": 25,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 95,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "INTEGER_aper.c|INTEGER_decode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "272c79d3cb5eb227b769f4adfe156298",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 101,
        "column": 35,
        "procedure": "INTEGER_decode_aper",
        "procedure_start_line": 9,
        "file": "lib/asn1c/common/INTEGER_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/INTEGER_aper.c",
                "line_number": 9,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/INTEGER_aper.c",
                "line_number": 101,
                "column_number": 35,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 101,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "INTEGER_aper.c|INTEGER_decode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "bca484ba9fd6bb1bcedd35a030bfc273",
        "hash": "272c79d3cb5eb227b769f4adfe156298",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 105,
        "column": 25,
        "procedure": "INTEGER_decode_aper",
        "procedure_start_line": 9,
        "file": "lib/asn1c/common/INTEGER_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/INTEGER_aper.c",
                "line_number": 9,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/INTEGER_aper.c",
                "line_number": 105,
                "column_number": 25,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 95,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "INTEGER_aper.c|INTEGER_decode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "272c79d3cb5eb227b769f4adfe156298",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 107,
        "column": 35,
        "procedure": "INTEGER_decode_aper",
        "procedure_start_line": 9,
        "file": "lib/asn1c/common/INTEGER_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/INTEGER_aper.c",
                "line_number": 9,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/INTEGER_aper.c",
                "line_number": 107,
                "column_number": 35,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 101,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "INTEGER_aper.c|INTEGER_decode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "bca484ba9fd6bb1bcedd35a030bfc273",
        "hash": "272c79d3cb5eb227b769f4adfe156298",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 119,
        "column": 13,
        "procedure": "INTEGER_decode_aper",
        "procedure_start_line": 9,
        "file": "lib/asn1c/common/INTEGER_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/INTEGER_aper.c",
                "line_number": 9,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/INTEGER_aper.c",
                "line_number": 119,
                "column_number": 13,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 95,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "INTEGER_aper.c|INTEGER_decode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "272c79d3cb5eb227b769f4adfe156298",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 133,
        "column": 21,
        "procedure": "INTEGER_decode_aper",
        "procedure_start_line": 9,
        "file": "lib/asn1c/common/INTEGER_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/INTEGER_aper.c",
                "line_number": 9,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/INTEGER_aper.c",
                "line_number": 133,
                "column_number": 21,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 101,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "INTEGER_aper.c|INTEGER_decode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "bca484ba9fd6bb1bcedd35a030bfc273",
        "hash": "272c79d3cb5eb227b769f4adfe156298",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 172,
        "column": 30,
        "procedure": "INTEGER_encode_aper",
        "procedure_start_line": 160,
        "file": "lib/asn1c/common/INTEGER_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/INTEGER_aper.c",
                "line_number": 160,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/INTEGER_aper.c",
                "line_number": 172,
                "column_number": 30,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 65,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "INTEGER_aper.c|INTEGER_encode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "754dc08d2afca2b539b265ace098181b",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 184,
        "column": 17,
        "procedure": "INTEGER_encode_aper",
        "procedure_start_line": 160,
        "file": "lib/asn1c/common/INTEGER_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/INTEGER_aper.c",
                "line_number": 160,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/INTEGER_aper.c",
                "line_number": 184,
                "column_number": 17,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 65,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "INTEGER_aper.c|INTEGER_encode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "754dc08d2afca2b539b265ace098181b",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 201,
        "column": 46,
        "procedure": "INTEGER_encode_aper",
        "procedure_start_line": 160,
        "file": "lib/asn1c/common/INTEGER_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/INTEGER_aper.c",
                "line_number": 160,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/INTEGER_aper.c",
                "line_number": 201,
                "column_number": 46,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 65,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "INTEGER_aper.c|INTEGER_encode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "754dc08d2afca2b539b265ace098181b",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 219,
        "column": 17,
        "procedure": "INTEGER_encode_aper",
        "procedure_start_line": 160,
        "file": "lib/asn1c/common/INTEGER_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/INTEGER_aper.c",
                "line_number": 160,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/INTEGER_aper.c",
                "line_number": 219,
                "column_number": 17,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 65,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "INTEGER_aper.c|INTEGER_encode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "754dc08d2afca2b539b265ace098181b",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 222,
        "column": 13,
        "procedure": "INTEGER_encode_aper",
        "procedure_start_line": 160,
        "file": "lib/asn1c/common/INTEGER_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/INTEGER_aper.c",
                "line_number": 160,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/INTEGER_aper.c",
                "line_number": 222,
                "column_number": 13,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 65,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "INTEGER_aper.c|INTEGER_encode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "754dc08d2afca2b539b265ace098181b",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 241,
        "column": 17,
        "procedure": "INTEGER_encode_aper",
        "procedure_start_line": 160,
        "file": "lib/asn1c/common/INTEGER_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/INTEGER_aper.c",
                "line_number": 160,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/INTEGER_aper.c",
                "line_number": 241,
                "column_number": 17,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 65,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "INTEGER_aper.c|INTEGER_encode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "754dc08d2afca2b539b265ace098181b",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 244,
        "column": 17,
        "procedure": "INTEGER_encode_aper",
        "procedure_start_line": 160,
        "file": "lib/asn1c/common/INTEGER_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/INTEGER_aper.c",
                "line_number": 160,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/INTEGER_aper.c",
                "line_number": 244,
                "column_number": 17,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 65,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "INTEGER_aper.c|INTEGER_encode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "754dc08d2afca2b539b265ace098181b",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 246,
        "column": 17,
        "procedure": "INTEGER_encode_aper",
        "procedure_start_line": 160,
        "file": "lib/asn1c/common/INTEGER_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/INTEGER_aper.c",
                "line_number": 160,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/INTEGER_aper.c",
                "line_number": 246,
                "column_number": 17,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 65,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "INTEGER_aper.c|INTEGER_encode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "754dc08d2afca2b539b265ace098181b",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 250,
        "column": 17,
        "procedure": "INTEGER_encode_aper",
        "procedure_start_line": 160,
        "file": "lib/asn1c/common/INTEGER_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/INTEGER_aper.c",
                "line_number": 160,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/INTEGER_aper.c",
                "line_number": 250,
                "column_number": 17,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 65,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "INTEGER_aper.c|INTEGER_encode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "754dc08d2afca2b539b265ace098181b",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 252,
        "column": 17,
        "procedure": "INTEGER_encode_aper",
        "procedure_start_line": 160,
        "file": "lib/asn1c/common/INTEGER_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/INTEGER_aper.c",
                "line_number": 160,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/INTEGER_aper.c",
                "line_number": 252,
                "column_number": 17,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 65,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "INTEGER_aper.c|INTEGER_encode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "754dc08d2afca2b539b265ace098181b",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `er` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 286,
        "column": 9,
        "procedure": "INTEGER_encode_aper",
        "procedure_start_line": 160,
        "file": "lib/asn1c/common/INTEGER_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/INTEGER_aper.c",
                "line_number": 165,
                "column_number": 5,
                "description": "variable `er` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/INTEGER_aper.c",
                "line_number": 286,
                "column_number": 9,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 70,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "INTEGER_aper.c|INTEGER_encode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "bca484ba9fd6bb1bcedd35a030bfc273",
        "hash": "8c9ca312971b02cbf9d2969c2acaa326",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 292,
        "column": 9,
        "procedure": "INTEGER_encode_aper",
        "procedure_start_line": 160,
        "file": "lib/asn1c/common/INTEGER_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/INTEGER_aper.c",
                "line_number": 160,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/INTEGER_aper.c",
                "line_number": 292,
                "column_number": 9,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 65,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "INTEGER_aper.c|INTEGER_encode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "754dc08d2afca2b539b265ace098181b",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 299,
        "column": 13,
        "procedure": "INTEGER_encode_aper",
        "procedure_start_line": 160,
        "file": "lib/asn1c/common/INTEGER_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/INTEGER_aper.c",
                "line_number": 160,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/INTEGER_aper.c",
                "line_number": 299,
                "column_number": 13,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 65,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "INTEGER_aper.c|INTEGER_encode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "754dc08d2afca2b539b265ace098181b",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 301,
        "column": 13,
        "procedure": "INTEGER_encode_aper",
        "procedure_start_line": 160,
        "file": "lib/asn1c/common/INTEGER_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/INTEGER_aper.c",
                "line_number": 160,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/INTEGER_aper.c",
                "line_number": 301,
                "column_number": 13,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 65,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "INTEGER_aper.c|INTEGER_encode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "754dc08d2afca2b539b265ace098181b",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 304,
        "column": 13,
        "procedure": "INTEGER_encode_aper",
        "procedure_start_line": 160,
        "file": "lib/asn1c/common/INTEGER_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/INTEGER_aper.c",
                "line_number": 160,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/INTEGER_aper.c",
                "line_number": 304,
                "column_number": 13,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 65,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "INTEGER_aper.c|INTEGER_encode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "754dc08d2afca2b539b265ace098181b",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `er` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 307,
        "column": 5,
        "procedure": "INTEGER_encode_aper",
        "procedure_start_line": 160,
        "file": "lib/asn1c/common/INTEGER_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/INTEGER_aper.c",
                "line_number": 165,
                "column_number": 5,
                "description": "variable `er` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/INTEGER_aper.c",
                "line_number": 307,
                "column_number": 5,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 70,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "INTEGER_aper.c|INTEGER_encode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "bca484ba9fd6bb1bcedd35a030bfc273",
        "hash": "8c9ca312971b02cbf9d2969c2acaa326",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `result_skipped` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 24,
        "column": 25,
        "procedure": "INTEGER_random_fill",
        "procedure_start_line": 9,
        "file": "lib/asn1c/common/INTEGER_rfill.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/INTEGER_rfill.c",
                "line_number": 17,
                "column_number": 5,
                "description": "variable `result_skipped` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/INTEGER_rfill.c",
                "line_number": 24,
                "column_number": 25,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "INTEGER_rfill.c|INTEGER_random_fill|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "771f86a78575092e5cba8f19acc2c445",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `rv` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 35,
        "column": 5,
        "procedure": "NULL_decode_aper",
        "procedure_start_line": 9,
        "file": "lib/asn1c/common/NULL_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/NULL_aper.c",
                "line_number": 13,
                "column_number": 5,
                "description": "variable `rv` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/NULL_aper.c",
                "line_number": 35,
                "column_number": 5,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "NULL_aper.c|NULL_decode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "bca484ba9fd6bb1bcedd35a030bfc273",
        "hash": "66e483fc9d1a02233080c587ef20f8a0",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `er` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 51,
        "column": 5,
        "procedure": "NULL_encode_aper",
        "procedure_start_line": 39,
        "file": "lib/asn1c/common/NULL_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/NULL_aper.c",
                "line_number": 43,
                "column_number": 5,
                "description": "variable `er` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/NULL_aper.c",
                "line_number": 51,
                "column_number": 5,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 70,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "NULL_aper.c|NULL_encode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "bca484ba9fd6bb1bcedd35a030bfc273",
        "hash": "1b8d3a6c2c401d060cec773aa3d101c1",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `result_skipped` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 21,
        "column": 25,
        "procedure": "NULL_random_fill",
        "procedure_start_line": 9,
        "file": "lib/asn1c/common/NULL_rfill.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/NULL_rfill.c",
                "line_number": 15,
                "column_number": 5,
                "description": "variable `result_skipped` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/NULL_rfill.c",
                "line_number": 21,
                "column_number": 25,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "NULL_rfill.c|NULL_random_fill|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "eb49d429e88a9246ef386a4b83f96345",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `result_ok` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 30,
        "column": 5,
        "procedure": "NULL_random_fill",
        "procedure_start_line": 9,
        "file": "lib/asn1c/common/NULL_rfill.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/NULL_rfill.c",
                "line_number": 13,
                "column_number": 5,
                "description": "variable `result_ok` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/NULL_rfill.c",
                "line_number": 30,
                "column_number": 5,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "NULL_rfill.c|NULL_random_fill|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "bffdbc4d6fbdfc9cd869008e74879d86",
        "hash": "8878665d9c217f66c2b7e619c9ba9291",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 25,
        "column": 10,
        "procedure": "NativeEnumerated_decode_aper",
        "procedure_start_line": 9,
        "file": "lib/asn1c/common/NativeEnumerated_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/NativeEnumerated_aper.c",
                "line_number": 9,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/NativeEnumerated_aper.c",
                "line_number": 25,
                "column_number": 10,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 95,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "NativeEnumerated_aper.c|NativeEnumerated_decode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "7b1b2f41763508a7ce4785fb0e7a95d5",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 26,
        "column": 16,
        "procedure": "NativeEnumerated_decode_aper",
        "procedure_start_line": 9,
        "file": "lib/asn1c/common/NativeEnumerated_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/NativeEnumerated_aper.c",
                "line_number": 9,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/NativeEnumerated_aper.c",
                "line_number": 26,
                "column_number": 16,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 95,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "NativeEnumerated_aper.c|NativeEnumerated_decode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "7b1b2f41763508a7ce4785fb0e7a95d5",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 37,
        "column": 23,
        "procedure": "NativeEnumerated_decode_aper",
        "procedure_start_line": 9,
        "file": "lib/asn1c/common/NativeEnumerated_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/NativeEnumerated_aper.c",
                "line_number": 9,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/NativeEnumerated_aper.c",
                "line_number": 37,
                "column_number": 23,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 101,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "NativeEnumerated_aper.c|NativeEnumerated_decode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "bca484ba9fd6bb1bcedd35a030bfc273",
        "hash": "7b1b2f41763508a7ce4785fb0e7a95d5",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 55,
        "column": 23,
        "procedure": "NativeEnumerated_decode_aper",
        "procedure_start_line": 9,
        "file": "lib/asn1c/common/NativeEnumerated_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/NativeEnumerated_aper.c",
                "line_number": 9,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/NativeEnumerated_aper.c",
                "line_number": 55,
                "column_number": 23,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 101,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "NativeEnumerated_aper.c|NativeEnumerated_decode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "bca484ba9fd6bb1bcedd35a030bfc273",
        "hash": "7b1b2f41763508a7ce4785fb0e7a95d5",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 58,
        "column": 9,
        "procedure": "NativeEnumerated_decode_aper",
        "procedure_start_line": 9,
        "file": "lib/asn1c/common/NativeEnumerated_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/NativeEnumerated_aper.c",
                "line_number": 9,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/NativeEnumerated_aper.c",
                "line_number": 58,
                "column_number": 9,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 95,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "NativeEnumerated_aper.c|NativeEnumerated_decode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "7b1b2f41763508a7ce4785fb0e7a95d5",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 61,
        "column": 13,
        "procedure": "NativeEnumerated_decode_aper",
        "procedure_start_line": 9,
        "file": "lib/asn1c/common/NativeEnumerated_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/NativeEnumerated_aper.c",
                "line_number": 9,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/NativeEnumerated_aper.c",
                "line_number": 61,
                "column_number": 13,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 95,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "NativeEnumerated_aper.c|NativeEnumerated_decode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "7b1b2f41763508a7ce4785fb0e7a95d5",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 68,
        "column": 23,
        "procedure": "NativeEnumerated_decode_aper",
        "procedure_start_line": 9,
        "file": "lib/asn1c/common/NativeEnumerated_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/NativeEnumerated_aper.c",
                "line_number": 9,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/NativeEnumerated_aper.c",
                "line_number": 68,
                "column_number": 23,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 101,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "NativeEnumerated_aper.c|NativeEnumerated_decode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "bca484ba9fd6bb1bcedd35a030bfc273",
        "hash": "7b1b2f41763508a7ce4785fb0e7a95d5",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `rval` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 76,
        "column": 13,
        "procedure": "NativeEnumerated_decode_aper",
        "procedure_start_line": 9,
        "file": "lib/asn1c/common/NativeEnumerated_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/NativeEnumerated_aper.c",
                "line_number": 15,
                "column_number": 5,
                "description": "variable `rval` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/NativeEnumerated_aper.c",
                "line_number": 76,
                "column_number": 13,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "NativeEnumerated_aper.c|NativeEnumerated_decode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "18132f42a50641afa71661fc39b97ab1",
        "hash": "747c64c1b659bf527280d2fb28374f07",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `rval` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 83,
        "column": 5,
        "procedure": "NativeEnumerated_decode_aper",
        "procedure_start_line": 9,
        "file": "lib/asn1c/common/NativeEnumerated_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/NativeEnumerated_aper.c",
                "line_number": 15,
                "column_number": 5,
                "description": "variable `rval` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/NativeEnumerated_aper.c",
                "line_number": 83,
                "column_number": 5,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "NativeEnumerated_aper.c|NativeEnumerated_decode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "747c64c1b659bf527280d2fb28374f07",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 98,
        "column": 15,
        "procedure": "NativeEnumerated_encode_aper",
        "procedure_start_line": 86,
        "file": "lib/asn1c/common/NativeEnumerated_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/NativeEnumerated_aper.c",
                "line_number": 86,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/NativeEnumerated_aper.c",
                "line_number": 98,
                "column_number": 15,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 65,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "NativeEnumerated_aper.c|NativeEnumerated_encode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "9f2c5686f4efced3239be663f68d9da7",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 99,
        "column": 16,
        "procedure": "NativeEnumerated_encode_aper",
        "procedure_start_line": 86,
        "file": "lib/asn1c/common/NativeEnumerated_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/NativeEnumerated_aper.c",
                "line_number": 86,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/NativeEnumerated_aper.c",
                "line_number": 99,
                "column_number": 16,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 65,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "NativeEnumerated_aper.c|NativeEnumerated_encode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "9f2c5686f4efced3239be663f68d9da7",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 104,
        "column": 10,
        "procedure": "NativeEnumerated_encode_aper",
        "procedure_start_line": 86,
        "file": "lib/asn1c/common/NativeEnumerated_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/NativeEnumerated_aper.c",
                "line_number": 86,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/NativeEnumerated_aper.c",
                "line_number": 104,
                "column_number": 10,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 65,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "NativeEnumerated_aper.c|NativeEnumerated_encode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "9f2c5686f4efced3239be663f68d9da7",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 111,
        "column": 20,
        "procedure": "NativeEnumerated_encode_aper",
        "procedure_start_line": 86,
        "file": "lib/asn1c/common/NativeEnumerated_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/NativeEnumerated_aper.c",
                "line_number": 86,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/NativeEnumerated_aper.c",
                "line_number": 111,
                "column_number": 20,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 65,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "NativeEnumerated_aper.c|NativeEnumerated_encode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "9f2c5686f4efced3239be663f68d9da7",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 118,
        "column": 9,
        "procedure": "NativeEnumerated_encode_aper",
        "procedure_start_line": 86,
        "file": "lib/asn1c/common/NativeEnumerated_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/NativeEnumerated_aper.c",
                "line_number": 86,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/NativeEnumerated_aper.c",
                "line_number": 118,
                "column_number": 9,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 65,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "NativeEnumerated_aper.c|NativeEnumerated_encode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "9f2c5686f4efced3239be663f68d9da7",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 130,
        "column": 13,
        "procedure": "NativeEnumerated_encode_aper",
        "procedure_start_line": 86,
        "file": "lib/asn1c/common/NativeEnumerated_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/NativeEnumerated_aper.c",
                "line_number": 86,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/NativeEnumerated_aper.c",
                "line_number": 130,
                "column_number": 13,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 65,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "NativeEnumerated_aper.c|NativeEnumerated_encode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "9f2c5686f4efced3239be663f68d9da7",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`_.code` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 31,
        "column": 8,
        "procedure": "NativeInteger_decode_aper",
        "procedure_start_line": 9,
        "file": "lib/asn1c/common/NativeInteger_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/NativeInteger_aper.c",
                "line_number": 9,
                "column_number": 1,
                "description": "struct field address `code` created"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/NativeInteger_aper.c",
                "line_number": 31,
                "column_number": 8,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "NativeInteger_aper.c|NativeInteger_decode_aper|PULSE_UNINITIALIZED_VALUE",
        "node_key": "53671b53fb0f0eacc4f655cbfba1c439",
        "hash": "0b03ddd7cd31f752e3d879acb5b818fd",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `rval` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 42,
        "column": 5,
        "procedure": "NativeInteger_decode_aper",
        "procedure_start_line": 9,
        "file": "lib/asn1c/common/NativeInteger_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/NativeInteger_aper.c",
                "line_number": 9,
                "column_number": 1,
                "description": "variable `rval` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/NativeInteger_aper.c",
                "line_number": 42,
                "column_number": 5,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "NativeInteger_aper.c|NativeInteger_decode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "55df13422f17213ff97ca3ee0c18f4a6",
        "hash": "9ada065887c29d1102105077b4d1374a",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 55,
        "column": 15,
        "procedure": "NativeInteger_encode_aper",
        "procedure_start_line": 45,
        "file": "lib/asn1c/common/NativeInteger_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/NativeInteger_aper.c",
                "line_number": 45,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/NativeInteger_aper.c",
                "line_number": 55,
                "column_number": 15,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 65,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "NativeInteger_aper.c|NativeInteger_encode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "7af129d1664a416612b43a460ecb8f4b",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `result_skipped` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 24,
        "column": 25,
        "procedure": "NativeInteger_random_fill",
        "procedure_start_line": 9,
        "file": "lib/asn1c/common/NativeInteger_rfill.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/NativeInteger_rfill.c",
                "line_number": 17,
                "column_number": 5,
                "description": "variable `result_skipped` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/NativeInteger_rfill.c",
                "line_number": 24,
                "column_number": 25,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "NativeInteger_rfill.c|NativeInteger_random_fill|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "0ea4bc5a637e21905e2328f73e4f3719",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `result_skipped` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 50,
        "column": 35,
        "procedure": "OCTET_STRING_random_fill",
        "procedure_start_line": 31,
        "file": "lib/asn1c/common/OCTET_STRING_rfill.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/OCTET_STRING_rfill.c",
                "line_number": 40,
                "column_number": 5,
                "description": "variable `result_skipped` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/OCTET_STRING_rfill.c",
                "line_number": 50,
                "column_number": 35,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "OCTET_STRING_rfill.c|OCTET_STRING_random_fill|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "bacfe6438989b4d2359f7c8efe6596fb",
        "hash": "8ea418f4da617eda7c0279a9256c4a3f",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `result_failed` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 55,
        "column": 9,
        "procedure": "OCTET_STRING_random_fill",
        "procedure_start_line": 31,
        "file": "lib/asn1c/common/OCTET_STRING_rfill.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/OCTET_STRING_rfill.c",
                "line_number": 39,
                "column_number": 5,
                "description": "variable `result_failed` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/OCTET_STRING_rfill.c",
                "line_number": 55,
                "column_number": 9,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "OCTET_STRING_rfill.c|OCTET_STRING_random_fill|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "21e4bed2f8e59d3f943f7ad38c901253",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `result_failed` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 58,
        "column": 9,
        "procedure": "OCTET_STRING_random_fill",
        "procedure_start_line": 31,
        "file": "lib/asn1c/common/OCTET_STRING_rfill.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/OCTET_STRING_rfill.c",
                "line_number": 39,
                "column_number": 5,
                "description": "variable `result_failed` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/OCTET_STRING_rfill.c",
                "line_number": 58,
                "column_number": 9,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "OCTET_STRING_rfill.c|OCTET_STRING_random_fill|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "21e4bed2f8e59d3f943f7ad38c901253",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`_.presence_index` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 32,
        "column": 9,
        "procedure": "OPEN_TYPE_aper_get",
        "procedure_start_line": 11,
        "file": "lib/asn1c/common/OPEN_TYPE_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/OPEN_TYPE_aper.c",
                "line_number": 11,
                "column_number": 1,
                "description": "struct field address `presence_index` created"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/OPEN_TYPE_aper.c",
                "line_number": 32,
                "column_number": 9,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "OPEN_TYPE_aper.c|OPEN_TYPE_aper_get|PULSE_UNINITIALIZED_VALUE",
        "node_key": "369f4adedf0135192e99e2134e596671",
        "hash": "81d145a106511a3479c55caf007c0b02",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`_.type_descriptor` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 56,
        "column": 44,
        "procedure": "OPEN_TYPE_aper_get",
        "procedure_start_line": 11,
        "file": "lib/asn1c/common/OPEN_TYPE_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/OPEN_TYPE_aper.c",
                "line_number": 11,
                "column_number": 1,
                "description": "struct field address `type_descriptor` created"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/OPEN_TYPE_aper.c",
                "line_number": 56,
                "column_number": 44,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "OPEN_TYPE_aper.c|OPEN_TYPE_aper_get|PULSE_UNINITIALIZED_VALUE",
        "node_key": "6517e87a0e6eb1b39d7b59de7acc25c8",
        "hash": "2eb3081c991e9314fc596a7703b77668",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`_.code` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 59,
        "column": 12,
        "procedure": "OPEN_TYPE_aper_get",
        "procedure_start_line": 11,
        "file": "lib/asn1c/common/OPEN_TYPE_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/OPEN_TYPE_aper.c",
                "line_number": 11,
                "column_number": 1,
                "description": "struct field address `code` created"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/OPEN_TYPE_aper.c",
                "line_number": 59,
                "column_number": 12,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "OPEN_TYPE_aper.c|OPEN_TYPE_aper_get|PULSE_UNINITIALIZED_VALUE",
        "node_key": "a1a2392a7f0e2034aa80c84bac600caa",
        "hash": "d19441151e042c378d49e95a0d65df05",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`_.consumed` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 81,
        "column": 5,
        "procedure": "OPEN_TYPE_aper_get",
        "procedure_start_line": 11,
        "file": "lib/asn1c/common/OPEN_TYPE_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/OPEN_TYPE_aper.c",
                "line_number": 11,
                "column_number": 1,
                "description": "struct field address `consumed` created"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/OPEN_TYPE_aper.c",
                "line_number": 81,
                "column_number": 5,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "OPEN_TYPE_aper.c|OPEN_TYPE_aper_get|PULSE_UNINITIALIZED_VALUE",
        "node_key": "9757d62b64ef7a399b6e074023cd5178",
        "hash": "91c6a9a3b970f8838847fbb1045f73e0",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`_.presence_index` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 131,
        "column": 13,
        "procedure": "OPEN_TYPE_aper_is_unknown_type",
        "procedure_start_line": 123,
        "file": "lib/asn1c/common/OPEN_TYPE_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/OPEN_TYPE_aper.c",
                "line_number": 123,
                "column_number": 1,
                "description": "struct field address `presence_index` created"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/OPEN_TYPE_aper.c",
                "line_number": 131,
                "column_number": 13,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "OPEN_TYPE_aper.c|OPEN_TYPE_aper_is_unknown_type|PULSE_UNINITIALIZED_VALUE",
        "node_key": "c1030b3d39390f80c8a9f2d4cbfc5784",
        "hash": "e3e9ab6e8f5c77e3a9eeb0d560a0cbf9",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `result_skipped` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 63,
        "column": 35,
        "procedure": "UTF8String_random_fill",
        "procedure_start_line": 49,
        "file": "lib/asn1c/common/UTF8String_rfill.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/UTF8String_rfill.c",
                "line_number": 55,
                "column_number": 5,
                "description": "variable `result_skipped` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/UTF8String_rfill.c",
                "line_number": 63,
                "column_number": 35,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "UTF8String_rfill.c|UTF8String_random_fill|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "bacfe6438989b4d2359f7c8efe6596fb",
        "hash": "6eb4bf2f345a21e20fbb82ffd8e02268",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`_.consumed` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 12,
        "column": 5,
        "procedure": "aper_decode_complete",
        "procedure_start_line": 5,
        "file": "lib/asn1c/common/aper_decoder.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/aper_decoder.c",
                "line_number": 5,
                "column_number": 1,
                "description": "struct field address `consumed` created"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/aper_decoder.c",
                "line_number": 12,
                "column_number": 5,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "aper_decoder.c|aper_decode_complete|PULSE_UNINITIALIZED_VALUE",
        "node_key": "f94b16a9a07e069ac92ab2c7bfa15812",
        "hash": "35a9b696602cc05cc733b05af1cd1d07",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`_.code` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 19,
        "column": 12,
        "procedure": "aper_decode_complete",
        "procedure_start_line": 5,
        "file": "lib/asn1c/common/aper_decoder.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/aper_decoder.c",
                "line_number": 5,
                "column_number": 1,
                "description": "struct field address `code` created"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/aper_decoder.c",
                "line_number": 19,
                "column_number": 12,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "aper_decoder.c|aper_decode_complete|PULSE_UNINITIALIZED_VALUE",
        "node_key": "74f69a19a13e525ad5f49dbed16e24d4",
        "hash": "8285e704b911d0178eae45ee9ea5676e",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`_.code` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 33,
        "column": 2,
        "procedure": "aper_decode_complete",
        "procedure_start_line": 5,
        "file": "lib/asn1c/common/aper_decoder.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/aper_decoder.c",
                "line_number": 5,
                "column_number": 1,
                "description": "struct field address `code` created"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/aper_decoder.c",
                "line_number": 33,
                "column_number": 2,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "aper_decoder.c|aper_decode_complete|PULSE_UNINITIALIZED_VALUE",
        "node_key": "9757d62b64ef7a399b6e074023cd5178",
        "hash": "8285e704b911d0178eae45ee9ea5676e",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`_.code` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 79,
        "column": 5,
        "procedure": "aper_decode",
        "procedure_start_line": 36,
        "file": "lib/asn1c/common/aper_decoder.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/aper_decoder.c",
                "line_number": 36,
                "column_number": 1,
                "description": "struct field address `code` created"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/aper_decoder.c",
                "line_number": 79,
                "column_number": 5,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "aper_decoder.c|aper_decode|PULSE_UNINITIALIZED_VALUE",
        "node_key": "fcd007dbb67faf7927f40904d82b1d2d",
        "hash": "e821d1a1054733bfcfc2fbb8609c6b7c",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`_.code` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 61,
        "column": 5,
        "procedure": "aper_open_type_get_simple",
        "procedure_start_line": 10,
        "file": "lib/asn1c/common/aper_opentype.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/aper_opentype.c",
                "line_number": 10,
                "column_number": 1,
                "description": "struct field address `code` created"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/aper_opentype.c",
                "line_number": 61,
                "column_number": 5,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "aper_opentype.c|aper_open_type_get_simple|PULSE_UNINITIALIZED_VALUE",
        "node_key": "0d18e77c78a375709b2b50f302414e48",
        "hash": "93cb3af38c6d724d9ef95cc4b22222bc",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`_.consumed` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 85,
        "column": 2,
        "procedure": "aper_open_type_get_simple",
        "procedure_start_line": 10,
        "file": "lib/asn1c/common/aper_opentype.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/aper_opentype.c",
                "line_number": 10,
                "column_number": 1,
                "description": "struct field address `consumed` created"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/aper_opentype.c",
                "line_number": 85,
                "column_number": 2,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "aper_opentype.c|aper_open_type_get_simple|PULSE_UNINITIALIZED_VALUE",
        "node_key": "9757d62b64ef7a399b6e074023cd5178",
        "hash": "ee6b4c19d57b9dcda5a270d275077afe",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`_.code` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 145,
        "column": 5,
        "procedure": "aper_open_type_skip",
        "procedure_start_line": 133,
        "file": "lib/asn1c/common/aper_opentype.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/aper_opentype.c",
                "line_number": 133,
                "column_number": 1,
                "description": "struct field address `code` created"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/aper_opentype.c",
                "line_number": 145,
                "column_number": 5,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "aper_opentype.c|aper_open_type_skip|PULSE_UNINITIALIZED_VALUE",
        "node_key": "305ac62cc4834d1448468321b6583263",
        "hash": "035ccceeba0aaf55698b2f17c97f4ab3",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 24,
        "column": 9,
        "procedure": "CHOICE_decode_aper",
        "procedure_start_line": 10,
        "file": "lib/asn1c/common/constr_CHOICE_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_CHOICE_aper.c",
                "line_number": 10,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_CHOICE_aper.c",
                "line_number": 24,
                "column_number": 9,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 95,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "constr_CHOICE_aper.c|CHOICE_decode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "bc4db580004198a0d7b7229ea9ee115c",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 41,
        "column": 23,
        "procedure": "CHOICE_decode_aper",
        "procedure_start_line": 10,
        "file": "lib/asn1c/common/constr_CHOICE_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_CHOICE_aper.c",
                "line_number": 10,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_CHOICE_aper.c",
                "line_number": 41,
                "column_number": 23,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 101,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "constr_CHOICE_aper.c|CHOICE_decode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "bca484ba9fd6bb1bcedd35a030bfc273",
        "hash": "bc4db580004198a0d7b7229ea9ee115c",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 44,
        "column": 13,
        "procedure": "CHOICE_decode_aper",
        "procedure_start_line": 10,
        "file": "lib/asn1c/common/constr_CHOICE_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_CHOICE_aper.c",
                "line_number": 10,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_CHOICE_aper.c",
                "line_number": 44,
                "column_number": 13,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 95,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "constr_CHOICE_aper.c|CHOICE_decode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "bc4db580004198a0d7b7229ea9ee115c",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 49,
        "column": 23,
        "procedure": "CHOICE_decode_aper",
        "procedure_start_line": 10,
        "file": "lib/asn1c/common/constr_CHOICE_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_CHOICE_aper.c",
                "line_number": 10,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_CHOICE_aper.c",
                "line_number": 49,
                "column_number": 23,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 101,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "constr_CHOICE_aper.c|CHOICE_decode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "bca484ba9fd6bb1bcedd35a030bfc273",
        "hash": "bc4db580004198a0d7b7229ea9ee115c",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 53,
        "column": 13,
        "procedure": "CHOICE_decode_aper",
        "procedure_start_line": 10,
        "file": "lib/asn1c/common/constr_CHOICE_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_CHOICE_aper.c",
                "line_number": 10,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_CHOICE_aper.c",
                "line_number": 53,
                "column_number": 13,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 95,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "constr_CHOICE_aper.c|CHOICE_decode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "bc4db580004198a0d7b7229ea9ee115c",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 56,
        "column": 13,
        "procedure": "CHOICE_decode_aper",
        "procedure_start_line": 10,
        "file": "lib/asn1c/common/constr_CHOICE_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_CHOICE_aper.c",
                "line_number": 10,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_CHOICE_aper.c",
                "line_number": 56,
                "column_number": 13,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 95,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "constr_CHOICE_aper.c|CHOICE_decode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "bc4db580004198a0d7b7229ea9ee115c",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 60,
        "column": 27,
        "procedure": "CHOICE_decode_aper",
        "procedure_start_line": 10,
        "file": "lib/asn1c/common/constr_CHOICE_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_CHOICE_aper.c",
                "line_number": 10,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_CHOICE_aper.c",
                "line_number": 60,
                "column_number": 27,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 101,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "constr_CHOICE_aper.c|CHOICE_decode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "bca484ba9fd6bb1bcedd35a030bfc273",
        "hash": "bc4db580004198a0d7b7229ea9ee115c",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 63,
        "column": 17,
        "procedure": "CHOICE_decode_aper",
        "procedure_start_line": 10,
        "file": "lib/asn1c/common/constr_CHOICE_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_CHOICE_aper.c",
                "line_number": 10,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_CHOICE_aper.c",
                "line_number": 63,
                "column_number": 17,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 95,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "constr_CHOICE_aper.c|CHOICE_decode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "bc4db580004198a0d7b7229ea9ee115c",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`_.code` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 92,
        "column": 8,
        "procedure": "CHOICE_decode_aper",
        "procedure_start_line": 10,
        "file": "lib/asn1c/common/constr_CHOICE_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_CHOICE_aper.c",
                "line_number": 10,
                "column_number": 1,
                "description": "struct field address `code` created"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_CHOICE_aper.c",
                "line_number": 92,
                "column_number": 8,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "constr_CHOICE_aper.c|CHOICE_decode_aper|PULSE_UNINITIALIZED_VALUE",
        "node_key": "5df8374f7c1552703d94bb15c1f58ce9",
        "hash": "f7bed302c65448a99769fbdde2f35f94",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `rv` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 95,
        "column": 5,
        "procedure": "CHOICE_decode_aper",
        "procedure_start_line": 10,
        "file": "lib/asn1c/common/constr_CHOICE_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_CHOICE_aper.c",
                "line_number": 10,
                "column_number": 1,
                "description": "variable `rv` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_CHOICE_aper.c",
                "line_number": 95,
                "column_number": 5,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "constr_CHOICE_aper.c|CHOICE_decode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "bffdbc4d6fbdfc9cd869008e74879d86",
        "hash": "a3a3cf15a784631932bea43fd927cbcc",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 108,
        "column": 15,
        "procedure": "CHOICE_encode_aper",
        "procedure_start_line": 98,
        "file": "lib/asn1c/common/constr_CHOICE_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_CHOICE_aper.c",
                "line_number": 98,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_CHOICE_aper.c",
                "line_number": 108,
                "column_number": 15,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 65,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "constr_CHOICE_aper.c|CHOICE_encode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "496efa2cd4ce2d01779644eab77f17e9",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 125,
        "column": 9,
        "procedure": "CHOICE_encode_aper",
        "procedure_start_line": 98,
        "file": "lib/asn1c/common/constr_CHOICE_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_CHOICE_aper.c",
                "line_number": 98,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_CHOICE_aper.c",
                "line_number": 125,
                "column_number": 9,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 65,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "constr_CHOICE_aper.c|CHOICE_encode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "496efa2cd4ce2d01779644eab77f17e9",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 140,
        "column": 21,
        "procedure": "CHOICE_encode_aper",
        "procedure_start_line": 98,
        "file": "lib/asn1c/common/constr_CHOICE_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_CHOICE_aper.c",
                "line_number": 98,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_CHOICE_aper.c",
                "line_number": 140,
                "column_number": 21,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 65,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "constr_CHOICE_aper.c|CHOICE_encode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "496efa2cd4ce2d01779644eab77f17e9",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 142,
        "column": 17,
        "procedure": "CHOICE_encode_aper",
        "procedure_start_line": 98,
        "file": "lib/asn1c/common/constr_CHOICE_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_CHOICE_aper.c",
                "line_number": 98,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_CHOICE_aper.c",
                "line_number": 142,
                "column_number": 17,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 65,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "constr_CHOICE_aper.c|CHOICE_encode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "496efa2cd4ce2d01779644eab77f17e9",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 149,
        "column": 13,
        "procedure": "CHOICE_encode_aper",
        "procedure_start_line": 98,
        "file": "lib/asn1c/common/constr_CHOICE_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_CHOICE_aper.c",
                "line_number": 98,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_CHOICE_aper.c",
                "line_number": 149,
                "column_number": 13,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 65,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "constr_CHOICE_aper.c|CHOICE_encode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "496efa2cd4ce2d01779644eab77f17e9",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 156,
        "column": 23,
        "procedure": "CHOICE_encode_aper",
        "procedure_start_line": 98,
        "file": "lib/asn1c/common/constr_CHOICE_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_CHOICE_aper.c",
                "line_number": 98,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_CHOICE_aper.c",
                "line_number": 156,
                "column_number": 23,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 65,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "constr_CHOICE_aper.c|CHOICE_encode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "496efa2cd4ce2d01779644eab77f17e9",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 163,
        "column": 13,
        "procedure": "CHOICE_encode_aper",
        "procedure_start_line": 98,
        "file": "lib/asn1c/common/constr_CHOICE_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_CHOICE_aper.c",
                "line_number": 98,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_CHOICE_aper.c",
                "line_number": 163,
                "column_number": 13,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 65,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "constr_CHOICE_aper.c|CHOICE_encode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "496efa2cd4ce2d01779644eab77f17e9",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 170,
        "column": 13,
        "procedure": "CHOICE_encode_aper",
        "procedure_start_line": 98,
        "file": "lib/asn1c/common/constr_CHOICE_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_CHOICE_aper.c",
                "line_number": 98,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_CHOICE_aper.c",
                "line_number": 170,
                "column_number": 13,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 65,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "constr_CHOICE_aper.c|CHOICE_encode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "496efa2cd4ce2d01779644eab77f17e9",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 172,
        "column": 13,
        "procedure": "CHOICE_encode_aper",
        "procedure_start_line": 98,
        "file": "lib/asn1c/common/constr_CHOICE_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_CHOICE_aper.c",
                "line_number": 98,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_CHOICE_aper.c",
                "line_number": 172,
                "column_number": 13,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 65,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "constr_CHOICE_aper.c|CHOICE_encode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "496efa2cd4ce2d01779644eab77f17e9",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `result_skipped` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 24,
        "column": 25,
        "procedure": "CHOICE_random_fill",
        "procedure_start_line": 9,
        "file": "lib/asn1c/common/constr_CHOICE_rfill.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_CHOICE_rfill.c",
                "line_number": 17,
                "column_number": 5,
                "description": "variable `result_skipped` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_CHOICE_rfill.c",
                "line_number": 24,
                "column_number": 25,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "constr_CHOICE_rfill.c|CHOICE_random_fill|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "46ecc97f97709f33ab69a9a3e2657316",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`_.code` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 49,
        "column": 8,
        "procedure": "CHOICE_random_fill",
        "procedure_start_line": 9,
        "file": "lib/asn1c/common/constr_CHOICE_rfill.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_CHOICE_rfill.c",
                "line_number": 9,
                "column_number": 1,
                "description": "struct field address `code` created"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_CHOICE_rfill.c",
                "line_number": 49,
                "column_number": 8,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "constr_CHOICE_rfill.c|CHOICE_random_fill|PULSE_UNINITIALIZED_VALUE",
        "node_key": "b091355e4c1ddf883b8b6baa19d6fc48",
        "hash": "dd568f0893fcf4d4e05a9cc919ea7e2f",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `res` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 59,
        "column": 5,
        "procedure": "CHOICE_random_fill",
        "procedure_start_line": 9,
        "file": "lib/asn1c/common/constr_CHOICE_rfill.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_CHOICE_rfill.c",
                "line_number": 9,
                "column_number": 1,
                "description": "variable `res` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_CHOICE_rfill.c",
                "line_number": 59,
                "column_number": 5,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "constr_CHOICE_rfill.c|CHOICE_random_fill|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "bffdbc4d6fbdfc9cd869008e74879d86",
        "hash": "7aee200feba8bf4e175fa476473006a1",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 20,
        "column": 15,
        "procedure": "SEQUENCE_OF_encode_aper",
        "procedure_start_line": 10,
        "file": "lib/asn1c/common/constr_SEQUENCE_OF_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_SEQUENCE_OF_aper.c",
                "line_number": 10,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_SEQUENCE_OF_aper.c",
                "line_number": 20,
                "column_number": 15,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 65,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "constr_SEQUENCE_OF_aper.c|SEQUENCE_OF_encode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "7783c0976f0aa705ee43a99290066047",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 43,
        "column": 17,
        "procedure": "SEQUENCE_OF_encode_aper",
        "procedure_start_line": 10,
        "file": "lib/asn1c/common/constr_SEQUENCE_OF_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_SEQUENCE_OF_aper.c",
                "line_number": 10,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_SEQUENCE_OF_aper.c",
                "line_number": 43,
                "column_number": 17,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 65,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "constr_SEQUENCE_OF_aper.c|SEQUENCE_OF_encode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "7783c0976f0aa705ee43a99290066047",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 59,
        "column": 13,
        "procedure": "SEQUENCE_OF_encode_aper",
        "procedure_start_line": 10,
        "file": "lib/asn1c/common/constr_SEQUENCE_OF_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_SEQUENCE_OF_aper.c",
                "line_number": 10,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_SEQUENCE_OF_aper.c",
                "line_number": 59,
                "column_number": 13,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 65,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "constr_SEQUENCE_OF_aper.c|SEQUENCE_OF_encode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "7783c0976f0aa705ee43a99290066047",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 70,
        "column": 31,
        "procedure": "SEQUENCE_OF_encode_aper",
        "procedure_start_line": 10,
        "file": "lib/asn1c/common/constr_SEQUENCE_OF_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_SEQUENCE_OF_aper.c",
                "line_number": 10,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_SEQUENCE_OF_aper.c",
                "line_number": 70,
                "column_number": 31,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 65,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "constr_SEQUENCE_OF_aper.c|SEQUENCE_OF_encode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "7783c0976f0aa705ee43a99290066047",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 75,
        "column": 27,
        "procedure": "SEQUENCE_OF_encode_aper",
        "procedure_start_line": 10,
        "file": "lib/asn1c/common/constr_SEQUENCE_OF_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_SEQUENCE_OF_aper.c",
                "line_number": 10,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_SEQUENCE_OF_aper.c",
                "line_number": 75,
                "column_number": 27,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 65,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "constr_SEQUENCE_OF_aper.c|SEQUENCE_OF_encode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "7783c0976f0aa705ee43a99290066047",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 80,
        "column": 17,
        "procedure": "SEQUENCE_OF_encode_aper",
        "procedure_start_line": 10,
        "file": "lib/asn1c/common/constr_SEQUENCE_OF_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_SEQUENCE_OF_aper.c",
                "line_number": 10,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_SEQUENCE_OF_aper.c",
                "line_number": 80,
                "column_number": 17,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 65,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "constr_SEQUENCE_OF_aper.c|SEQUENCE_OF_encode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "7783c0976f0aa705ee43a99290066047",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 84,
        "column": 13,
        "procedure": "SEQUENCE_OF_encode_aper",
        "procedure_start_line": 10,
        "file": "lib/asn1c/common/constr_SEQUENCE_OF_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_SEQUENCE_OF_aper.c",
                "line_number": 10,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_SEQUENCE_OF_aper.c",
                "line_number": 84,
                "column_number": 13,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 65,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "constr_SEQUENCE_OF_aper.c|SEQUENCE_OF_encode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "7783c0976f0aa705ee43a99290066047",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `er` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 87,
        "column": 5,
        "procedure": "SEQUENCE_OF_encode_aper",
        "procedure_start_line": 10,
        "file": "lib/asn1c/common/constr_SEQUENCE_OF_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_SEQUENCE_OF_aper.c",
                "line_number": 16,
                "column_number": 5,
                "description": "variable `er` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_SEQUENCE_OF_aper.c",
                "line_number": 87,
                "column_number": 5,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 70,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "constr_SEQUENCE_OF_aper.c|SEQUENCE_OF_encode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "bca484ba9fd6bb1bcedd35a030bfc273",
        "hash": "4666b09cad54035257d088ca567a7b2e",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 33,
        "column": 9,
        "procedure": "SEQUENCE_decode_aper",
        "procedure_start_line": 18,
        "file": "lib/asn1c/common/constr_SEQUENCE_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_SEQUENCE_aper.c",
                "line_number": 18,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_SEQUENCE_aper.c",
                "line_number": 33,
                "column_number": 9,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 95,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "constr_SEQUENCE_aper.c|SEQUENCE_decode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "1997e89f8276293ecc1f8566da6a2083",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 47,
        "column": 28,
        "procedure": "SEQUENCE_decode_aper",
        "procedure_start_line": 18,
        "file": "lib/asn1c/common/constr_SEQUENCE_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_SEQUENCE_aper.c",
                "line_number": 18,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_SEQUENCE_aper.c",
                "line_number": 47,
                "column_number": 28,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 101,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "constr_SEQUENCE_aper.c|SEQUENCE_decode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "bca484ba9fd6bb1bcedd35a030bfc273",
        "hash": "1997e89f8276293ecc1f8566da6a2083",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `rv` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 136,
        "column": 17,
        "procedure": "SEQUENCE_decode_aper",
        "procedure_start_line": 18,
        "file": "lib/asn1c/common/constr_SEQUENCE_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_SEQUENCE_aper.c",
                "line_number": 134,
                "column_number": 17,
                "description": "variable `rv` accessed here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_SEQUENCE_aper.c",
                "line_number": 136,
                "column_number": 17,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "constr_SEQUENCE_aper.c|SEQUENCE_decode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "e3b734890a6da13420dfa681ca387e36",
        "hash": "8563e7da4a8d984430c74a7e21c2f46e",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `rv` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 148,
        "column": 13,
        "procedure": "SEQUENCE_decode_aper",
        "procedure_start_line": 18,
        "file": "lib/asn1c/common/constr_SEQUENCE_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_SEQUENCE_aper.c",
                "line_number": 138,
                "column_number": 13,
                "description": "variable `rv` accessed here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_SEQUENCE_aper.c",
                "line_number": 148,
                "column_number": 13,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "constr_SEQUENCE_aper.c|SEQUENCE_decode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "e3b734890a6da13420dfa681ca387e36",
        "hash": "8563e7da4a8d984430c74a7e21c2f46e",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 164,
        "column": 26,
        "procedure": "SEQUENCE_decode_aper",
        "procedure_start_line": 18,
        "file": "lib/asn1c/common/constr_SEQUENCE_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_SEQUENCE_aper.c",
                "line_number": 18,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_SEQUENCE_aper.c",
                "line_number": 164,
                "column_number": 26,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 101,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "constr_SEQUENCE_aper.c|SEQUENCE_decode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "bca484ba9fd6bb1bcedd35a030bfc273",
        "hash": "1997e89f8276293ecc1f8566da6a2083",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 260,
        "column": 13,
        "procedure": "SEQUENCE_decode_aper",
        "procedure_start_line": 18,
        "file": "lib/asn1c/common/constr_SEQUENCE_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_SEQUENCE_aper.c",
                "line_number": 18,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_SEQUENCE_aper.c",
                "line_number": 260,
                "column_number": 13,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 95,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "constr_SEQUENCE_aper.c|SEQUENCE_decode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "1997e89f8276293ecc1f8566da6a2083",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `rv` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 266,
        "column": 5,
        "procedure": "SEQUENCE_decode_aper",
        "procedure_start_line": 18,
        "file": "lib/asn1c/common/constr_SEQUENCE_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_SEQUENCE_aper.c",
                "line_number": 18,
                "column_number": 1,
                "description": "variable `rv` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_SEQUENCE_aper.c",
                "line_number": 266,
                "column_number": 5,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "constr_SEQUENCE_aper.c|SEQUENCE_decode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "bca484ba9fd6bb1bcedd35a030bfc273",
        "hash": "8563e7da4a8d984430c74a7e21c2f46e",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 338,
        "column": 9,
        "procedure": "SEQUENCE_encode_aper",
        "procedure_start_line": 324,
        "file": "lib/asn1c/common/constr_SEQUENCE_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_SEQUENCE_aper.c",
                "line_number": 324,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_SEQUENCE_aper.c",
                "line_number": 338,
                "column_number": 9,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 65,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "constr_SEQUENCE_aper.c|SEQUENCE_encode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "c826b75b6486e953811b522e891eff5b",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 354,
        "column": 13,
        "procedure": "SEQUENCE_encode_aper",
        "procedure_start_line": 324,
        "file": "lib/asn1c/common/constr_SEQUENCE_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_SEQUENCE_aper.c",
                "line_number": 324,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_SEQUENCE_aper.c",
                "line_number": 354,
                "column_number": 13,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 65,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "constr_SEQUENCE_aper.c|SEQUENCE_encode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "c826b75b6486e953811b522e891eff5b",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 388,
        "column": 13,
        "procedure": "SEQUENCE_encode_aper",
        "procedure_start_line": 324,
        "file": "lib/asn1c/common/constr_SEQUENCE_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_SEQUENCE_aper.c",
                "line_number": 324,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_SEQUENCE_aper.c",
                "line_number": 388,
                "column_number": 13,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 65,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "constr_SEQUENCE_aper.c|SEQUENCE_encode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "c826b75b6486e953811b522e891eff5b",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 418,
        "column": 17,
        "procedure": "SEQUENCE_encode_aper",
        "procedure_start_line": 324,
        "file": "lib/asn1c/common/constr_SEQUENCE_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_SEQUENCE_aper.c",
                "line_number": 324,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_SEQUENCE_aper.c",
                "line_number": 418,
                "column_number": 17,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 65,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "constr_SEQUENCE_aper.c|SEQUENCE_encode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "c826b75b6486e953811b522e891eff5b",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `er` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 434,
        "column": 13,
        "procedure": "SEQUENCE_encode_aper",
        "procedure_start_line": 324,
        "file": "lib/asn1c/common/constr_SEQUENCE_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_SEQUENCE_aper.c",
                "line_number": 430,
                "column_number": 9,
                "description": "variable `er` accessed here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_SEQUENCE_aper.c",
                "line_number": 434,
                "column_number": 13,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "constr_SEQUENCE_aper.c|SEQUENCE_encode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "da8fa27f8b18ee455647efb11e410691",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `er` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 438,
        "column": 23,
        "procedure": "SEQUENCE_encode_aper",
        "procedure_start_line": 324,
        "file": "lib/asn1c/common/constr_SEQUENCE_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_SEQUENCE_aper.c",
                "line_number": 330,
                "column_number": 5,
                "description": "variable `er` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_SEQUENCE_aper.c",
                "line_number": 438,
                "column_number": 23,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 70,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "constr_SEQUENCE_aper.c|SEQUENCE_encode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "bca484ba9fd6bb1bcedd35a030bfc273",
        "hash": "da8fa27f8b18ee455647efb11e410691",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `result_skipped` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 21,
        "column": 25,
        "procedure": "SEQUENCE_random_fill",
        "procedure_start_line": 9,
        "file": "lib/asn1c/common/constr_SEQUENCE_rfill.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_SEQUENCE_rfill.c",
                "line_number": 17,
                "column_number": 5,
                "description": "variable `result_skipped` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_SEQUENCE_rfill.c",
                "line_number": 21,
                "column_number": 25,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "constr_SEQUENCE_rfill.c|SEQUENCE_random_fill|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "a0612152fe00496ab9527c543f1ef89d",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`_.code` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 54,
        "column": 16,
        "procedure": "SEQUENCE_random_fill",
        "procedure_start_line": 9,
        "file": "lib/asn1c/common/constr_SEQUENCE_rfill.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_SEQUENCE_rfill.c",
                "line_number": 9,
                "column_number": 1,
                "description": "struct field address `code` created"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_SEQUENCE_rfill.c",
                "line_number": 54,
                "column_number": 16,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "constr_SEQUENCE_rfill.c|SEQUENCE_random_fill|PULSE_UNINITIALIZED_VALUE",
        "node_key": "90dc3b37b7a16d9ded1f34f559f816bd",
        "hash": "b4b58e07380d391dcf0a24181c4b8401",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`_.length` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 56,
        "column": 33,
        "procedure": "SEQUENCE_random_fill",
        "procedure_start_line": 9,
        "file": "lib/asn1c/common/constr_SEQUENCE_rfill.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_SEQUENCE_rfill.c",
                "line_number": 9,
                "column_number": 1,
                "description": "struct field address `length` created"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_SEQUENCE_rfill.c",
                "line_number": 56,
                "column_number": 33,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "constr_SEQUENCE_rfill.c|SEQUENCE_random_fill|PULSE_UNINITIALIZED_VALUE",
        "node_key": "3962199f4b1acd3d6ad67c38a3eb7fb0",
        "hash": "c7321d2de51ea1fc17b0fd4792648de6",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmpres` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 67,
        "column": 13,
        "procedure": "SEQUENCE_random_fill",
        "procedure_start_line": 9,
        "file": "lib/asn1c/common/constr_SEQUENCE_rfill.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_SEQUENCE_rfill.c",
                "line_number": 9,
                "column_number": 1,
                "description": "variable `tmpres` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_SEQUENCE_rfill.c",
                "line_number": 67,
                "column_number": 13,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "constr_SEQUENCE_rfill.c|SEQUENCE_random_fill|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "bffdbc4d6fbdfc9cd869008e74879d86",
        "hash": "de5b10561a83483553a3b6bff09867c7",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `result_ok` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 73,
        "column": 5,
        "procedure": "SEQUENCE_random_fill",
        "procedure_start_line": 9,
        "file": "lib/asn1c/common/constr_SEQUENCE_rfill.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_SEQUENCE_rfill.c",
                "line_number": 15,
                "column_number": 5,
                "description": "variable `result_ok` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_SEQUENCE_rfill.c",
                "line_number": 73,
                "column_number": 5,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "constr_SEQUENCE_rfill.c|SEQUENCE_random_fill|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "b92260888f571ecf5fdff380b8cbbd8e",
        "hash": "3ffb4a3e5d2cb978ad4cd92b95a4f767",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 20,
        "column": 15,
        "procedure": "SET_OF_encode_aper",
        "procedure_start_line": 9,
        "file": "lib/asn1c/common/constr_SET_OF_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_SET_OF_aper.c",
                "line_number": 9,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_SET_OF_aper.c",
                "line_number": 20,
                "column_number": 15,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 65,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "constr_SET_OF_aper.c|SET_OF_encode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "53d8679d1ce46bc1266a2ec00ef5cc8d",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 43,
        "column": 54,
        "procedure": "SET_OF_encode_aper",
        "procedure_start_line": 9,
        "file": "lib/asn1c/common/constr_SET_OF_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_SET_OF_aper.c",
                "line_number": 9,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_SET_OF_aper.c",
                "line_number": 43,
                "column_number": 54,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 65,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "constr_SET_OF_aper.c|SET_OF_encode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "53d8679d1ce46bc1266a2ec00ef5cc8d",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 58,
        "column": 13,
        "procedure": "SET_OF_encode_aper",
        "procedure_start_line": 9,
        "file": "lib/asn1c/common/constr_SET_OF_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_SET_OF_aper.c",
                "line_number": 9,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_SET_OF_aper.c",
                "line_number": 58,
                "column_number": 13,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 65,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "constr_SET_OF_aper.c|SET_OF_encode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "53d8679d1ce46bc1266a2ec00ef5cc8d",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 109,
        "column": 9,
        "procedure": "SET_OF_decode_aper",
        "procedure_start_line": 95,
        "file": "lib/asn1c/common/constr_SET_OF_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_SET_OF_aper.c",
                "line_number": 95,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_SET_OF_aper.c",
                "line_number": 109,
                "column_number": 9,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 95,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "constr_SET_OF_aper.c|SET_OF_decode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "75b773e4489d2597ea8c348b9f4176ab",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 128,
        "column": 23,
        "procedure": "SET_OF_decode_aper",
        "procedure_start_line": 95,
        "file": "lib/asn1c/common/constr_SET_OF_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_SET_OF_aper.c",
                "line_number": 95,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_SET_OF_aper.c",
                "line_number": 128,
                "column_number": 23,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 101,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "constr_SET_OF_aper.c|SET_OF_decode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "bca484ba9fd6bb1bcedd35a030bfc273",
        "hash": "75b773e4489d2597ea8c348b9f4176ab",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `tmp_error` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 152,
        "column": 28,
        "procedure": "SET_OF_decode_aper",
        "procedure_start_line": 95,
        "file": "lib/asn1c/common/constr_SET_OF_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_SET_OF_aper.c",
                "line_number": 95,
                "column_number": 1,
                "description": "variable `tmp_error` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_SET_OF_aper.c",
                "line_number": 152,
                "column_number": 28,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/asn_codecs.h",
                "line_number": 101,
                "column_number": -1,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "constr_SET_OF_aper.c|SET_OF_decode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "bca484ba9fd6bb1bcedd35a030bfc273",
        "hash": "75b773e4489d2597ea8c348b9f4176ab",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `rv` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 174,
        "column": 13,
        "procedure": "SET_OF_decode_aper",
        "procedure_start_line": 95,
        "file": "lib/asn1c/common/constr_SET_OF_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_SET_OF_aper.c",
                "line_number": 158,
                "column_number": 13,
                "description": "variable `rv` accessed here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_SET_OF_aper.c",
                "line_number": 174,
                "column_number": 13,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "constr_SET_OF_aper.c|SET_OF_decode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "bffdbc4d6fbdfc9cd869008e74879d86",
        "hash": "6154f9ba955666fe9b52f29d3bc805c1",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `rv` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 184,
        "column": 5,
        "procedure": "SET_OF_decode_aper",
        "procedure_start_line": 95,
        "file": "lib/asn1c/common/constr_SET_OF_aper.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_SET_OF_aper.c",
                "line_number": 99,
                "column_number": 5,
                "description": "variable `rv` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_SET_OF_aper.c",
                "line_number": 184,
                "column_number": 5,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "constr_SET_OF_aper.c|SET_OF_decode_aper|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "bca484ba9fd6bb1bcedd35a030bfc273",
        "hash": "6154f9ba955666fe9b52f29d3bc805c1",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "STACK_VARIABLE_ADDRESS_ESCAPE",
        "qualifier": "Address of stack variable `result_skipped` is returned by the function.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 25,
        "column": 25,
        "procedure": "SET_OF_random_fill",
        "procedure_start_line": 9,
        "file": "lib/asn1c/common/constr_SET_OF_rfill.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_SET_OF_rfill.c",
                "line_number": 17,
                "column_number": 5,
                "description": "variable `result_skipped` declared here"
            },
            {
                "level": 0,
                "filename": "lib/asn1c/common/constr_SET_OF_rfill.c",
                "line_number": 25,
                "column_number": 25,
                "description": "returned here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "constr_SET_OF_rfill.c|SET_OF_random_fill|STACK_VARIABLE_ADDRESS_ESCAPE",
        "node_key": "a7eb241df3c1af4caa81ac7f0765615d",
        "hash": "93e852c2e672cdede0d04e3c87923680",
        "bug_type_hum": "Stack Variable Address Escape",
        "extras": {}
    },
    {
        "bug_type": "NULLPTR_DEREFERENCE",
        "qualifier": "`subsuite` could be null (null value originating from line 116) and is dereferenced.",
        "severity": "ERROR",
        "category": "Null pointer dereference",
        "line": 117,
        "column": 5,
        "procedure": "abts_add_suite",
        "procedure_start_line": 104,
        "file": "lib/core/abts.c",
        "bug_trace": [
            {
                "level": 1,
                "filename": "lib/core/abts.c",
                "line_number": 116,
                "column_number": 16,
                "description": "in call to `malloc (null case)` (modelled)"
            },
            {
                "level": 1,
                "filename": "lib/core/abts.c",
                "line_number": 116,
                "column_number": 16,
                "description": "is assigned to the null pointer"
            },
            {
                "level": 1,
                "filename": "lib/core/abts.c",
                "line_number": 116,
                "column_number": 5,
                "description": "assigned"
            },
            {
                "level": 1,
                "filename": "lib/core/abts.c",
                "line_number": 117,
                "column_number": 5,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 4,
        "bug_trace_max_depth": 1,
        "key": "abts.c|abts_add_suite|NULLPTR_DEREFERENCE",
        "node_key": "e60f97be9305272ddb99efdb3dd3f4c0",
        "hash": "43b76c2094f77106a48d75f0b239943a",
        "bug_type_hum": "Null Dereference",
        "extras": {}
    },
    {
        "bug_type": "NULLPTR_DEREFERENCE",
        "qualifier": "`suite` could be null (null value originating from line 133) and is dereferenced.",
        "severity": "ERROR",
        "category": "Null pointer dereference",
        "line": 133,
        "column": 26,
        "procedure": "abts_add_suite",
        "procedure_start_line": 104,
        "file": "lib/core/abts.c",
        "bug_trace": [
            {
                "level": 1,
                "filename": "lib/core/abts.c",
                "line_number": 133,
                "column_number": 33,
                "description": "in call to `calloc (null case)` (modelled)"
            },
            {
                "level": 1,
                "filename": "lib/core/abts.c",
                "line_number": 133,
                "column_number": 33,
                "description": "is assigned to the null pointer"
            },
            {
                "level": 1,
                "filename": "lib/core/abts.c",
                "line_number": 133,
                "column_number": 26,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 3,
        "bug_trace_max_depth": 1,
        "key": "abts.c|abts_add_suite|NULLPTR_DEREFERENCE",
        "node_key": "ef237510dc01bb5242c5292839177f4f",
        "hash": "32d39b5e9cc57b73e3a5a8508db9c1d2",
        "bug_type_hum": "Null Dereference",
        "extras": {}
    },
    {
        "bug_type": "NULLPTR_DEREFERENCE",
        "qualifier": "null (null value originating from line 133) is dereferenced.",
        "severity": "ERROR",
        "category": "Null pointer dereference",
        "line": 133,
        "column": 26,
        "procedure": "abts_add_suite",
        "procedure_start_line": 104,
        "file": "lib/core/abts.c",
        "bug_trace": [
            {
                "level": 1,
                "filename": "lib/core/abts.c",
                "line_number": 133,
                "column_number": 33,
                "description": "in call to `calloc (null case)` (modelled)"
            },
            {
                "level": 1,
                "filename": "lib/core/abts.c",
                "line_number": 133,
                "column_number": 33,
                "description": "is assigned to the null pointer"
            },
            {
                "level": 1,
                "filename": "lib/core/abts.c",
                "line_number": 133,
                "column_number": 26,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 3,
        "bug_trace_max_depth": 1,
        "key": "abts.c|abts_add_suite|NULLPTR_DEREFERENCE",
        "node_key": "ef237510dc01bb5242c5292839177f4f",
        "hash": "78e344f7acae58cb4c6b63e14206ebcd",
        "bug_type_hum": "Null Dereference",
        "extras": {}
    },
    {
        "bug_type": "NULLPTR_DEREFERENCE",
        "qualifier": "`i` could be null (null value originating from line 567) and is dereferenced.",
        "severity": "ERROR",
        "category": "Null pointer dereference",
        "line": 568,
        "column": 9,
        "procedure": "abts_main",
        "procedure_start_line": 505,
        "file": "lib/core/abts.c",
        "bug_trace": [
            {
                "level": 1,
                "filename": "lib/core/abts.c",
                "line_number": 567,
                "column_number": 24,
                "description": "in call to `calloc (null case)` (modelled)"
            },
            {
                "level": 1,
                "filename": "lib/core/abts.c",
                "line_number": 567,
                "column_number": 24,
                "description": "is assigned to the null pointer"
            },
            {
                "level": 1,
                "filename": "lib/core/abts.c",
                "line_number": 567,
                "column_number": 13,
                "description": "assigned"
            },
            {
                "level": 1,
                "filename": "lib/core/abts.c",
                "line_number": 568,
                "column_number": 9,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 4,
        "bug_trace_max_depth": 1,
        "key": "abts.c|abts_main|NULLPTR_DEREFERENCE",
        "node_key": "5c22877cc161c1e0bb4cebc480593d06",
        "hash": "dd71203f228322beb6af022020b47da0",
        "bug_type_hum": "Null Dereference",
        "extras": {}
    },
    {
        "bug_type": "NULLPTR_DEREFERENCE",
        "qualifier": "null (null value originating from line 307) is dereferenced.",
        "severity": "ERROR",
        "category": "Null pointer dereference",
        "line": 307,
        "column": 19,
        "procedure": "ogs_msprintf_debug",
        "procedure_start_line": 296,
        "file": "lib/core/ogs-strings.c",
        "bug_trace": [
            {
                "level": 1,
                "filename": "lib/core/ogs-strings.c",
                "line_number": 307,
                "column_number": 19,
                "description": "is assigned to the null pointer"
            },
            {
                "level": 1,
                "filename": "lib/core/ogs-strings.c",
                "line_number": 307,
                "column_number": 19,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 1,
        "key": "ogs-strings.c|ogs_msprintf_debug|NULLPTR_DEREFERENCE",
        "node_key": "e77b871ec2904938c62826661ab2c527",
        "hash": "12cad26665125f3ae44d4ce55e6b83e6",
        "bug_type_hum": "Null Dereference",
        "extras": {}
    },
    {
        "bug_type": "NULLPTR_DEREFERENCE",
        "qualifier": "null (null value originating from line 334) is dereferenced.",
        "severity": "ERROR",
        "category": "Null pointer dereference",
        "line": 334,
        "column": 37,
        "procedure": "ogs_mstrcatf_debug",
        "procedure_start_line": 321,
        "file": "lib/core/ogs-strings.c",
        "bug_trace": [
            {
                "level": 1,
                "filename": "lib/core/ogs-strings.c",
                "line_number": 334,
                "column_number": 37,
                "description": "is assigned to the null pointer"
            },
            {
                "level": 1,
                "filename": "lib/core/ogs-strings.c",
                "line_number": 334,
                "column_number": 37,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 1,
        "key": "ogs-strings.c|ogs_mstrcatf_debug|NULLPTR_DEREFERENCE",
        "node_key": "e77b871ec2904938c62826661ab2c527",
        "hash": "12fb2bba74a0c65a458d4be53d3822d3",
        "bug_type_hum": "Null Dereference",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`ctx.ctx_inside.len` is read without initialization during the call to `ogs_hmac_sha224_init()`.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 142,
        "column": 5,
        "procedure": "ogs_hmac_sha224",
        "procedure_start_line": 136,
        "file": "lib/crypt/ogs-sha2-hmac.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/crypt/ogs-sha2-hmac.c",
                "line_number": 136,
                "column_number": 1,
                "description": "struct field address `ctx_inside.len` created"
            },
            {
                "level": 0,
                "filename": "lib/crypt/ogs-sha2-hmac.c",
                "line_number": 142,
                "column_number": 5,
                "description": "when calling `ogs_hmac_sha224_init` here"
            },
            {
                "level": 1,
                "filename": "lib/crypt/ogs-sha2-hmac.c",
                "line_number": 65,
                "column_number": 1,
                "description": "parameter `ctx` of ogs_hmac_sha224_init"
            },
            {
                "level": 1,
                "filename": "lib/crypt/ogs-sha2-hmac.c",
                "line_number": 97,
                "column_number": 5,
                "description": "when calling `ogs_sha224_update` here"
            },
            {
                "level": 2,
                "filename": "lib/crypt/ogs-sha2.c",
                "line_number": 774,
                "column_number": 1,
                "description": "parameter `ctx` of ogs_sha224_update"
            },
            {
                "level": 2,
                "filename": "lib/crypt/ogs-sha2.c",
                "line_number": 781,
                "column_number": 39,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 6,
        "bug_trace_max_depth": 2,
        "key": "ogs-sha2-hmac.c|ogs_hmac_sha224|PULSE_UNINITIALIZED_VALUE",
        "node_key": "65ff89e87db15c052009da72e05071c5",
        "hash": "bf5a3deaf98f11766630ddbd71c5edf7",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`ctx.ctx_inside.len` is read without initialization during the call to `ogs_hmac_sha256_init()`.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 226,
        "column": 5,
        "procedure": "ogs_hmac_sha256",
        "procedure_start_line": 220,
        "file": "lib/crypt/ogs-sha2-hmac.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/crypt/ogs-sha2-hmac.c",
                "line_number": 220,
                "column_number": 1,
                "description": "struct field address `ctx_inside.len` created"
            },
            {
                "level": 0,
                "filename": "lib/crypt/ogs-sha2-hmac.c",
                "line_number": 226,
                "column_number": 5,
                "description": "when calling `ogs_hmac_sha256_init` here"
            },
            {
                "level": 1,
                "filename": "lib/crypt/ogs-sha2-hmac.c",
                "line_number": 149,
                "column_number": 1,
                "description": "parameter `ctx` of ogs_hmac_sha256_init"
            },
            {
                "level": 1,
                "filename": "lib/crypt/ogs-sha2-hmac.c",
                "line_number": 181,
                "column_number": 5,
                "description": "when calling `ogs_sha256_update` here"
            },
            {
                "level": 2,
                "filename": "lib/crypt/ogs-sha2.c",
                "line_number": 375,
                "column_number": 1,
                "description": "parameter `ctx` of ogs_sha256_update"
            },
            {
                "level": 2,
                "filename": "lib/crypt/ogs-sha2.c",
                "line_number": 382,
                "column_number": 39,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 6,
        "bug_trace_max_depth": 2,
        "key": "ogs-sha2-hmac.c|ogs_hmac_sha256|PULSE_UNINITIALIZED_VALUE",
        "node_key": "65ff89e87db15c052009da72e05071c5",
        "hash": "17df3380c118f3a837ee6c36833ab2a2",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`ctx.ctx_inside.len` is read without initialization during the call to `ogs_hmac_sha384_init()`.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 310,
        "column": 5,
        "procedure": "ogs_hmac_sha384",
        "procedure_start_line": 304,
        "file": "lib/crypt/ogs-sha2-hmac.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/crypt/ogs-sha2-hmac.c",
                "line_number": 304,
                "column_number": 1,
                "description": "struct field address `ctx_inside.len` created"
            },
            {
                "level": 0,
                "filename": "lib/crypt/ogs-sha2-hmac.c",
                "line_number": 310,
                "column_number": 5,
                "description": "when calling `ogs_hmac_sha384_init` here"
            },
            {
                "level": 1,
                "filename": "lib/crypt/ogs-sha2-hmac.c",
                "line_number": 233,
                "column_number": 1,
                "description": "parameter `ctx` of ogs_hmac_sha384_init"
            },
            {
                "level": 1,
                "filename": "lib/crypt/ogs-sha2-hmac.c",
                "line_number": 265,
                "column_number": 5,
                "description": "when calling `ogs_sha384_update` here"
            },
            {
                "level": 2,
                "filename": "lib/crypt/ogs-sha2.c",
                "line_number": 674,
                "column_number": 1,
                "description": "parameter `ctx` of ogs_sha384_update"
            },
            {
                "level": 2,
                "filename": "lib/crypt/ogs-sha2.c",
                "line_number": 681,
                "column_number": 39,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 6,
        "bug_trace_max_depth": 2,
        "key": "ogs-sha2-hmac.c|ogs_hmac_sha384|PULSE_UNINITIALIZED_VALUE",
        "node_key": "65ff89e87db15c052009da72e05071c5",
        "hash": "16879b030d1756467ced0ad6711c0486",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`ctx.ctx_inside.len` is read without initialization during the call to `ogs_hmac_sha512_init()`.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 394,
        "column": 5,
        "procedure": "ogs_hmac_sha512",
        "procedure_start_line": 388,
        "file": "lib/crypt/ogs-sha2-hmac.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/crypt/ogs-sha2-hmac.c",
                "line_number": 388,
                "column_number": 1,
                "description": "struct field address `ctx_inside.len` created"
            },
            {
                "level": 0,
                "filename": "lib/crypt/ogs-sha2-hmac.c",
                "line_number": 394,
                "column_number": 5,
                "description": "when calling `ogs_hmac_sha512_init` here"
            },
            {
                "level": 1,
                "filename": "lib/crypt/ogs-sha2-hmac.c",
                "line_number": 317,
                "column_number": 1,
                "description": "parameter `ctx` of ogs_hmac_sha512_init"
            },
            {
                "level": 1,
                "filename": "lib/crypt/ogs-sha2-hmac.c",
                "line_number": 349,
                "column_number": 5,
                "description": "when calling `ogs_sha512_update` here"
            },
            {
                "level": 2,
                "filename": "lib/crypt/ogs-sha2.c",
                "line_number": 572,
                "column_number": 1,
                "description": "parameter `ctx` of ogs_sha512_update"
            },
            {
                "level": 2,
                "filename": "lib/crypt/ogs-sha2.c",
                "line_number": 579,
                "column_number": 39,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 6,
        "bug_trace_max_depth": 2,
        "key": "ogs-sha2-hmac.c|ogs_hmac_sha512|PULSE_UNINITIALIZED_VALUE",
        "node_key": "65ff89e87db15c052009da72e05071c5",
        "hash": "c26f9eafbafdbd60c71720662dd6e449",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`avp` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 117,
        "column": 5,
        "procedure": "ogs_diam_message_session_id_set",
        "procedure_start_line": 104,
        "file": "lib/diameter/common/message.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/diameter/common/message.c",
                "line_number": 104,
                "column_number": 1,
                "description": "variable `avp` declared here"
            },
            {
                "level": 0,
                "filename": "lib/diameter/common/message.c",
                "line_number": 117,
                "column_number": 5,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/diameter/common/message.c",
                "line_number": 117,
                "column_number": -1,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "message.c|ogs_diam_message_session_id_set|PULSE_UNINITIALIZED_VALUE",
        "node_key": "7c4412cf7dd4e7cdcb6d7beed4f7375b",
        "hash": "c4ee33d5742d1fb77f3987ed07f41688",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`avp_vendor` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 137,
        "column": 5,
        "procedure": "ogs_diam_message_experimental_rescode_set",
        "procedure_start_line": 125,
        "file": "lib/diameter/common/message.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/diameter/common/message.c",
                "line_number": 125,
                "column_number": 1,
                "description": "variable `avp_vendor` declared here"
            },
            {
                "level": 0,
                "filename": "lib/diameter/common/message.c",
                "line_number": 137,
                "column_number": 5,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/diameter/common/message.c",
                "line_number": 137,
                "column_number": -1,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "message.c|ogs_diam_message_experimental_rescode_set|PULSE_UNINITIALIZED_VALUE",
        "node_key": "9b4036c0c9d517dd062d00019f372d8f",
        "hash": "ff5a054c861373a0b9ccfa8e994d9128",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`avp` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 138,
        "column": 5,
        "procedure": "ogs_diam_message_experimental_rescode_set",
        "procedure_start_line": 125,
        "file": "lib/diameter/common/message.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/diameter/common/message.c",
                "line_number": 125,
                "column_number": 1,
                "description": "variable `avp` declared here"
            },
            {
                "level": 0,
                "filename": "lib/diameter/common/message.c",
                "line_number": 138,
                "column_number": 5,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/diameter/common/message.c",
                "line_number": 138,
                "column_number": -1,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "message.c|ogs_diam_message_experimental_rescode_set|PULSE_UNINITIALIZED_VALUE",
        "node_key": "90806c92c4442efb742c5abda09fa3b0",
        "hash": "7942d37b910d82424266a83931ddb8bb",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`avp_experimental_result_code` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 143,
        "column": 5,
        "procedure": "ogs_diam_message_experimental_rescode_set",
        "procedure_start_line": 125,
        "file": "lib/diameter/common/message.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/diameter/common/message.c",
                "line_number": 125,
                "column_number": 1,
                "description": "variable `avp_experimental_result_code` declared here"
            },
            {
                "level": 0,
                "filename": "lib/diameter/common/message.c",
                "line_number": 143,
                "column_number": 5,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/diameter/common/message.c",
                "line_number": 143,
                "column_number": -1,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "message.c|ogs_diam_message_experimental_rescode_set|PULSE_UNINITIALIZED_VALUE",
        "node_key": "7c4412cf7dd4e7cdcb6d7beed4f7375b",
        "hash": "bbfa4a7492f07f79178ce07e3ed0ffd1",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`avp_vendor` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 165,
        "column": 5,
        "procedure": "ogs_diam_message_vendor_specific_appid_set",
        "procedure_start_line": 154,
        "file": "lib/diameter/common/message.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/diameter/common/message.c",
                "line_number": 154,
                "column_number": 1,
                "description": "variable `avp_vendor` declared here"
            },
            {
                "level": 0,
                "filename": "lib/diameter/common/message.c",
                "line_number": 165,
                "column_number": 5,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/diameter/common/message.c",
                "line_number": 165,
                "column_number": -1,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "message.c|ogs_diam_message_vendor_specific_appid_set|PULSE_UNINITIALIZED_VALUE",
        "node_key": "9b4036c0c9d517dd062d00019f372d8f",
        "hash": "aa3ab3ef275e463316ba524490ba08a2",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`avp` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 166,
        "column": 5,
        "procedure": "ogs_diam_message_vendor_specific_appid_set",
        "procedure_start_line": 154,
        "file": "lib/diameter/common/message.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/diameter/common/message.c",
                "line_number": 154,
                "column_number": 1,
                "description": "variable `avp` declared here"
            },
            {
                "level": 0,
                "filename": "lib/diameter/common/message.c",
                "line_number": 166,
                "column_number": 5,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/diameter/common/message.c",
                "line_number": 166,
                "column_number": -1,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "message.c|ogs_diam_message_vendor_specific_appid_set|PULSE_UNINITIALIZED_VALUE",
        "node_key": "90806c92c4442efb742c5abda09fa3b0",
        "hash": "41766c5d4ed55fd2c7b20288fb9b63e5",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`avp_vendor_specific_application_id` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 171,
        "column": 5,
        "procedure": "ogs_diam_message_vendor_specific_appid_set",
        "procedure_start_line": 154,
        "file": "lib/diameter/common/message.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/diameter/common/message.c",
                "line_number": 154,
                "column_number": 1,
                "description": "variable `avp_vendor_specific_application_id` declared here"
            },
            {
                "level": 0,
                "filename": "lib/diameter/common/message.c",
                "line_number": 171,
                "column_number": 5,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/diameter/common/message.c",
                "line_number": 172,
                "column_number": -1,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "message.c|ogs_diam_message_vendor_specific_appid_set|PULSE_UNINITIALIZED_VALUE",
        "node_key": "7c4412cf7dd4e7cdcb6d7beed4f7375b",
        "hash": "9752f7bf7c896b69f9e1a7a4158013ff",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "MEMORY_LEAK_C",
        "qualifier": "Memory dynamically allocated by `malloc`, indirectly via call to `bp_alloc()` on line 309 is not freed after the last access at line 312, column 3.",
        "severity": "ERROR",
        "category": "Resource leak",
        "line": 312,
        "column": 3,
        "procedure": "list_pipes",
        "procedure_start_line": 301,
        "file": "lib/ipfw/dummynet.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/ipfw/dummynet.c",
                "line_number": 309,
                "column_number": 5,
                "description": "allocation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "lib/ipfw/dummynet.c",
                "line_number": 309,
                "column_number": 5,
                "description": "when calling `bp_alloc` here"
            },
            {
                "level": 2,
                "filename": "lib/ipfw/ipfw2.c",
                "line_number": 393,
                "column_number": 16,
                "description": "allocated by `malloc` here"
            },
            {
                "level": 0,
                "filename": "lib/ipfw/dummynet.c",
                "line_number": 312,
                "column_number": 3,
                "description": "memory becomes unreachable here"
            }
        ],
        "bug_trace_length": 4,
        "bug_trace_max_depth": 2,
        "key": "dummynet.c|list_pipes|MEMORY_LEAK_C",
        "node_key": "b34edf6d20d9793b78a2d881e78776ff",
        "hash": "f45a546c93e6c966601cf736eee2894d",
        "bug_type_hum": "Memory Leak",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`_.oid.len` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 412,
        "column": 33,
        "procedure": "ipfw_delete_pipe",
        "procedure_start_line": 401,
        "file": "lib/ipfw/dummynet.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/ipfw/dummynet.c",
                "line_number": 401,
                "column_number": 1,
                "description": "struct field address `oid.len` created"
            },
            {
                "level": 0,
                "filename": "lib/ipfw/dummynet.c",
                "line_number": 412,
                "column_number": 33,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "dummynet.c|ipfw_delete_pipe|PULSE_UNINITIALIZED_VALUE",
        "node_key": "9b1abd9a0b12adecec4fc366d6696788",
        "hash": "7cbd3a2167533ea18b8db13afe48757a",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "NULLPTR_DEREFERENCE",
        "qualifier": "`end` could be null (null value originating from line 554) and is dereferenced.",
        "severity": "ERROR",
        "category": "Null pointer dereference",
        "line": 557,
        "column": 7,
        "procedure": "read_bandwidth",
        "procedure_start_line": 535,
        "file": "lib/ipfw/dummynet.c",
        "bug_trace": [
            {
                "level": 1,
                "filename": "lib/ipfw/dummynet.c",
                "line_number": 554,
                "column_number": 3,
                "description": "is assigned to the null pointer"
            },
            {
                "level": 1,
                "filename": "lib/ipfw/dummynet.c",
                "line_number": 554,
                "column_number": 3,
                "description": "assigned"
            },
            {
                "level": 1,
                "filename": "lib/ipfw/dummynet.c",
                "line_number": 557,
                "column_number": 7,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 3,
        "bug_trace_max_depth": 1,
        "key": "dummynet.c|read_bandwidth|NULLPTR_DEREFERENCE",
        "node_key": "3868f628bf33c864ca0810fb5550bcec",
        "hash": "124d49f2a93a7fe3b52c105e54357b99",
        "bug_type_hum": "Null Dereference",
        "extras": {}
    },
    {
        "bug_type": "PULSE_RESOURCE_LEAK",
        "qualifier": "File descriptor dynamically allocated by `fopen()` on line 624 is not closed after the last access at line 641, column 5.",
        "severity": "ERROR",
        "category": "Resource leak",
        "line": 641,
        "column": 5,
        "procedure": "load_extra_delays",
        "procedure_start_line": 603,
        "file": "lib/ipfw/dummynet.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/ipfw/dummynet.c",
                "line_number": 624,
                "column_number": 6,
                "description": "allocation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "lib/ipfw/dummynet.c",
                "line_number": 624,
                "column_number": 6,
                "description": "allocated by `fopen()` here"
            },
            {
                "level": 0,
                "filename": "lib/ipfw/dummynet.c",
                "line_number": 641,
                "column_number": 5,
                "description": "file descriptor becomes unreachable here"
            }
        ],
        "bug_trace_length": 3,
        "bug_trace_max_depth": 1,
        "key": "dummynet.c|load_extra_delays|PULSE_RESOURCE_LEAK",
        "node_key": "f6a63295ea2170d459e32390d004b3d1",
        "hash": "89ad161d388a0f69cf9524b9f766c8d0",
        "bug_type_hum": "Resource Leak",
        "extras": {}
    },
    {
        "bug_type": "PULSE_RESOURCE_LEAK",
        "qualifier": "File descriptor dynamically allocated by `fopen()` on line 624 is not closed after the last access at line 650, column 4.",
        "severity": "ERROR",
        "category": "Resource leak",
        "line": 650,
        "column": 4,
        "procedure": "load_extra_delays",
        "procedure_start_line": 603,
        "file": "lib/ipfw/dummynet.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/ipfw/dummynet.c",
                "line_number": 624,
                "column_number": 6,
                "description": "allocation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "lib/ipfw/dummynet.c",
                "line_number": 624,
                "column_number": 6,
                "description": "allocated by `fopen()` here"
            },
            {
                "level": 0,
                "filename": "lib/ipfw/dummynet.c",
                "line_number": 650,
                "column_number": 4,
                "description": "file descriptor becomes unreachable here"
            }
        ],
        "bug_trace_length": 3,
        "bug_trace_max_depth": 1,
        "key": "dummynet.c|load_extra_delays|PULSE_RESOURCE_LEAK",
        "node_key": "96ec131595071e97eb87772a982bae88",
        "hash": "89ad161d388a0f69cf9524b9f766c8d0",
        "bug_type_hum": "Resource Leak",
        "extras": {}
    },
    {
        "bug_type": "PULSE_RESOURCE_LEAK",
        "qualifier": "File descriptor dynamically allocated by `fopen()` on line 624 is not closed after the last access at line 656, column 4.",
        "severity": "ERROR",
        "category": "Resource leak",
        "line": 656,
        "column": 4,
        "procedure": "load_extra_delays",
        "procedure_start_line": 603,
        "file": "lib/ipfw/dummynet.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/ipfw/dummynet.c",
                "line_number": 624,
                "column_number": 6,
                "description": "allocation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "lib/ipfw/dummynet.c",
                "line_number": 624,
                "column_number": 6,
                "description": "allocated by `fopen()` here"
            },
            {
                "level": 0,
                "filename": "lib/ipfw/dummynet.c",
                "line_number": 656,
                "column_number": 4,
                "description": "file descriptor becomes unreachable here"
            }
        ],
        "bug_trace_length": 3,
        "bug_trace_max_depth": 1,
        "key": "dummynet.c|load_extra_delays|PULSE_RESOURCE_LEAK",
        "node_key": "b34edf6d20d9793b78a2d881e78776ff",
        "hash": "89ad161d388a0f69cf9524b9f766c8d0",
        "bug_type_hum": "Resource Leak",
        "extras": {}
    },
    {
        "bug_type": "PULSE_RESOURCE_LEAK",
        "qualifier": "File descriptor dynamically allocated by `fopen()` on line 624 is not closed after the last access at line 659, column 8.",
        "severity": "ERROR",
        "category": "Resource leak",
        "line": 659,
        "column": 8,
        "procedure": "load_extra_delays",
        "procedure_start_line": 603,
        "file": "lib/ipfw/dummynet.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/ipfw/dummynet.c",
                "line_number": 624,
                "column_number": 6,
                "description": "allocation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "lib/ipfw/dummynet.c",
                "line_number": 624,
                "column_number": 6,
                "description": "allocated by `fopen()` here"
            },
            {
                "level": 0,
                "filename": "lib/ipfw/dummynet.c",
                "line_number": 659,
                "column_number": 8,
                "description": "file descriptor becomes unreachable here"
            }
        ],
        "bug_trace_length": 3,
        "bug_trace_max_depth": 1,
        "key": "dummynet.c|load_extra_delays|PULSE_RESOURCE_LEAK",
        "node_key": "b34edf6d20d9793b78a2d881e78776ff",
        "hash": "89ad161d388a0f69cf9524b9f766c8d0",
        "bug_type_hum": "Resource Leak",
        "extras": {}
    },
    {
        "bug_type": "PULSE_RESOURCE_LEAK",
        "qualifier": "File descriptor dynamically allocated by `fopen()` on line 624 is not closed after the last access at line 669, column 4.",
        "severity": "ERROR",
        "category": "Resource leak",
        "line": 669,
        "column": 4,
        "procedure": "load_extra_delays",
        "procedure_start_line": 603,
        "file": "lib/ipfw/dummynet.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/ipfw/dummynet.c",
                "line_number": 624,
                "column_number": 6,
                "description": "allocation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "lib/ipfw/dummynet.c",
                "line_number": 624,
                "column_number": 6,
                "description": "allocated by `fopen()` here"
            },
            {
                "level": 0,
                "filename": "lib/ipfw/dummynet.c",
                "line_number": 669,
                "column_number": 4,
                "description": "file descriptor becomes unreachable here"
            }
        ],
        "bug_trace_length": 3,
        "bug_trace_max_depth": 1,
        "key": "dummynet.c|load_extra_delays|PULSE_RESOURCE_LEAK",
        "node_key": "96ec131595071e97eb87772a982bae88",
        "hash": "89ad161d388a0f69cf9524b9f766c8d0",
        "bug_type_hum": "Resource Leak",
        "extras": {}
    },
    {
        "bug_type": "PULSE_RESOURCE_LEAK",
        "qualifier": "File descriptor dynamically allocated by `fopen()` on line 624 is not closed after the last access at line 672, column 4.",
        "severity": "ERROR",
        "category": "Resource leak",
        "line": 672,
        "column": 4,
        "procedure": "load_extra_delays",
        "procedure_start_line": 603,
        "file": "lib/ipfw/dummynet.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/ipfw/dummynet.c",
                "line_number": 624,
                "column_number": 6,
                "description": "allocation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "lib/ipfw/dummynet.c",
                "line_number": 624,
                "column_number": 6,
                "description": "allocated by `fopen()` here"
            },
            {
                "level": 0,
                "filename": "lib/ipfw/dummynet.c",
                "line_number": 672,
                "column_number": 4,
                "description": "file descriptor becomes unreachable here"
            }
        ],
        "bug_trace_length": 3,
        "bug_trace_max_depth": 1,
        "key": "dummynet.c|load_extra_delays|PULSE_RESOURCE_LEAK",
        "node_key": "96ec131595071e97eb87772a982bae88",
        "hash": "89ad161d388a0f69cf9524b9f766c8d0",
        "bug_type_hum": "Resource Leak",
        "extras": {}
    },
    {
        "bug_type": "PULSE_RESOURCE_LEAK",
        "qualifier": "File descriptor dynamically allocated by `fopen()` on line 624 is not closed after the last access at line 704, column 7.",
        "severity": "ERROR",
        "category": "Resource leak",
        "line": 704,
        "column": 7,
        "procedure": "load_extra_delays",
        "procedure_start_line": 603,
        "file": "lib/ipfw/dummynet.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/ipfw/dummynet.c",
                "line_number": 624,
                "column_number": 6,
                "description": "allocation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "lib/ipfw/dummynet.c",
                "line_number": 624,
                "column_number": 6,
                "description": "allocated by `fopen()` here"
            },
            {
                "level": 0,
                "filename": "lib/ipfw/dummynet.c",
                "line_number": 704,
                "column_number": 7,
                "description": "file descriptor becomes unreachable here"
            }
        ],
        "bug_trace_length": 3,
        "bug_trace_max_depth": 1,
        "key": "dummynet.c|load_extra_delays|PULSE_RESOURCE_LEAK",
        "node_key": "677f54377db082c568278e42ade6fefc",
        "hash": "89ad161d388a0f69cf9524b9f766c8d0",
        "bug_type_hum": "Resource Leak",
        "extras": {}
    },
    {
        "bug_type": "NULLPTR_DEREFERENCE",
        "qualifier": "`j` could be null (null value originating from line 780) and is dereferenced.",
        "severity": "ERROR",
        "category": "Null pointer dereference",
        "line": 865,
        "column": 3,
        "procedure": "ipfw_config_pipe",
        "procedure_start_line": 771,
        "file": "lib/ipfw/dummynet.c",
        "bug_trace": [
            {
                "level": 1,
                "filename": "lib/ipfw/dummynet.c",
                "line_number": 780,
                "column_number": 2,
                "description": "is assigned to the null pointer"
            },
            {
                "level": 1,
                "filename": "lib/ipfw/dummynet.c",
                "line_number": 780,
                "column_number": 2,
                "description": "assigned"
            },
            {
                "level": 1,
                "filename": "lib/ipfw/dummynet.c",
                "line_number": 865,
                "column_number": 3,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 3,
        "bug_trace_max_depth": 1,
        "key": "dummynet.c|ipfw_config_pipe|NULLPTR_DEREFERENCE",
        "node_key": "3962199f4b1acd3d6ad67c38a3eb7fb0",
        "hash": "b084eb00b9ebae9456ecea51606928fd",
        "bug_type_hum": "Null Dereference",
        "extras": {}
    },
    {
        "bug_type": "PULSE_RESOURCE_LEAK",
        "qualifier": "File descriptor dynamically allocated by `fopen()` on line 533 is not closed after the last access at line 555, column 13.",
        "severity": "ERROR",
        "category": "Resource leak",
        "line": 555,
        "column": 13,
        "procedure": "do_connect",
        "procedure_start_line": 518,
        "file": "lib/ipfw/glue.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/ipfw/glue.c",
                "line_number": 533,
                "column_number": 19,
                "description": "allocation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "lib/ipfw/glue.c",
                "line_number": 533,
                "column_number": 19,
                "description": "allocated by `fopen()` here"
            },
            {
                "level": 0,
                "filename": "lib/ipfw/glue.c",
                "line_number": 555,
                "column_number": 13,
                "description": "file descriptor becomes unreachable here"
            }
        ],
        "bug_trace_length": 3,
        "bug_trace_max_depth": 1,
        "key": "glue.c|do_connect|PULSE_RESOURCE_LEAK",
        "node_key": "b0505af42fefa95ad84b38b49268fe07",
        "hash": "7ce32e31a2e1429d905be536facaf788",
        "bug_type_hum": "Resource Leak",
        "extras": {}
    },
    {
        "bug_type": "NULLPTR_DEREFERENCE",
        "qualifier": "null (null value originating from line 488) is dereferenced.",
        "severity": "ERROR",
        "category": "Null pointer dereference",
        "line": 488,
        "column": 3,
        "procedure": "pr_u64",
        "procedure_start_line": 473,
        "file": "lib/ipfw/ipfw2.c",
        "bug_trace": [
            {
                "level": 1,
                "filename": "lib/ipfw/ipfw2.c",
                "line_number": 488,
                "column_number": 3,
                "description": "is assigned to the null pointer"
            },
            {
                "level": 1,
                "filename": "lib/ipfw/ipfw2.c",
                "line_number": 488,
                "column_number": 3,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 1,
        "key": "ipfw2.c|pr_u64|NULLPTR_DEREFERENCE",
        "node_key": "d0d36d2124728fc12d0ed244d76eb72d",
        "hash": "5d83607c89cd538c68fed60b569887a3",
        "bug_type_hum": "Null Dereference",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`cfg` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 2160,
        "column": 9,
        "procedure": "ipfw_sets_handler",
        "procedure_start_line": 2136,
        "file": "lib/ipfw/ipfw2.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/ipfw/ipfw2.c",
                "line_number": 2136,
                "column_number": 1,
                "description": "variable `cfg` declared here"
            },
            {
                "level": 0,
                "filename": "lib/ipfw/ipfw2.c",
                "line_number": 2160,
                "column_number": 9,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "ipfw2.c|ipfw_sets_handler|PULSE_UNINITIALIZED_VALUE",
        "node_key": "1ab308e50dcf15058396c6bd386beb6d",
        "hash": "749729b8b5b34c6860330788fc008534",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "INFINITE_LOOP",
        "qualifier": "Recurring state leading to infinite execution at line 3206, column 2.",
        "severity": "ERROR",
        "category": "No_category",
        "line": 3206,
        "column": 2,
        "procedure": "fill_comment",
        "procedure_start_line": 3185,
        "file": "lib/ipfw/ipfw2.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/ipfw/ipfw2.c",
                "line_number": 3206,
                "column_number": 2,
                "description": "in loop"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "ipfw2.c|fill_comment|INFINITE_LOOP",
        "node_key": "31f49531e83433733e7bc73b631c6cd3",
        "hash": "659adf5a86ced99d0806c79141d3ed6c",
        "bug_type_hum": "Infinite Loop",
        "extras": {}
    },
    {
        "bug_type": "MEMORY_LEAK_C",
        "qualifier": "Memory dynamically allocated by `malloc` on line 379 is not freed after the last access at line 390, column 3.",
        "severity": "ERROR",
        "category": "Resource leak",
        "line": 390,
        "column": 3,
        "procedure": "fill_ip6",
        "procedure_start_line": 336,
        "file": "lib/ipfw/ipv6.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/ipfw/ipv6.c",
                "line_number": 379,
                "column_number": 13,
                "description": "allocation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "lib/ipfw/ipv6.c",
                "line_number": 379,
                "column_number": 13,
                "description": "allocated by `malloc` here"
            },
            {
                "level": 0,
                "filename": "lib/ipfw/ipv6.c",
                "line_number": 390,
                "column_number": 3,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "lib/ipfw/ipv6.c",
                "line_number": 47,
                "column_number": -1,
                "description": "memory becomes unreachable here"
            }
        ],
        "bug_trace_length": 3,
        "bug_trace_max_depth": 1,
        "key": "ipv6.c|fill_ip6|MEMORY_LEAK_C",
        "node_key": "a2de804e0551e29f7a5be44f5c3b4b48",
        "hash": "c63605b6b5f25b3a0a0bc3e6fbecce1e",
        "bug_type_hum": "Memory Leak",
        "extras": {}
    },
    {
        "bug_type": "MEMORY_LEAK_C",
        "qualifier": "Memory dynamically allocated by `malloc` on line 379 is not freed after the last access at line 402, column 4.",
        "severity": "ERROR",
        "category": "Resource leak",
        "line": 402,
        "column": 4,
        "procedure": "fill_ip6",
        "procedure_start_line": 336,
        "file": "lib/ipfw/ipv6.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/ipfw/ipv6.c",
                "line_number": 379,
                "column_number": 13,
                "description": "allocation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "lib/ipfw/ipv6.c",
                "line_number": 379,
                "column_number": 13,
                "description": "allocated by `malloc` here"
            },
            {
                "level": 0,
                "filename": "lib/ipfw/ipv6.c",
                "line_number": 402,
                "column_number": 4,
                "description": "memory becomes unreachable here"
            }
        ],
        "bug_trace_length": 3,
        "bug_trace_max_depth": 1,
        "key": "ipv6.c|fill_ip6|MEMORY_LEAK_C",
        "node_key": "48358bc0d5d978f2e302aa61df903903",
        "hash": "c63605b6b5f25b3a0a0bc3e6fbecce1e",
        "bug_type_hum": "Memory Leak",
        "extras": {}
    },
    {
        "bug_type": "MEMORY_LEAK_C",
        "qualifier": "Memory dynamically allocated by `malloc` on line 379 is not freed after the last access at line 407, column 4.",
        "severity": "ERROR",
        "category": "Resource leak",
        "line": 407,
        "column": 4,
        "procedure": "fill_ip6",
        "procedure_start_line": 336,
        "file": "lib/ipfw/ipv6.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/ipfw/ipv6.c",
                "line_number": 379,
                "column_number": 13,
                "description": "allocation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "lib/ipfw/ipv6.c",
                "line_number": 379,
                "column_number": 13,
                "description": "allocated by `malloc` here"
            },
            {
                "level": 0,
                "filename": "lib/ipfw/ipv6.c",
                "line_number": 407,
                "column_number": 4,
                "description": "memory becomes unreachable here"
            }
        ],
        "bug_trace_length": 3,
        "bug_trace_max_depth": 1,
        "key": "ipv6.c|fill_ip6|MEMORY_LEAK_C",
        "node_key": "c4b888a51d25b2f867f3ce8b26720fa3",
        "hash": "c63605b6b5f25b3a0a0bc3e6fbecce1e",
        "bug_type_hum": "Memory Leak",
        "extras": {}
    },
    {
        "bug_type": "MEMORY_LEAK_C",
        "qualifier": "Memory dynamically allocated by `malloc` on line 842 is not freed after the last access at line 874, column 1.",
        "severity": "ERROR",
        "category": "Resource leak",
        "line": 874,
        "column": 1,
        "procedure": "table_do_modify_record",
        "procedure_start_line": 826,
        "file": "lib/ipfw/tables.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/ipfw/tables.c",
                "line_number": 842,
                "column_number": 15,
                "description": "allocation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "lib/ipfw/tables.c",
                "line_number": 842,
                "column_number": 15,
                "description": "allocated by `malloc` here"
            },
            {
                "level": 0,
                "filename": "lib/ipfw/tables.c",
                "line_number": 874,
                "column_number": 1,
                "description": "memory becomes unreachable here"
            }
        ],
        "bug_trace_length": 3,
        "bug_trace_max_depth": 1,
        "key": "tables.c|table_do_modify_record|MEMORY_LEAK_C",
        "node_key": "fa0c051eb65fbf8d37c52865108bb194",
        "hash": "4edd41e7a3dabbcfe2bd8d81e47957e6",
        "bug_type_hum": "Memory Leak",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`olh` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 1841,
        "column": 26,
        "procedure": "ipfw_list_ta",
        "procedure_start_line": 1829,
        "file": "lib/ipfw/tables.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/ipfw/tables.c",
                "line_number": 1829,
                "column_number": 1,
                "description": "variable `olh` declared here"
            },
            {
                "level": 0,
                "filename": "lib/ipfw/tables.c",
                "line_number": 1841,
                "column_number": 26,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "tables.c|ipfw_list_ta|PULSE_UNINITIALIZED_VALUE",
        "node_key": "bbdf40616926c2963085639ce148a201",
        "hash": "cedeb86f9ae9588f2b3303363bf3f815",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`olh` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 1907,
        "column": 30,
        "procedure": "ipfw_list_values",
        "procedure_start_line": 1890,
        "file": "lib/ipfw/tables.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "lib/ipfw/tables.c",
                "line_number": 1890,
                "column_number": 1,
                "description": "variable `olh` declared here"
            },
            {
                "level": 0,
                "filename": "lib/ipfw/tables.c",
                "line_number": 1907,
                "column_number": 30,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "tables.c|ipfw_list_values|PULSE_UNINITIALIZED_VALUE",
        "node_key": "878345dae8ff6b817951116894d1f0ff",
        "hash": "bcfea0b7ac6d1ca6417eec6296da40d5",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "NULLPTR_DEREFERENCE",
        "qualifier": "`p` could be null (null value originating from line 82) and is dereferenced.",
        "severity": "ERROR",
        "category": "Null pointer dereference",
        "line": 86,
        "column": 3,
        "procedure": "multipart_parser_init",
        "procedure_start_line": 79,
        "file": "lib/sbi/contrib/multipart_parser.c",
        "bug_trace": [
            {
                "level": 1,
                "filename": "lib/sbi/contrib/multipart_parser.c",
                "line_number": 82,
                "column_number": 25,
                "description": "in call to `malloc (null case)` (modelled)"
            },
            {
                "level": 1,
                "filename": "lib/sbi/contrib/multipart_parser.c",
                "line_number": 82,
                "column_number": 25,
                "description": "is assigned to the null pointer"
            },
            {
                "level": 1,
                "filename": "lib/sbi/contrib/multipart_parser.c",
                "line_number": 82,
                "column_number": 3,
                "description": "assigned"
            },
            {
                "level": 1,
                "filename": "lib/sbi/contrib/multipart_parser.c",
                "line_number": 86,
                "column_number": 3,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 4,
        "bug_trace_max_depth": 1,
        "key": "multipart_parser.c|multipart_parser_init|NULLPTR_DEREFERENCE",
        "node_key": "2efe0b7152f4fa9ba34f21b58bff9661",
        "hash": "ffee3c9e659a5d9276fb51df6931ba37",
        "bug_type_hum": "Null Dereference",
        "extras": {}
    },
    {
        "bug_type": "NULLPTR_DEREFERENCE",
        "qualifier": "`ret` could be null (null value originating from line 10) and is dereferenced.",
        "severity": "ERROR",
        "category": "Null pointer dereference",
        "line": 12,
        "column": 2,
        "procedure": "OpenAPI_instantiate_binary_t",
        "procedure_start_line": 8,
        "file": "lib/sbi/openapi/src/binary.c",
        "bug_trace": [
            {
                "level": 1,
                "filename": "lib/sbi/openapi/src/binary.c",
                "line_number": 10,
                "column_number": 26,
                "description": "in call to `malloc (null case)` (modelled)"
            },
            {
                "level": 1,
                "filename": "lib/sbi/openapi/src/binary.c",
                "line_number": 10,
                "column_number": 26,
                "description": "is assigned to the null pointer"
            },
            {
                "level": 1,
                "filename": "lib/sbi/openapi/src/binary.c",
                "line_number": 10,
                "column_number": 2,
                "description": "assigned"
            },
            {
                "level": 1,
                "filename": "lib/sbi/openapi/src/binary.c",
                "line_number": 12,
                "column_number": 2,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 4,
        "bug_trace_max_depth": 1,
        "key": "binary.c|OpenAPI_instantiate_binary_t|NULLPTR_DEREFERENCE",
        "node_key": "ae6c13f304e550f5447e0a24531620d7",
        "hash": "0df0afdb6864074df50f2c8e166d61dc",
        "bug_type_hum": "Null Dereference",
        "extras": {}
    },
    {
        "bug_type": "NULLPTR_DEREFERENCE",
        "qualifier": "`ret->data` could be null (null value originating from line 13) and is dereferenced.",
        "severity": "ERROR",
        "category": "Null pointer dereference",
        "line": 14,
        "column": 2,
        "procedure": "OpenAPI_instantiate_binary_t",
        "procedure_start_line": 8,
        "file": "lib/sbi/openapi/src/binary.c",
        "bug_trace": [
            {
                "level": 1,
                "filename": "lib/sbi/openapi/src/binary.c",
                "line_number": 13,
                "column_number": 14,
                "description": "in call to `malloc (null case)` (modelled)"
            },
            {
                "level": 1,
                "filename": "lib/sbi/openapi/src/binary.c",
                "line_number": 13,
                "column_number": 14,
                "description": "is assigned to the null pointer"
            },
            {
                "level": 1,
                "filename": "lib/sbi/openapi/src/binary.c",
                "line_number": 13,
                "column_number": 2,
                "description": "assigned"
            },
            {
                "level": 1,
                "filename": "lib/sbi/openapi/src/binary.c",
                "line_number": 14,
                "column_number": 2,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 4,
        "bug_trace_max_depth": 1,
        "key": "binary.c|OpenAPI_instantiate_binary_t|NULLPTR_DEREFERENCE",
        "node_key": "81fa2df98e2a6df89540078bbbe3bd7a",
        "hash": "87dae83f8a95c82c8a168055a5ecdeee",
        "bug_type_hum": "Null Dereference",
        "extras": {}
    },
    {
        "bug_type": "INFINITE_LOOP",
        "qualifier": "Recurring state leading to infinite execution at line 397, column 3.",
        "severity": "ERROR",
        "category": "No_category",
        "line": 397,
        "column": 3,
        "procedure": "free_targets",
        "procedure_start_line": 392,
        "file": "subprojects/freeDiameter/extensions/rt_default/rtd_rules.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/extensions/rt_default/rtd_rules.c",
                "line_number": 397,
                "column_number": 3,
                "description": "in loop"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "rtd_rules.c|free_targets|INFINITE_LOOP",
        "node_key": "89e1fea3672f8c1bda5df785b829cfa3",
        "hash": "8725d1efc8512905d51b1f44c53edd15",
        "bug_type_hum": "Infinite Loop",
        "extras": {}
    },
    {
        "bug_type": "INFINITE_LOOP",
        "qualifier": "Recurring state leading to infinite execution at line 529, column 3.",
        "severity": "ERROR",
        "category": "No_category",
        "line": 529,
        "column": 3,
        "procedure": "rtd_conf_reload",
        "procedure_start_line": 501,
        "file": "subprojects/freeDiameter/extensions/rt_default/rtd_rules.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/extensions/rt_default/rtd_rules.c",
                "line_number": 529,
                "column_number": 3,
                "description": "in loop"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "rtd_rules.c|rtd_conf_reload|INFINITE_LOOP",
        "node_key": "c1d780a30890a1959aa2c529d08326c6",
        "hash": "62d9770e5b841cc714691f7e2110b49c",
        "bug_type_hum": "Infinite Loop",
        "extras": {}
    },
    {
        "bug_type": "MEMORY_LEAK_C",
        "qualifier": "Memory dynamically allocated by `malloc` on line 121 is not freed after the last access at line 126, column 2.",
        "severity": "ERROR",
        "category": "Resource leak",
        "line": 126,
        "column": 2,
        "procedure": "redir_entry_new",
        "procedure_start_line": 112,
        "file": "subprojects/freeDiameter/extensions/rt_redirect/redir_entries.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/extensions/rt_redirect/redir_entries.c",
                "line_number": 121,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/extensions/rt_redirect/redir_entries.c",
                "line_number": 121,
                "column_number": -1,
                "description": "allocation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "subprojects/freeDiameter/extensions/rt_redirect/redir_entries.c",
                "line_number": 121,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/freeDiameter/extensions/rt_redirect/redir_entries.c",
                "line_number": 121,
                "column_number": -1,
                "description": "allocated by `malloc` here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/extensions/rt_redirect/redir_entries.c",
                "line_number": 126,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/include/freeDiameter/libfdproto.h",
                "line_number": 570,
                "column_number": -1,
                "description": "memory becomes unreachable here"
            }
        ],
        "bug_trace_length": 3,
        "bug_trace_max_depth": 1,
        "key": "redir_entries.c|redir_entry_new|MEMORY_LEAK_C",
        "node_key": "28d021f40f1fa331aa85631b5a519f68",
        "hash": "f82ed659928ddb6ee3c6facc197b7edd",
        "bug_type_hum": "Memory Leak",
        "extras": {}
    },
    {
        "bug_type": "MEMORY_LEAK_C",
        "qualifier": "Memory dynamically allocated by `malloc` on line 66 is not freed after the last access at line 73, column 3.",
        "severity": "ERROR",
        "category": "Resource leak",
        "line": 73,
        "column": 3,
        "procedure": "fd_app_merge",
        "procedure_start_line": 39,
        "file": "subprojects/freeDiameter/libfdcore/apps.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdcore/apps.c",
                "line_number": 66,
                "column_number": 3,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdcore/apps.c",
                "line_number": 66,
                "column_number": -1,
                "description": "allocation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "subprojects/freeDiameter/libfdcore/apps.c",
                "line_number": 66,
                "column_number": 3,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/freeDiameter/libfdcore/apps.c",
                "line_number": 66,
                "column_number": -1,
                "description": "allocated by `malloc` here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdcore/apps.c",
                "line_number": 73,
                "column_number": 3,
                "description": "memory becomes unreachable here"
            }
        ],
        "bug_trace_length": 3,
        "bug_trace_max_depth": 1,
        "key": "apps.c|fd_app_merge|MEMORY_LEAK_C",
        "node_key": "fa0c051eb65fbf8d37c52865108bb194",
        "hash": "018ed16ea8da6c031353a4aecaba3f06",
        "bug_type_hum": "Memory Leak",
        "extras": {}
    },
    {
        "bug_type": "MEMORY_LEAK_C",
        "qualifier": "Memory dynamically allocated by `malloc` on line 89 is not freed after the last access at line 93, column 3.",
        "severity": "ERROR",
        "category": "Resource leak",
        "line": 93,
        "column": 3,
        "procedure": "fd_cnx_init",
        "procedure_start_line": 83,
        "file": "subprojects/freeDiameter/libfdcore/cnxctx.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdcore/cnxctx.c",
                "line_number": 89,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdcore/cnxctx.c",
                "line_number": 89,
                "column_number": -1,
                "description": "allocation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "subprojects/freeDiameter/libfdcore/cnxctx.c",
                "line_number": 89,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/freeDiameter/libfdcore/cnxctx.c",
                "line_number": 89,
                "column_number": -1,
                "description": "allocated by `malloc` here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdcore/cnxctx.c",
                "line_number": 93,
                "column_number": 3,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/include/freeDiameter/libfdproto.h",
                "line_number": 551,
                "column_number": -1,
                "description": "memory becomes unreachable here"
            }
        ],
        "bug_trace_length": 3,
        "bug_trace_max_depth": 1,
        "key": "cnxctx.c|fd_cnx_init|MEMORY_LEAK_C",
        "node_key": "b0505af42fefa95ad84b38b49268fe07",
        "hash": "75654c330cb30c9aec84f51c66028420",
        "bug_type_hum": "Memory Leak",
        "extras": {}
    },
    {
        "bug_type": "MEMORY_LEAK_C",
        "qualifier": "Memory dynamically allocated by `malloc` on line 144 is not freed after the last access at line 154, column 2.",
        "severity": "ERROR",
        "category": "Resource leak",
        "line": 154,
        "column": 2,
        "procedure": "fd_ep_add_merge",
        "procedure_start_line": 40,
        "file": "subprojects/freeDiameter/libfdcore/endpoints.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdcore/endpoints.c",
                "line_number": 144,
                "column_number": 3,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdcore/endpoints.c",
                "line_number": 144,
                "column_number": -1,
                "description": "allocation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "subprojects/freeDiameter/libfdcore/endpoints.c",
                "line_number": 144,
                "column_number": 3,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/freeDiameter/libfdcore/endpoints.c",
                "line_number": 144,
                "column_number": -1,
                "description": "allocated by `malloc` here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdcore/endpoints.c",
                "line_number": 154,
                "column_number": 2,
                "description": "memory becomes unreachable here"
            }
        ],
        "bug_trace_length": 3,
        "bug_trace_max_depth": 1,
        "key": "endpoints.c|fd_ep_add_merge|MEMORY_LEAK_C",
        "node_key": "1dc3356f6070a264d4b0808f17592b6c",
        "hash": "06558ee2063951c496387c085608ab3e",
        "bug_type_hum": "Memory Leak",
        "extras": {}
    },
    {
        "bug_type": "MEMORY_LEAK_C",
        "qualifier": "Memory dynamically allocated by `malloc` on line 43 is not freed after the last access at line 47, column 2.",
        "severity": "ERROR",
        "category": "Resource leak",
        "line": 47,
        "column": 2,
        "procedure": "fd_event_send",
        "procedure_start_line": 40,
        "file": "subprojects/freeDiameter/libfdcore/events.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdcore/events.c",
                "line_number": 43,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdcore/events.c",
                "line_number": 43,
                "column_number": -1,
                "description": "allocation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "subprojects/freeDiameter/libfdcore/events.c",
                "line_number": 43,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/freeDiameter/libfdcore/events.c",
                "line_number": 43,
                "column_number": -1,
                "description": "allocated by `malloc` here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdcore/events.c",
                "line_number": 47,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/include/freeDiameter/libfdproto.h",
                "line_number": 414,
                "column_number": -1,
                "description": "memory becomes unreachable here"
            }
        ],
        "bug_trace_length": 3,
        "bug_trace_max_depth": 1,
        "key": "events.c|fd_event_send|MEMORY_LEAK_C",
        "node_key": "b0505af42fefa95ad84b38b49268fe07",
        "hash": "5b5aea69a4dade85f95b7e2172664ac6",
        "bug_type_hum": "Memory Leak",
        "extras": {}
    },
    {
        "bug_type": "MEMORY_LEAK_C",
        "qualifier": "Memory dynamically allocated by `malloc` on line 141 is not freed after the last access at line 149, column 2.",
        "severity": "ERROR",
        "category": "Resource leak",
        "line": 149,
        "column": 2,
        "procedure": "fd_event_trig_regcb",
        "procedure_start_line": 132,
        "file": "subprojects/freeDiameter/libfdcore/events.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdcore/events.c",
                "line_number": 141,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdcore/events.c",
                "line_number": 141,
                "column_number": -1,
                "description": "allocation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "subprojects/freeDiameter/libfdcore/events.c",
                "line_number": 141,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/freeDiameter/libfdcore/events.c",
                "line_number": 141,
                "column_number": -1,
                "description": "allocated by `malloc` here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdcore/events.c",
                "line_number": 149,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/include/freeDiameter/libfdproto.h",
                "line_number": 551,
                "column_number": -1,
                "description": "memory becomes unreachable here"
            }
        ],
        "bug_trace_length": 3,
        "bug_trace_max_depth": 1,
        "key": "events.c|fd_event_trig_regcb|MEMORY_LEAK_C",
        "node_key": "a3aee70cdd866ec20ce3b01b9f7929e4",
        "hash": "fd593dce2133506b777483cf4a9daa66",
        "bug_type_hum": "Memory Leak",
        "extras": {}
    },
    {
        "bug_type": "MEMORY_LEAK_C",
        "qualifier": "Memory dynamically allocated by `malloc` on line 69 is not freed after the last access at line 74, column 2.",
        "severity": "ERROR",
        "category": "Resource leak",
        "line": 74,
        "column": 2,
        "procedure": "fd_ext_add",
        "procedure_start_line": 59,
        "file": "subprojects/freeDiameter/libfdcore/extensions.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdcore/extensions.c",
                "line_number": 69,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdcore/extensions.c",
                "line_number": 69,
                "column_number": -1,
                "description": "allocation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "subprojects/freeDiameter/libfdcore/extensions.c",
                "line_number": 69,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/freeDiameter/libfdcore/extensions.c",
                "line_number": 69,
                "column_number": -1,
                "description": "allocated by `malloc` here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdcore/extensions.c",
                "line_number": 74,
                "column_number": 2,
                "description": "memory becomes unreachable here"
            }
        ],
        "bug_trace_length": 3,
        "bug_trace_max_depth": 1,
        "key": "extensions.c|fd_ext_add|MEMORY_LEAK_C",
        "node_key": "b0505af42fefa95ad84b38b49268fe07",
        "hash": "c8e53f4d8428f6d58644e060815f726b",
        "bug_type_hum": "Memory Leak",
        "extras": {}
    },
    {
        "bug_type": "MEMORY_LEAK_C",
        "qualifier": "Memory dynamically allocated by `malloc` on line 124 is not freed after the last access at line 134, column 4.",
        "severity": "ERROR",
        "category": "Resource leak",
        "line": 134,
        "column": 4,
        "procedure": "fd_hook_register",
        "procedure_start_line": 111,
        "file": "subprojects/freeDiameter/libfdcore/hooks.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdcore/hooks.c",
                "line_number": 124,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdcore/hooks.c",
                "line_number": 124,
                "column_number": -1,
                "description": "allocation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "subprojects/freeDiameter/libfdcore/hooks.c",
                "line_number": 124,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/freeDiameter/libfdcore/hooks.c",
                "line_number": 124,
                "column_number": -1,
                "description": "allocated by `malloc` here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdcore/hooks.c",
                "line_number": 134,
                "column_number": 4,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/include/freeDiameter/libfdproto.h",
                "line_number": 551,
                "column_number": -1,
                "description": "memory becomes unreachable here"
            }
        ],
        "bug_trace_length": 3,
        "bug_trace_max_depth": 1,
        "key": "hooks.c|fd_hook_register|MEMORY_LEAK_C",
        "node_key": "a3aee70cdd866ec20ce3b01b9f7929e4",
        "hash": "3dcb719acf0254e6dfdea0dd03583f05",
        "bug_type_hum": "Memory Leak",
        "extras": {}
    },
    {
        "bug_type": "NULLPTR_DEREFERENCE",
        "qualifier": "`ret` could be null (null value originating from line 220) and is dereferenced.",
        "severity": "ERROR",
        "category": "Null pointer dereference",
        "line": 220,
        "column": 3,
        "procedure": "get_or_create_pmd",
        "procedure_start_line": 198,
        "file": "subprojects/freeDiameter/libfdcore/hooks.c",
        "bug_trace": [
            {
                "level": 1,
                "filename": "subprojects/freeDiameter/libfdcore/hooks.c",
                "line_number": 220,
                "column_number": 3,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/freeDiameter/libfdcore/hooks.c",
                "line_number": 220,
                "column_number": -1,
                "description": "is assigned to the null pointer"
            },
            {
                "level": 1,
                "filename": "subprojects/freeDiameter/libfdcore/hooks.c",
                "line_number": 220,
                "column_number": 3,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/freeDiameter/libfdcore/hooks.c",
                "line_number": 220,
                "column_number": -1,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 1,
        "key": "hooks.c|get_or_create_pmd|NULLPTR_DEREFERENCE",
        "node_key": "170980b5b26891b6fb67002ddcc8d778",
        "hash": "af1ddb89f051400d938c1e1fddbf7bab",
        "bug_type_hum": "Null Dereference",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`buf` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 65,
        "column": 2,
        "procedure": "do_send",
        "procedure_start_line": 39,
        "file": "subprojects/freeDiameter/libfdcore/p_out.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdcore/p_out.c",
                "line_number": 39,
                "column_number": 1,
                "description": "variable `buf` declared here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdcore/p_out.c",
                "line_number": 65,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "/usr/include/pthread.h",
                "line_number": 685,
                "column_number": -1,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "p_out.c|do_send|PULSE_UNINITIALIZED_VALUE",
        "node_key": "9b9a1fd24d4f44cd17d20ee2a6a94f24",
        "hash": "c2ddb82eec884166b12b49fbc3bba885",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`sz` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 80,
        "column": 2,
        "procedure": "do_send",
        "procedure_start_line": 39,
        "file": "subprojects/freeDiameter/libfdcore/p_out.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdcore/p_out.c",
                "line_number": 39,
                "column_number": 1,
                "description": "variable `sz` declared here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdcore/p_out.c",
                "line_number": 80,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdcore/p_out.c",
                "line_number": 80,
                "column_number": -1,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "p_out.c|do_send|PULSE_UNINITIALIZED_VALUE",
        "node_key": "bb7af062e19cf620c032a99332fbea00",
        "hash": "10140b894a55170a2a87c7fa30f24ba9",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "MEMORY_LEAK_C",
        "qualifier": "Memory dynamically allocated by `malloc` on line 211 is not freed after the last access at line 217, column 2.",
        "severity": "ERROR",
        "category": "Resource leak",
        "line": 217,
        "column": 2,
        "procedure": "fd_p_sr_store",
        "procedure_start_line": 201,
        "file": "subprojects/freeDiameter/libfdcore/p_sr.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdcore/p_sr.c",
                "line_number": 211,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdcore/p_sr.c",
                "line_number": 211,
                "column_number": -1,
                "description": "allocation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "subprojects/freeDiameter/libfdcore/p_sr.c",
                "line_number": 211,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/freeDiameter/libfdcore/p_sr.c",
                "line_number": 211,
                "column_number": -1,
                "description": "allocated by `malloc` here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdcore/p_sr.c",
                "line_number": 217,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/include/freeDiameter/libfdproto.h",
                "line_number": 537,
                "column_number": -1,
                "description": "memory becomes unreachable here"
            }
        ],
        "bug_trace_length": 3,
        "bug_trace_max_depth": 1,
        "key": "p_sr.c|fd_p_sr_store|MEMORY_LEAK_C",
        "node_key": "9d9b3fe366249614a82b9f2fb906304a",
        "hash": "6fe6f34d505411a5413f3a1d42d7470d",
        "bug_type_hum": "Memory Leak",
        "extras": {}
    },
    {
        "bug_type": "MEMORY_LEAK_C",
        "qualifier": "Memory dynamically allocated by `malloc` on line 211 is not freed after the last access at line 220, column 2.",
        "severity": "ERROR",
        "category": "Resource leak",
        "line": 220,
        "column": 2,
        "procedure": "fd_p_sr_store",
        "procedure_start_line": 201,
        "file": "subprojects/freeDiameter/libfdcore/p_sr.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdcore/p_sr.c",
                "line_number": 211,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdcore/p_sr.c",
                "line_number": 211,
                "column_number": -1,
                "description": "allocation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "subprojects/freeDiameter/libfdcore/p_sr.c",
                "line_number": 211,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/freeDiameter/libfdcore/p_sr.c",
                "line_number": 211,
                "column_number": -1,
                "description": "allocated by `malloc` here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdcore/p_sr.c",
                "line_number": 220,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/include/freeDiameter/libfdproto.h",
                "line_number": 551,
                "column_number": -1,
                "description": "memory becomes unreachable here"
            }
        ],
        "bug_trace_length": 3,
        "bug_trace_max_depth": 1,
        "key": "p_sr.c|fd_p_sr_store|MEMORY_LEAK_C",
        "node_key": "9d9b3fe366249614a82b9f2fb906304a",
        "hash": "6fe6f34d505411a5413f3a1d42d7470d",
        "bug_type_hum": "Memory Leak",
        "extras": {}
    },
    {
        "bug_type": "MEMORY_LEAK_C",
        "qualifier": "Memory dynamically allocated by `malloc` on line 211 is not freed after the last access at line 237, column 6.",
        "severity": "ERROR",
        "category": "Resource leak",
        "line": 237,
        "column": 6,
        "procedure": "fd_p_sr_store",
        "procedure_start_line": 201,
        "file": "subprojects/freeDiameter/libfdcore/p_sr.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdcore/p_sr.c",
                "line_number": 211,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdcore/p_sr.c",
                "line_number": 211,
                "column_number": -1,
                "description": "allocation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "subprojects/freeDiameter/libfdcore/p_sr.c",
                "line_number": 211,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/freeDiameter/libfdcore/p_sr.c",
                "line_number": 211,
                "column_number": -1,
                "description": "allocated by `malloc` here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdcore/p_sr.c",
                "line_number": 237,
                "column_number": 6,
                "description": "memory becomes unreachable here"
            }
        ],
        "bug_trace_length": 3,
        "bug_trace_max_depth": 1,
        "key": "p_sr.c|fd_p_sr_store|MEMORY_LEAK_C",
        "node_key": "9d9b3fe366249614a82b9f2fb906304a",
        "hash": "6fe6f34d505411a5413f3a1d42d7470d",
        "bug_type_hum": "Memory Leak",
        "extras": {}
    },
    {
        "bug_type": "MEMORY_LEAK_C",
        "qualifier": "Memory dynamically allocated by `malloc` on line 659 is not freed after the last access at line 663, column 2.",
        "severity": "ERROR",
        "category": "Resource leak",
        "line": 663,
        "column": 2,
        "procedure": "fd_peer_validate_register",
        "procedure_start_line": 651,
        "file": "subprojects/freeDiameter/libfdcore/peers.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdcore/peers.c",
                "line_number": 659,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdcore/peers.c",
                "line_number": 659,
                "column_number": -1,
                "description": "allocation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "subprojects/freeDiameter/libfdcore/peers.c",
                "line_number": 659,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/freeDiameter/libfdcore/peers.c",
                "line_number": 659,
                "column_number": -1,
                "description": "allocated by `malloc` here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdcore/peers.c",
                "line_number": 663,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/include/freeDiameter/libfdproto.h",
                "line_number": 551,
                "column_number": -1,
                "description": "memory becomes unreachable here"
            }
        ],
        "bug_trace_length": 3,
        "bug_trace_max_depth": 1,
        "key": "peers.c|fd_peer_validate_register|MEMORY_LEAK_C",
        "node_key": "a3aee70cdd866ec20ce3b01b9f7929e4",
        "hash": "219ad0b5e554c41f5bf1577581c6fcfd",
        "bug_type_hum": "Memory Leak",
        "extras": {}
    },
    {
        "bug_type": "MEMORY_LEAK_C",
        "qualifier": "Memory dynamically allocated by `malloc` on line 102 is not freed after the last access at line 112, column 2.",
        "severity": "ERROR",
        "category": "Resource leak",
        "line": 112,
        "column": 2,
        "procedure": "fd_rt_fwd_register",
        "procedure_start_line": 93,
        "file": "subprojects/freeDiameter/libfdcore/routing_dispatch.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdcore/routing_dispatch.c",
                "line_number": 102,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdcore/routing_dispatch.c",
                "line_number": 102,
                "column_number": -1,
                "description": "allocation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "subprojects/freeDiameter/libfdcore/routing_dispatch.c",
                "line_number": 102,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/freeDiameter/libfdcore/routing_dispatch.c",
                "line_number": 102,
                "column_number": -1,
                "description": "allocated by `malloc` here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdcore/routing_dispatch.c",
                "line_number": 112,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/include/freeDiameter/libfdproto.h",
                "line_number": 551,
                "column_number": -1,
                "description": "memory becomes unreachable here"
            }
        ],
        "bug_trace_length": 3,
        "bug_trace_max_depth": 1,
        "key": "routing_dispatch.c|fd_rt_fwd_register|MEMORY_LEAK_C",
        "node_key": "a3aee70cdd866ec20ce3b01b9f7929e4",
        "hash": "ac5041cc43e47628fa3481bc6e5a6a7a",
        "bug_type_hum": "Memory Leak",
        "extras": {}
    },
    {
        "bug_type": "MEMORY_LEAK_C",
        "qualifier": "Memory dynamically allocated by `malloc` on line 102 is not freed after the last access at line 115, column 6.",
        "severity": "ERROR",
        "category": "Resource leak",
        "line": 115,
        "column": 6,
        "procedure": "fd_rt_fwd_register",
        "procedure_start_line": 93,
        "file": "subprojects/freeDiameter/libfdcore/routing_dispatch.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdcore/routing_dispatch.c",
                "line_number": 102,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdcore/routing_dispatch.c",
                "line_number": 102,
                "column_number": -1,
                "description": "allocation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "subprojects/freeDiameter/libfdcore/routing_dispatch.c",
                "line_number": 102,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/freeDiameter/libfdcore/routing_dispatch.c",
                "line_number": 102,
                "column_number": -1,
                "description": "allocated by `malloc` here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdcore/routing_dispatch.c",
                "line_number": 115,
                "column_number": 6,
                "description": "memory becomes unreachable here"
            }
        ],
        "bug_trace_length": 3,
        "bug_trace_max_depth": 1,
        "key": "routing_dispatch.c|fd_rt_fwd_register|MEMORY_LEAK_C",
        "node_key": "a3aee70cdd866ec20ce3b01b9f7929e4",
        "hash": "ac5041cc43e47628fa3481bc6e5a6a7a",
        "bug_type_hum": "Memory Leak",
        "extras": {}
    },
    {
        "bug_type": "MEMORY_LEAK_C",
        "qualifier": "Memory dynamically allocated by `malloc` on line 152 is not freed after the last access at line 162, column 2.",
        "severity": "ERROR",
        "category": "Resource leak",
        "line": 162,
        "column": 2,
        "procedure": "fd_rt_out_register",
        "procedure_start_line": 144,
        "file": "subprojects/freeDiameter/libfdcore/routing_dispatch.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdcore/routing_dispatch.c",
                "line_number": 152,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdcore/routing_dispatch.c",
                "line_number": 152,
                "column_number": -1,
                "description": "allocation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "subprojects/freeDiameter/libfdcore/routing_dispatch.c",
                "line_number": 152,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/freeDiameter/libfdcore/routing_dispatch.c",
                "line_number": 152,
                "column_number": -1,
                "description": "allocated by `malloc` here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdcore/routing_dispatch.c",
                "line_number": 162,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/include/freeDiameter/libfdproto.h",
                "line_number": 551,
                "column_number": -1,
                "description": "memory becomes unreachable here"
            }
        ],
        "bug_trace_length": 3,
        "bug_trace_max_depth": 1,
        "key": "routing_dispatch.c|fd_rt_out_register|MEMORY_LEAK_C",
        "node_key": "9887292b5c1a009867c5efa742707f12",
        "hash": "b9f0b316b0250658b78712b922b29cdb",
        "bug_type_hum": "Memory Leak",
        "extras": {}
    },
    {
        "bug_type": "MEMORY_LEAK_C",
        "qualifier": "Memory dynamically allocated by `malloc` on line 152 is not freed after the last access at line 165, column 6.",
        "severity": "ERROR",
        "category": "Resource leak",
        "line": 165,
        "column": 6,
        "procedure": "fd_rt_out_register",
        "procedure_start_line": 144,
        "file": "subprojects/freeDiameter/libfdcore/routing_dispatch.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdcore/routing_dispatch.c",
                "line_number": 152,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdcore/routing_dispatch.c",
                "line_number": 152,
                "column_number": -1,
                "description": "allocation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "subprojects/freeDiameter/libfdcore/routing_dispatch.c",
                "line_number": 152,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/freeDiameter/libfdcore/routing_dispatch.c",
                "line_number": 152,
                "column_number": -1,
                "description": "allocated by `malloc` here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdcore/routing_dispatch.c",
                "line_number": 165,
                "column_number": 6,
                "description": "memory becomes unreachable here"
            }
        ],
        "bug_trace_length": 3,
        "bug_trace_max_depth": 1,
        "key": "routing_dispatch.c|fd_rt_out_register|MEMORY_LEAK_C",
        "node_key": "9887292b5c1a009867c5efa742707f12",
        "hash": "b9f0b316b0250658b78712b922b29cdb",
        "bug_type_hum": "Memory Leak",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`_.application_id` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 1353,
        "column": 9,
        "procedure": "fd_disp_app_support",
        "procedure_start_line": 1339,
        "file": "subprojects/freeDiameter/libfdcore/routing_dispatch.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdcore/routing_dispatch.c",
                "line_number": 1339,
                "column_number": 1,
                "description": "struct field address `application_id` created"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdcore/routing_dispatch.c",
                "line_number": 1353,
                "column_number": 9,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "routing_dispatch.c|fd_disp_app_support|PULSE_UNINITIALIZED_VALUE",
        "node_key": "c99a666985637d7d68936d7ce58808bc",
        "hash": "fd004ed5ec2b80a097878bc6c1a50f0e",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`_.vendor_id` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 1362,
        "column": 9,
        "procedure": "fd_disp_app_support",
        "procedure_start_line": 1339,
        "file": "subprojects/freeDiameter/libfdcore/routing_dispatch.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdcore/routing_dispatch.c",
                "line_number": 1339,
                "column_number": 1,
                "description": "struct field address `vendor_id` created"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdcore/routing_dispatch.c",
                "line_number": 1362,
                "column_number": 9,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "routing_dispatch.c|fd_disp_app_support|PULSE_UNINITIALIZED_VALUE",
        "node_key": "4adfc2e3ba6e27e7c0d733a291572d5b",
        "hash": "ccb86fed3098b398b954dff1b851749a",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`strid` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 93,
        "column": 9,
        "procedure": "demuxer",
        "procedure_start_line": 66,
        "file": "subprojects/freeDiameter/libfdcore/sctp3436.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdcore/sctp3436.c",
                "line_number": 66,
                "column_number": 1,
                "description": "variable `strid` declared here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdcore/sctp3436.c",
                "line_number": 93,
                "column_number": 9,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "sctp3436.c|demuxer|PULSE_UNINITIALIZED_VALUE",
        "node_key": "1ab308e50dcf15058396c6bd386beb6d",
        "hash": "83b1063fab287dd30dd5e6465b5cf365",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`_.data` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 642,
        "column": 4,
        "procedure": "fd_sctp3436_handshake_others",
        "procedure_start_line": 593,
        "file": "subprojects/freeDiameter/libfdcore/sctp3436.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdcore/sctp3436.c",
                "line_number": 593,
                "column_number": 1,
                "description": "struct field address `data` created"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdcore/sctp3436.c",
                "line_number": 642,
                "column_number": 4,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdcore/sctp3436.c",
                "line_number": 642,
                "column_number": -1,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "sctp3436.c|fd_sctp3436_handshake_others|PULSE_UNINITIALIZED_VALUE",
        "node_key": "1cdf9f7de0920e9b2800d42cf91801f4",
        "hash": "fc5c922ca21767394ad1c2ede66b5822",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`_.size` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 642,
        "column": 4,
        "procedure": "fd_sctp3436_handshake_others",
        "procedure_start_line": 593,
        "file": "subprojects/freeDiameter/libfdcore/sctp3436.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdcore/sctp3436.c",
                "line_number": 593,
                "column_number": 1,
                "description": "struct field address `size` created"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdcore/sctp3436.c",
                "line_number": 642,
                "column_number": 4,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdcore/sctp3436.c",
                "line_number": 642,
                "column_number": -1,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "sctp3436.c|fd_sctp3436_handshake_others|PULSE_UNINITIALIZED_VALUE",
        "node_key": "1cdf9f7de0920e9b2800d42cf91801f4",
        "hash": "10af57226b6454e767f684af5a408a4a",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "MEMORY_LEAK_C",
        "qualifier": "Memory dynamically allocated by `malloc` on line 319 is not freed after the last access at line 326, column 2.",
        "severity": "ERROR",
        "category": "Resource leak",
        "line": 326,
        "column": 2,
        "procedure": "new_serv",
        "procedure_start_line": 313,
        "file": "subprojects/freeDiameter/libfdcore/server.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdcore/server.c",
                "line_number": 319,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdcore/server.c",
                "line_number": 319,
                "column_number": -1,
                "description": "allocation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "subprojects/freeDiameter/libfdcore/server.c",
                "line_number": 319,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/freeDiameter/libfdcore/server.c",
                "line_number": 319,
                "column_number": -1,
                "description": "allocated by `malloc` here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdcore/server.c",
                "line_number": 326,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/include/freeDiameter/libfdproto.h",
                "line_number": 551,
                "column_number": -1,
                "description": "memory becomes unreachable here"
            }
        ],
        "bug_trace_length": 3,
        "bug_trace_max_depth": 1,
        "key": "server.c|new_serv|MEMORY_LEAK_C",
        "node_key": "a3aee70cdd866ec20ce3b01b9f7929e4",
        "hash": "6be48c8bb68514bca46e1039fd979073",
        "bug_type_hum": "Memory Leak",
        "extras": {}
    },
    {
        "bug_type": "MEMORY_LEAK_C",
        "qualifier": "Memory dynamically allocated by `malloc` on line 319 is not freed after the last access at line 327, column 2.",
        "severity": "ERROR",
        "category": "Resource leak",
        "line": 327,
        "column": 2,
        "procedure": "new_serv",
        "procedure_start_line": 313,
        "file": "subprojects/freeDiameter/libfdcore/server.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdcore/server.c",
                "line_number": 319,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdcore/server.c",
                "line_number": 319,
                "column_number": -1,
                "description": "allocation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "subprojects/freeDiameter/libfdcore/server.c",
                "line_number": 319,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/freeDiameter/libfdcore/server.c",
                "line_number": 319,
                "column_number": -1,
                "description": "allocated by `malloc` here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdcore/server.c",
                "line_number": 327,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/include/freeDiameter/libfdproto.h",
                "line_number": 570,
                "column_number": -1,
                "description": "memory becomes unreachable here"
            }
        ],
        "bug_trace_length": 3,
        "bug_trace_max_depth": 1,
        "key": "server.c|new_serv|MEMORY_LEAK_C",
        "node_key": "a3aee70cdd866ec20ce3b01b9f7929e4",
        "hash": "6be48c8bb68514bca46e1039fd979073",
        "bug_type_hum": "Memory Leak",
        "extras": {}
    },
    {
        "bug_type": "PULSE_RESOURCE_LEAK",
        "qualifier": "File descriptor dynamically allocated by `fopen()` on line 131 is not closed after the last access at line 134, column 2.",
        "severity": "ERROR",
        "category": "Resource leak",
        "line": 134,
        "column": 2,
        "procedure": "fd_tcp_client",
        "procedure_start_line": 122,
        "file": "subprojects/freeDiameter/libfdcore/tcp.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdcore/tcp.c",
                "line_number": 131,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdcore/tcp.c",
                "line_number": 131,
                "column_number": -1,
                "description": "allocation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "subprojects/freeDiameter/libfdcore/tcp.c",
                "line_number": 131,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/freeDiameter/libfdcore/tcp.c",
                "line_number": 131,
                "column_number": -1,
                "description": "allocated by `fopen()` here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdcore/tcp.c",
                "line_number": 134,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/include/freeDiameter/libfdproto.h",
                "line_number": 551,
                "column_number": -1,
                "description": "file descriptor becomes unreachable here"
            }
        ],
        "bug_trace_length": 3,
        "bug_trace_max_depth": 1,
        "key": "tcp.c|fd_tcp_client|PULSE_RESOURCE_LEAK",
        "node_key": "0796afc6adc7f4d9cd871f8dc8f5b972",
        "hash": "3a86338caef9d06c40da665fa9fd4c6c",
        "bug_type_hum": "Resource Leak",
        "extras": {}
    },
    {
        "bug_type": "INFINITE_LOOP",
        "qualifier": "Recurring state leading to infinite execution at line 293, column 2.",
        "severity": "ERROR",
        "category": "No_category",
        "line": 293,
        "column": 2,
        "procedure": "destroy_list",
        "procedure_start_line": 288,
        "file": "subprojects/freeDiameter/libfdproto/dictionary.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/dictionary.c",
                "line_number": 293,
                "column_number": 2,
                "description": "in loop"
            }
        ],
        "bug_trace_length": 1,
        "bug_trace_max_depth": 0,
        "key": "dictionary.c|destroy_list|INFINITE_LOOP",
        "node_key": "89e1fea3672f8c1bda5df785b829cfa3",
        "hash": "635b4c7e8e2ac0312767598b8aa8e66c",
        "bug_type_hum": "Infinite Loop",
        "extras": {}
    },
    {
        "bug_type": "MEMORY_LEAK_C",
        "qualifier": "Memory dynamically allocated by `malloc` on line 2049 is not freed after the last access at line 2055, column 2.",
        "severity": "ERROR",
        "category": "Resource leak",
        "line": 2055,
        "column": 2,
        "procedure": "fd_dict_init",
        "procedure_start_line": 2037,
        "file": "subprojects/freeDiameter/libfdproto/dictionary.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/dictionary.c",
                "line_number": 2049,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/dictionary.c",
                "line_number": 2049,
                "column_number": -1,
                "description": "allocation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "subprojects/freeDiameter/libfdproto/dictionary.c",
                "line_number": 2049,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/freeDiameter/libfdproto/dictionary.c",
                "line_number": 2049,
                "column_number": -1,
                "description": "allocated by `malloc` here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/dictionary.c",
                "line_number": 2055,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/include/freeDiameter/libfdproto.h",
                "line_number": 551,
                "column_number": -1,
                "description": "memory becomes unreachable here"
            }
        ],
        "bug_trace_length": 3,
        "bug_trace_max_depth": 1,
        "key": "dictionary.c|fd_dict_init|MEMORY_LEAK_C",
        "node_key": "9887292b5c1a009867c5efa742707f12",
        "hash": "04c3d23dc4ab7e9fcb65305fbb64de97",
        "bug_type_hum": "Memory Leak",
        "extras": {}
    },
    {
        "bug_type": "MEMORY_LEAK_C",
        "qualifier": "Memory dynamically allocated by `malloc` on line 2181 is not freed after the last access at line 2191, column 2.",
        "severity": "ERROR",
        "category": "Resource leak",
        "line": 2191,
        "column": 2,
        "procedure": "fd_dict_get_vendorid_list",
        "procedure_start_line": 2169,
        "file": "subprojects/freeDiameter/libfdproto/dictionary.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/dictionary.c",
                "line_number": 2181,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/dictionary.c",
                "line_number": 2181,
                "column_number": -1,
                "description": "allocation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "subprojects/freeDiameter/libfdproto/dictionary.c",
                "line_number": 2181,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/freeDiameter/libfdproto/dictionary.c",
                "line_number": 2181,
                "column_number": -1,
                "description": "allocated by `malloc` here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/dictionary.c",
                "line_number": 2191,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/include/freeDiameter/libfdproto.h",
                "line_number": 551,
                "column_number": -1,
                "description": "memory becomes unreachable here"
            }
        ],
        "bug_trace_length": 3,
        "bug_trace_max_depth": 1,
        "key": "dictionary.c|fd_dict_get_vendorid_list|MEMORY_LEAK_C",
        "node_key": "b0505af42fefa95ad84b38b49268fe07",
        "hash": "88cb94925cbfbfdb929e46c916bd2b3d",
        "bug_type_hum": "Memory Leak",
        "extras": {}
    },
    {
        "bug_type": "MEMORY_LEAK_C",
        "qualifier": "Memory dynamically allocated by `malloc` on line 102 is not freed after the last access at line 108, column 2.",
        "severity": "ERROR",
        "category": "Resource leak",
        "line": 108,
        "column": 2,
        "procedure": "fd_fifo_new",
        "procedure_start_line": 93,
        "file": "subprojects/freeDiameter/libfdproto/fifo.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/fifo.c",
                "line_number": 102,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/fifo.c",
                "line_number": 102,
                "column_number": -1,
                "description": "allocation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "subprojects/freeDiameter/libfdproto/fifo.c",
                "line_number": 102,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/freeDiameter/libfdproto/fifo.c",
                "line_number": 102,
                "column_number": -1,
                "description": "allocated by `malloc` here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/fifo.c",
                "line_number": 108,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/include/freeDiameter/libfdproto.h",
                "line_number": 551,
                "column_number": -1,
                "description": "memory becomes unreachable here"
            }
        ],
        "bug_trace_length": 3,
        "bug_trace_max_depth": 1,
        "key": "fifo.c|fd_fifo_new|MEMORY_LEAK_C",
        "node_key": "1dc3356f6070a264d4b0808f17592b6c",
        "hash": "d15f7ead282aa6c0fd60a8f7970bdce9",
        "bug_type_hum": "Memory Leak",
        "extras": {}
    },
    {
        "bug_type": "MEMORY_LEAK_C",
        "qualifier": "Memory dynamically allocated by `malloc` on line 102 is not freed after the last access at line 109, column 2.",
        "severity": "ERROR",
        "category": "Resource leak",
        "line": 109,
        "column": 2,
        "procedure": "fd_fifo_new",
        "procedure_start_line": 93,
        "file": "subprojects/freeDiameter/libfdproto/fifo.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/fifo.c",
                "line_number": 102,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/fifo.c",
                "line_number": 102,
                "column_number": -1,
                "description": "allocation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "subprojects/freeDiameter/libfdproto/fifo.c",
                "line_number": 102,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/freeDiameter/libfdproto/fifo.c",
                "line_number": 102,
                "column_number": -1,
                "description": "allocated by `malloc` here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/fifo.c",
                "line_number": 109,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/include/freeDiameter/libfdproto.h",
                "line_number": 551,
                "column_number": -1,
                "description": "memory becomes unreachable here"
            }
        ],
        "bug_trace_length": 3,
        "bug_trace_max_depth": 1,
        "key": "fifo.c|fd_fifo_new|MEMORY_LEAK_C",
        "node_key": "1dc3356f6070a264d4b0808f17592b6c",
        "hash": "d15f7ead282aa6c0fd60a8f7970bdce9",
        "bug_type_hum": "Memory Leak",
        "extras": {}
    },
    {
        "bug_type": "MEMORY_LEAK_C",
        "qualifier": "Memory dynamically allocated by `malloc` on line 102 is not freed after the last access at line 110, column 2.",
        "severity": "ERROR",
        "category": "Resource leak",
        "line": 110,
        "column": 2,
        "procedure": "fd_fifo_new",
        "procedure_start_line": 93,
        "file": "subprojects/freeDiameter/libfdproto/fifo.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/fifo.c",
                "line_number": 102,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/fifo.c",
                "line_number": 102,
                "column_number": -1,
                "description": "allocation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "subprojects/freeDiameter/libfdproto/fifo.c",
                "line_number": 102,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/freeDiameter/libfdproto/fifo.c",
                "line_number": 102,
                "column_number": -1,
                "description": "allocated by `malloc` here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/fifo.c",
                "line_number": 110,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/include/freeDiameter/libfdproto.h",
                "line_number": 551,
                "column_number": -1,
                "description": "memory becomes unreachable here"
            }
        ],
        "bug_trace_length": 3,
        "bug_trace_max_depth": 1,
        "key": "fifo.c|fd_fifo_new|MEMORY_LEAK_C",
        "node_key": "1dc3356f6070a264d4b0808f17592b6c",
        "hash": "d15f7ead282aa6c0fd60a8f7970bdce9",
        "bug_type_hum": "Memory Leak",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`_.avp_code` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 237,
        "column": 33,
        "procedure": "fd_msg_avp_new",
        "procedure_start_line": 211,
        "file": "subprojects/freeDiameter/libfdproto/messages.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/messages.c",
                "line_number": 211,
                "column_number": 1,
                "description": "struct field address `avp_code` created"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/messages.c",
                "line_number": 237,
                "column_number": 33,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "messages.c|fd_msg_avp_new|PULSE_UNINITIALIZED_VALUE",
        "node_key": "72e94d49370130590d17277631fd9f67",
        "hash": "90a867879a69a493a23de058f1a24177",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`_.avp_flag_val` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 238,
        "column": 33,
        "procedure": "fd_msg_avp_new",
        "procedure_start_line": 211,
        "file": "subprojects/freeDiameter/libfdproto/messages.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/messages.c",
                "line_number": 211,
                "column_number": 1,
                "description": "struct field address `avp_flag_val` created"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/messages.c",
                "line_number": 238,
                "column_number": 33,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "messages.c|fd_msg_avp_new|PULSE_UNINITIALIZED_VALUE",
        "node_key": "8651d207f771092a72afd9caa2bdd336",
        "hash": "ae1556ed00e333781a5ad4816849615f",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`_.avp_basetype` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 239,
        "column": 29,
        "procedure": "fd_msg_avp_new",
        "procedure_start_line": 211,
        "file": "subprojects/freeDiameter/libfdproto/messages.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/messages.c",
                "line_number": 211,
                "column_number": 1,
                "description": "struct field address `avp_basetype` created"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/messages.c",
                "line_number": 239,
                "column_number": 29,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/messages.c",
                "line_number": 169,
                "column_number": -1,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "messages.c|fd_msg_avp_new|PULSE_UNINITIALIZED_VALUE",
        "node_key": "e569400ca44b8a5e2bc09665dc6406e6",
        "hash": "e32ff5c9e84c9bc4ba49076eb66a6deb",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`_.avp_vendor` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 240,
        "column": 33,
        "procedure": "fd_msg_avp_new",
        "procedure_start_line": 211,
        "file": "subprojects/freeDiameter/libfdproto/messages.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/messages.c",
                "line_number": 211,
                "column_number": 1,
                "description": "struct field address `avp_vendor` created"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/messages.c",
                "line_number": 240,
                "column_number": 33,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "messages.c|fd_msg_avp_new|PULSE_UNINITIALIZED_VALUE",
        "node_key": "01107ea3654057178c9b5b2457597e86",
        "hash": "3a7b6945cc5f9960f979266bc3b69f29",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`_.cmd_flag_val` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 292,
        "column": 31,
        "procedure": "fd_msg_new",
        "procedure_start_line": 261,
        "file": "subprojects/freeDiameter/libfdproto/messages.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/messages.c",
                "line_number": 261,
                "column_number": 1,
                "description": "struct field address `cmd_flag_val` created"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/messages.c",
                "line_number": 292,
                "column_number": 31,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "messages.c|fd_msg_new|PULSE_UNINITIALIZED_VALUE",
        "node_key": "72e94d49370130590d17277631fd9f67",
        "hash": "3c781370ae255fd716d51ff9e83b8969",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`_.cmd_code` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 293,
        "column": 30,
        "procedure": "fd_msg_new",
        "procedure_start_line": 261,
        "file": "subprojects/freeDiameter/libfdproto/messages.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/messages.c",
                "line_number": 261,
                "column_number": 1,
                "description": "struct field address `cmd_code` created"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/messages.c",
                "line_number": 293,
                "column_number": 30,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "messages.c|fd_msg_new|PULSE_UNINITIALIZED_VALUE",
        "node_key": "b0f265369e62e389c7f954648bf707e6",
        "hash": "4f46453f73badab95f358e53a01801e5",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`_.application_id` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 300,
        "column": 31,
        "procedure": "fd_msg_new",
        "procedure_start_line": 261,
        "file": "subprojects/freeDiameter/libfdproto/messages.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/messages.c",
                "line_number": 261,
                "column_number": 1,
                "description": "struct field address `application_id` created"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/messages.c",
                "line_number": 300,
                "column_number": 31,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "messages.c|fd_msg_new|PULSE_UNINITIALIZED_VALUE",
        "node_key": "37687c387469494f0ca379c4ef5006db",
        "hash": "03e0a649ca0be35fb75e255d890a2199",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`_.avp_code` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 617,
        "column": 43,
        "procedure": "fd_msg_search_avp",
        "procedure_start_line": 600,
        "file": "subprojects/freeDiameter/libfdproto/messages.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/messages.c",
                "line_number": 600,
                "column_number": 1,
                "description": "struct field address `avp_code` created"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/messages.c",
                "line_number": 617,
                "column_number": 43,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "messages.c|fd_msg_search_avp|PULSE_UNINITIALIZED_VALUE",
        "node_key": "9ff314c2f139843a0f006de6cd4f47d0",
        "hash": "840310a7ddd75e5b369171744bd6f81e",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`_.avp_vendor` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 618,
        "column": 43,
        "procedure": "fd_msg_search_avp",
        "procedure_start_line": 600,
        "file": "subprojects/freeDiameter/libfdproto/messages.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/messages.c",
                "line_number": 600,
                "column_number": 1,
                "description": "struct field address `avp_vendor` created"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/messages.c",
                "line_number": 618,
                "column_number": 43,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "messages.c|fd_msg_search_avp|PULSE_UNINITIALIZED_VALUE",
        "node_key": "1ab308e50dcf15058396c6bd386beb6d",
        "hash": "abebeaefa27570af60be366d5263db97",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`_.cmd_name` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 807,
        "column": 4,
        "procedure": "msg_format_treeview",
        "procedure_start_line": 786,
        "file": "subprojects/freeDiameter/libfdproto/messages.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/messages.c",
                "line_number": 786,
                "column_number": 1,
                "description": "struct field address `cmd_name` created"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/messages.c",
                "line_number": 807,
                "column_number": 4,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/messages.c",
                "line_number": 807,
                "column_number": -1,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "messages.c|msg_format_treeview|PULSE_UNINITIALIZED_VALUE",
        "node_key": "0325989e71ba80d3e6cfa3c487fa1786",
        "hash": "52b3682d83d96a9c49f04dfece3e1ac7",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`_.avp_name` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 857,
        "column": 11,
        "procedure": "avp_format_treeview",
        "procedure_start_line": 823,
        "file": "subprojects/freeDiameter/libfdproto/messages.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/messages.c",
                "line_number": 823,
                "column_number": 1,
                "description": "struct field address `avp_name` created"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/messages.c",
                "line_number": 857,
                "column_number": 11,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "messages.c|avp_format_treeview|PULSE_UNINITIALIZED_VALUE",
        "node_key": "d5e1d648221104458ac9a87db5b2d330",
        "hash": "6745e5dbb4d1baa5fd33c12348188253",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`_.cmd_name` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 947,
        "column": 3,
        "procedure": "msg_format_full",
        "procedure_start_line": 924,
        "file": "subprojects/freeDiameter/libfdproto/messages.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/messages.c",
                "line_number": 924,
                "column_number": 1,
                "description": "struct field address `cmd_name` created"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/messages.c",
                "line_number": 947,
                "column_number": 3,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/messages.c",
                "line_number": 949,
                "column_number": -1,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "messages.c|msg_format_full|PULSE_UNINITIALIZED_VALUE",
        "node_key": "cddff5de44f0c3585aac3e56ef8b6361",
        "hash": "5ffb4a0e7daec92029e4c0a335d948e1",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`_.cmd_name` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 952,
        "column": 3,
        "procedure": "msg_format_full",
        "procedure_start_line": 924,
        "file": "subprojects/freeDiameter/libfdproto/messages.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/messages.c",
                "line_number": 924,
                "column_number": 1,
                "description": "struct field address `cmd_name` created"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/messages.c",
                "line_number": 952,
                "column_number": 3,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/messages.c",
                "line_number": 954,
                "column_number": -1,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "messages.c|msg_format_full|PULSE_UNINITIALIZED_VALUE",
        "node_key": "cddff5de44f0c3585aac3e56ef8b6361",
        "hash": "5ffb4a0e7daec92029e4c0a335d948e1",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`dicttype` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 984,
        "column": 4,
        "procedure": "avp_format_full",
        "procedure_start_line": 960,
        "file": "subprojects/freeDiameter/libfdproto/messages.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/messages.c",
                "line_number": 960,
                "column_number": 1,
                "description": "variable `dicttype` declared here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/messages.c",
                "line_number": 984,
                "column_number": 4,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/messages.c",
                "line_number": 984,
                "column_number": -1,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "messages.c|avp_format_full|PULSE_UNINITIALIZED_VALUE",
        "node_key": "8424c855e5a0f0694cfd675a5ea7d731",
        "hash": "f4898a70e476bc5b930d5f76314748e4",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`_.cmd_name` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 1058,
        "column": 4,
        "procedure": "msg_format_summary",
        "procedure_start_line": 1043,
        "file": "subprojects/freeDiameter/libfdproto/messages.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/messages.c",
                "line_number": 1043,
                "column_number": 1,
                "description": "struct field address `cmd_name` created"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/messages.c",
                "line_number": 1058,
                "column_number": 4,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/messages.c",
                "line_number": 1058,
                "column_number": -1,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "messages.c|msg_format_summary|PULSE_UNINITIALIZED_VALUE",
        "node_key": "0325989e71ba80d3e6cfa3c487fa1786",
        "hash": "a136f7573b59e28dfdb73cda512a20d9",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`_.avp_name` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 1097,
        "column": 12,
        "procedure": "avp_format_summary",
        "procedure_start_line": 1067,
        "file": "subprojects/freeDiameter/libfdproto/messages.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/messages.c",
                "line_number": 1067,
                "column_number": 1,
                "description": "struct field address `avp_name` created"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/messages.c",
                "line_number": 1097,
                "column_number": 12,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "messages.c|avp_format_summary|PULSE_UNINITIALIZED_VALUE",
        "node_key": "d5e1d648221104458ac9a87db5b2d330",
        "hash": "c43449b2d1509bc57bc8e77a1fcb2fee",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`avp` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 1435,
        "column": 2,
        "procedure": "fd_msg_source_setrr",
        "procedure_start_line": 1397,
        "file": "subprojects/freeDiameter/libfdproto/messages.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/messages.c",
                "line_number": 1397,
                "column_number": 1,
                "description": "variable `avp` declared here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/messages.c",
                "line_number": 1435,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/messages.c",
                "line_number": 1435,
                "column_number": -1,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "messages.c|fd_msg_source_setrr|PULSE_UNINITIALIZED_VALUE",
        "node_key": "7c4412cf7dd4e7cdcb6d7beed4f7375b",
        "hash": "6851539782c93fd540dbf22250762bb4",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`_.avp_basetype` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 1584,
        "column": 10,
        "procedure": "fd_msg_avp_setvalue",
        "procedure_start_line": 1568,
        "file": "subprojects/freeDiameter/libfdproto/messages.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/messages.c",
                "line_number": 1568,
                "column_number": 1,
                "description": "struct field address `avp_basetype` created"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/messages.c",
                "line_number": 1584,
                "column_number": 10,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "messages.c|fd_msg_avp_setvalue|PULSE_UNINITIALIZED_VALUE",
        "node_key": "cd3012c7dbe573ae4e99216fc609b39f",
        "hash": "b1b16ac38c3cd6ffdf504a282a3f075c",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`_.avp_basetype` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 1638,
        "column": 10,
        "procedure": "fd_msg_avp_value_encode",
        "procedure_start_line": 1618,
        "file": "subprojects/freeDiameter/libfdproto/messages.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/messages.c",
                "line_number": 1618,
                "column_number": 1,
                "description": "struct field address `avp_basetype` created"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/messages.c",
                "line_number": 1638,
                "column_number": 10,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "messages.c|fd_msg_avp_value_encode|PULSE_UNINITIALIZED_VALUE",
        "node_key": "cd3012c7dbe573ae4e99216fc609b39f",
        "hash": "480398dcdae3b572d4a78844f8708b7a",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`_.avp_basetype` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 1796,
        "column": 3,
        "procedure": "bufferize_avp",
        "procedure_start_line": 1753,
        "file": "subprojects/freeDiameter/libfdproto/messages.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/messages.c",
                "line_number": 1753,
                "column_number": 1,
                "description": "struct field address `avp_basetype` created"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/messages.c",
                "line_number": 1796,
                "column_number": 3,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/messages.c",
                "line_number": 1796,
                "column_number": -1,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "messages.c|bufferize_avp|PULSE_UNINITIALIZED_VALUE",
        "node_key": "5df8374f7c1552703d94bb15c1f58ce9",
        "hash": "a41808225646a95657655e9a6b5c0553",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "MEMORY_LEAK_C",
        "qualifier": "Memory dynamically allocated by `malloc` on line 1928 is not freed after the last access at line 1974, column 3.",
        "severity": "ERROR",
        "category": "Resource leak",
        "line": 1974,
        "column": 3,
        "procedure": "parsebuf_list",
        "procedure_start_line": 1913,
        "file": "subprojects/freeDiameter/libfdproto/messages.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/messages.c",
                "line_number": 1928,
                "column_number": 3,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/messages.c",
                "line_number": 1928,
                "column_number": -1,
                "description": "allocation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "subprojects/freeDiameter/libfdproto/messages.c",
                "line_number": 1928,
                "column_number": 3,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/freeDiameter/libfdproto/messages.c",
                "line_number": 1928,
                "column_number": -1,
                "description": "allocated by `malloc` here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/messages.c",
                "line_number": 1974,
                "column_number": 3,
                "description": "memory becomes unreachable here"
            }
        ],
        "bug_trace_length": 3,
        "bug_trace_max_depth": 1,
        "key": "messages.c|parsebuf_list|MEMORY_LEAK_C",
        "node_key": "1dc3356f6070a264d4b0808f17592b6c",
        "hash": "c49a59666fa1a77092262189117b9a21",
        "bug_type_hum": "Memory Leak",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`_.avp_code` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 2066,
        "column": 36,
        "procedure": "parsedict_do_avp",
        "procedure_start_line": 2049,
        "file": "subprojects/freeDiameter/libfdproto/messages.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/messages.c",
                "line_number": 2049,
                "column_number": 1,
                "description": "struct field address `avp_code` created"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/messages.c",
                "line_number": 2066,
                "column_number": 36,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "messages.c|parsedict_do_avp|PULSE_UNINITIALIZED_VALUE",
        "node_key": "7df4c65badb3e713b57f771a60407803",
        "hash": "e76c5e64922095a027a3afe08f0f9330",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`_.cmd_code` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 2305,
        "column": 8,
        "procedure": "parsedict_do_msg",
        "procedure_start_line": 2288,
        "file": "subprojects/freeDiameter/libfdproto/messages.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/messages.c",
                "line_number": 2288,
                "column_number": 1,
                "description": "struct field address `cmd_code` created"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/messages.c",
                "line_number": 2305,
                "column_number": 8,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "messages.c|parsedict_do_msg|PULSE_UNINITIALIZED_VALUE",
        "node_key": "c5406e0f3c9757391270c67db72d3b2a",
        "hash": "13935012e4f9594a41edf8dab2833b2d",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`_.cmd_flag_val` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 2306,
        "column": 9,
        "procedure": "parsedict_do_msg",
        "procedure_start_line": 2288,
        "file": "subprojects/freeDiameter/libfdproto/messages.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/messages.c",
                "line_number": 2288,
                "column_number": 1,
                "description": "struct field address `cmd_flag_val` created"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/messages.c",
                "line_number": 2306,
                "column_number": 9,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "messages.c|parsedict_do_msg|PULSE_UNINITIALIZED_VALUE",
        "node_key": "7df4c65badb3e713b57f771a60407803",
        "hash": "5df41f9c78f2411e53dac353be4ff401",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`_.cmd_flag_mask` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 2306,
        "column": 29,
        "procedure": "parsedict_do_msg",
        "procedure_start_line": 2288,
        "file": "subprojects/freeDiameter/libfdproto/messages.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/messages.c",
                "line_number": 2288,
                "column_number": 1,
                "description": "struct field address `cmd_flag_mask` created"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/messages.c",
                "line_number": 2306,
                "column_number": 29,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "messages.c|parsedict_do_msg|PULSE_UNINITIALIZED_VALUE",
        "node_key": "7df4c65badb3e713b57f771a60407803",
        "hash": "9d62c28abdd0cc13c4bb082afd0f911d",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`_.cmd_flag_mask` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 2306,
        "column": 82,
        "procedure": "parsedict_do_msg",
        "procedure_start_line": 2288,
        "file": "subprojects/freeDiameter/libfdproto/messages.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/messages.c",
                "line_number": 2288,
                "column_number": 1,
                "description": "struct field address `cmd_flag_mask` created"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/messages.c",
                "line_number": 2306,
                "column_number": 82,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "messages.c|parsedict_do_msg|PULSE_UNINITIALIZED_VALUE",
        "node_key": "348239a3bf73dfe3482d453872aeae95",
        "hash": "9d62c28abdd0cc13c4bb082afd0f911d",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`_.avp_name` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 2483,
        "column": 15,
        "procedure": "parserules_check_one_rule",
        "procedure_start_line": 2466,
        "file": "subprojects/freeDiameter/libfdproto/messages.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/messages.c",
                "line_number": 2466,
                "column_number": 1,
                "description": "struct field address `avp_name` created"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/messages.c",
                "line_number": 2483,
                "column_number": 15,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "messages.c|parserules_check_one_rule|PULSE_UNINITIALIZED_VALUE",
        "node_key": "0eae938646da9e0593a16821d7489974",
        "hash": "310217b1d308befe82da5a009ac7d29b",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`_.avp_basetype` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 2629,
        "column": 7,
        "procedure": "parserules_do",
        "procedure_start_line": 2576,
        "file": "subprojects/freeDiameter/libfdproto/messages.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/messages.c",
                "line_number": 2576,
                "column_number": 1,
                "description": "struct field address `avp_basetype` created"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/messages.c",
                "line_number": 2629,
                "column_number": 7,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "messages.c|parserules_do|PULSE_UNINITIALIZED_VALUE",
        "node_key": "5df8374f7c1552703d94bb15c1f58ce9",
        "hash": "d1f1560f00687a783ef499b31c79fe9d",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "MEMORY_LEAK_C",
        "qualifier": "Memory dynamically allocated by `malloc` on line 132 is not freed after the last access at line 135, column 2.",
        "severity": "ERROR",
        "category": "Resource leak",
        "line": 135,
        "column": 2,
        "procedure": "fd_rtd_candidate_add",
        "procedure_start_line": 112,
        "file": "subprojects/freeDiameter/libfdproto/rt_data.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/rt_data.c",
                "line_number": 132,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/rt_data.c",
                "line_number": 132,
                "column_number": -1,
                "description": "allocation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "subprojects/freeDiameter/libfdproto/rt_data.c",
                "line_number": 132,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/freeDiameter/libfdproto/rt_data.c",
                "line_number": 132,
                "column_number": -1,
                "description": "allocated by `malloc` here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/rt_data.c",
                "line_number": 135,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/include/freeDiameter/libfdproto.h",
                "line_number": 570,
                "column_number": -1,
                "description": "memory becomes unreachable here"
            }
        ],
        "bug_trace_length": 3,
        "bug_trace_max_depth": 1,
        "key": "rt_data.c|fd_rtd_candidate_add|MEMORY_LEAK_C",
        "node_key": "1dc3356f6070a264d4b0808f17592b6c",
        "hash": "91061227148eeccd12ebe8b3ce47700d",
        "bug_type_hum": "Memory Leak",
        "extras": {}
    },
    {
        "bug_type": "MEMORY_LEAK_C",
        "qualifier": "Memory dynamically allocated by `malloc` on line 211 is not freed after the last access at line 215, column 3.",
        "severity": "ERROR",
        "category": "Resource leak",
        "line": 215,
        "column": 3,
        "procedure": "fd_rtd_error_add",
        "procedure_start_line": 187,
        "file": "subprojects/freeDiameter/libfdproto/rt_data.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/rt_data.c",
                "line_number": 211,
                "column_number": 3,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/rt_data.c",
                "line_number": 211,
                "column_number": -1,
                "description": "allocation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "subprojects/freeDiameter/libfdproto/rt_data.c",
                "line_number": 211,
                "column_number": 3,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/freeDiameter/libfdproto/rt_data.c",
                "line_number": 211,
                "column_number": -1,
                "description": "allocated by `malloc` here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/rt_data.c",
                "line_number": 215,
                "column_number": 3,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/include/freeDiameter/libfdproto.h",
                "line_number": 570,
                "column_number": -1,
                "description": "memory becomes unreachable here"
            }
        ],
        "bug_trace_length": 3,
        "bug_trace_max_depth": 1,
        "key": "rt_data.c|fd_rtd_error_add|MEMORY_LEAK_C",
        "node_key": "a3aee70cdd866ec20ce3b01b9f7929e4",
        "hash": "9c23ce677c1cad7440e70f6d31698375",
        "bug_type_hum": "Memory Leak",
        "extras": {}
    },
    {
        "bug_type": "MEMORY_LEAK_C",
        "qualifier": "Memory dynamically allocated by `malloc` on line 147 is not freed after the last access at line 157, column 2.",
        "severity": "ERROR",
        "category": "Resource leak",
        "line": 157,
        "column": 2,
        "procedure": "new_session",
        "procedure_start_line": 140,
        "file": "subprojects/freeDiameter/libfdproto/sessions.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/sessions.c",
                "line_number": 147,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/sessions.c",
                "line_number": 147,
                "column_number": -1,
                "description": "allocation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "subprojects/freeDiameter/libfdproto/sessions.c",
                "line_number": 147,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/freeDiameter/libfdproto/sessions.c",
                "line_number": 147,
                "column_number": -1,
                "description": "allocated by `malloc` here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/sessions.c",
                "line_number": 157,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/include/freeDiameter/libfdproto.h",
                "line_number": 537,
                "column_number": -1,
                "description": "memory becomes unreachable here"
            }
        ],
        "bug_trace_length": 3,
        "bug_trace_max_depth": 1,
        "key": "sessions.c|new_session|MEMORY_LEAK_C",
        "node_key": "a3aee70cdd866ec20ce3b01b9f7929e4",
        "hash": "9c3b9204d46f42886075acc8dd880c85",
        "bug_type_hum": "Memory Leak",
        "extras": {}
    },
    {
        "bug_type": "MEMORY_LEAK_C",
        "qualifier": "Memory dynamically allocated by `malloc` on line 147 is not freed after the last access at line 161, column 2.",
        "severity": "ERROR",
        "category": "Resource leak",
        "line": 161,
        "column": 2,
        "procedure": "new_session",
        "procedure_start_line": 140,
        "file": "subprojects/freeDiameter/libfdproto/sessions.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/sessions.c",
                "line_number": 147,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/sessions.c",
                "line_number": 147,
                "column_number": -1,
                "description": "allocation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "subprojects/freeDiameter/libfdproto/sessions.c",
                "line_number": 147,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/freeDiameter/libfdproto/sessions.c",
                "line_number": 147,
                "column_number": -1,
                "description": "allocated by `malloc` here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/sessions.c",
                "line_number": 161,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/include/freeDiameter/libfdproto.h",
                "line_number": 551,
                "column_number": -1,
                "description": "memory becomes unreachable here"
            }
        ],
        "bug_trace_length": 3,
        "bug_trace_max_depth": 1,
        "key": "sessions.c|new_session|MEMORY_LEAK_C",
        "node_key": "a3aee70cdd866ec20ce3b01b9f7929e4",
        "hash": "9c3b9204d46f42886075acc8dd880c85",
        "bug_type_hum": "Memory Leak",
        "extras": {}
    },
    {
        "bug_type": "MEMORY_LEAK_C",
        "qualifier": "Memory dynamically allocated by `malloc` on line 298 is not freed after the last access at line 301, column 2.",
        "severity": "ERROR",
        "category": "Resource leak",
        "line": 301,
        "column": 2,
        "procedure": "fd_sess_handler_create",
        "procedure_start_line": 290,
        "file": "subprojects/freeDiameter/libfdproto/sessions.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/sessions.c",
                "line_number": 298,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/sessions.c",
                "line_number": 298,
                "column_number": -1,
                "description": "allocation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "subprojects/freeDiameter/libfdproto/sessions.c",
                "line_number": 298,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/freeDiameter/libfdproto/sessions.c",
                "line_number": 298,
                "column_number": -1,
                "description": "allocated by `malloc` here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/sessions.c",
                "line_number": 301,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/include/freeDiameter/libfdproto.h",
                "line_number": 551,
                "column_number": -1,
                "description": "memory becomes unreachable here"
            }
        ],
        "bug_trace_length": 3,
        "bug_trace_max_depth": 1,
        "key": "sessions.c|fd_sess_handler_create|MEMORY_LEAK_C",
        "node_key": "a3aee70cdd866ec20ce3b01b9f7929e4",
        "hash": "2a9245d965a151a856c6d8412922a0fa",
        "bug_type_hum": "Memory Leak",
        "extras": {}
    },
    {
        "bug_type": "MEMORY_LEAK_C",
        "qualifier": "Memory dynamically allocated by `malloc` on line 298 is not freed after the last access at line 303, column 2.",
        "severity": "ERROR",
        "category": "Resource leak",
        "line": 303,
        "column": 2,
        "procedure": "fd_sess_handler_create",
        "procedure_start_line": 290,
        "file": "subprojects/freeDiameter/libfdproto/sessions.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/sessions.c",
                "line_number": 298,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/sessions.c",
                "line_number": 298,
                "column_number": -1,
                "description": "allocation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "subprojects/freeDiameter/libfdproto/sessions.c",
                "line_number": 298,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/freeDiameter/libfdproto/sessions.c",
                "line_number": 298,
                "column_number": -1,
                "description": "allocated by `malloc` here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/sessions.c",
                "line_number": 303,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/include/freeDiameter/libfdproto.h",
                "line_number": 551,
                "column_number": -1,
                "description": "memory becomes unreachable here"
            }
        ],
        "bug_trace_length": 3,
        "bug_trace_max_depth": 1,
        "key": "sessions.c|fd_sess_handler_create|MEMORY_LEAK_C",
        "node_key": "a3aee70cdd866ec20ce3b01b9f7929e4",
        "hash": "2a9245d965a151a856c6d8412922a0fa",
        "bug_type_hum": "Memory Leak",
        "extras": {}
    },
    {
        "bug_type": "MEMORY_LEAK_C",
        "qualifier": "Memory dynamically allocated by `malloc` on line 425 is not freed after the last access at line 427, column 3.",
        "severity": "ERROR",
        "category": "Resource leak",
        "line": 427,
        "column": 3,
        "procedure": "fd_sess_new",
        "procedure_start_line": 379,
        "file": "subprojects/freeDiameter/libfdproto/sessions.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/sessions.c",
                "line_number": 425,
                "column_number": 3,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/sessions.c",
                "line_number": 425,
                "column_number": -1,
                "description": "allocation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "subprojects/freeDiameter/libfdproto/sessions.c",
                "line_number": 425,
                "column_number": 3,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/freeDiameter/libfdproto/sessions.c",
                "line_number": 425,
                "column_number": -1,
                "description": "allocated by `malloc` here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/sessions.c",
                "line_number": 427,
                "column_number": 3,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/include/freeDiameter/libfdproto.h",
                "line_number": 551,
                "column_number": -1,
                "description": "memory becomes unreachable here"
            }
        ],
        "bug_trace_length": 3,
        "bug_trace_max_depth": 1,
        "key": "sessions.c|fd_sess_new|MEMORY_LEAK_C",
        "node_key": "ba5f7f319302b35e9f6c1adac7275fed",
        "hash": "07c80dacf6472ebaf33d33728219c1eb",
        "bug_type_hum": "Memory Leak",
        "extras": {}
    },
    {
        "bug_type": "MEMORY_LEAK_C",
        "qualifier": "Memory dynamically allocated by `malloc` on line 425 is not freed after the last access at line 432, column 3.",
        "severity": "ERROR",
        "category": "Resource leak",
        "line": 432,
        "column": 3,
        "procedure": "fd_sess_new",
        "procedure_start_line": 379,
        "file": "subprojects/freeDiameter/libfdproto/sessions.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/sessions.c",
                "line_number": 425,
                "column_number": 3,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/sessions.c",
                "line_number": 425,
                "column_number": -1,
                "description": "allocation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "subprojects/freeDiameter/libfdproto/sessions.c",
                "line_number": 425,
                "column_number": 3,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/freeDiameter/libfdproto/sessions.c",
                "line_number": 425,
                "column_number": -1,
                "description": "allocated by `malloc` here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/sessions.c",
                "line_number": 432,
                "column_number": 3,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/include/freeDiameter/libfdproto.h",
                "line_number": 551,
                "column_number": -1,
                "description": "memory becomes unreachable here"
            }
        ],
        "bug_trace_length": 3,
        "bug_trace_max_depth": 1,
        "key": "sessions.c|fd_sess_new|MEMORY_LEAK_C",
        "node_key": "ba5f7f319302b35e9f6c1adac7275fed",
        "hash": "07c80dacf6472ebaf33d33728219c1eb",
        "bug_type_hum": "Memory Leak",
        "extras": {}
    },
    {
        "bug_type": "MEMORY_LEAK_C",
        "qualifier": "Memory dynamically allocated by `malloc` on line 425 is not freed after the last access at line 445, column 2.",
        "severity": "ERROR",
        "category": "Resource leak",
        "line": 445,
        "column": 2,
        "procedure": "fd_sess_new",
        "procedure_start_line": 379,
        "file": "subprojects/freeDiameter/libfdproto/sessions.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/sessions.c",
                "line_number": 425,
                "column_number": 3,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/sessions.c",
                "line_number": 425,
                "column_number": -1,
                "description": "allocation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "subprojects/freeDiameter/libfdproto/sessions.c",
                "line_number": 425,
                "column_number": 3,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/freeDiameter/libfdproto/sessions.c",
                "line_number": 425,
                "column_number": -1,
                "description": "allocated by `malloc` here"
            },
            {
                "level": 0,
                "filename": "subprojects/freeDiameter/libfdproto/sessions.c",
                "line_number": 445,
                "column_number": 2,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "/usr/include/pthread.h",
                "line_number": 691,
                "column_number": -1,
                "description": "memory becomes unreachable here"
            }
        ],
        "bug_trace_length": 3,
        "bug_trace_max_depth": 1,
        "key": "sessions.c|fd_sess_new|MEMORY_LEAK_C",
        "node_key": "c2fe86be2c9f208cb0f5b5dd0f419012",
        "hash": "07c80dacf6472ebaf33d33728219c1eb",
        "bug_type_hum": "Memory Leak",
        "extras": {}
    },
    {
        "bug_type": "NULLPTR_DEREFERENCE",
        "qualifier": "`self` could be null (null value originating from line 43) and is dereferenced.",
        "severity": "ERROR",
        "category": "Null pointer dereference",
        "line": 44,
        "column": 3,
        "procedure": "prom_collector_new",
        "procedure_start_line": 41,
        "file": "subprojects/prometheus-client-c/prom/src/prom_collector.c",
        "bug_trace": [
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_collector.c",
                "line_number": 43,
                "column_number": 48,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "in call to `malloc (null case)` (modelled)"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_collector.c",
                "line_number": 43,
                "column_number": 48,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "is assigned to the null pointer"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_collector.c",
                "line_number": 43,
                "column_number": 3,
                "description": "assigned"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_collector.c",
                "line_number": 44,
                "column_number": 3,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 4,
        "bug_trace_max_depth": 1,
        "key": "prom_collector.c|prom_collector_new|NULLPTR_DEREFERENCE",
        "node_key": "8a9f5751b7479d20042eb26d05a9a3e4",
        "hash": "75294dcd3dcb667214bae16870ce5987",
        "bug_type_hum": "Null Dereference",
        "extras": {}
    },
    {
        "bug_type": "NULLPTR_DEREFERENCE",
        "qualifier": "`self` could be null (null value originating from line 44) and is dereferenced.",
        "severity": "ERROR",
        "category": "Null pointer dereference",
        "line": 46,
        "column": 3,
        "procedure": "prom_collector_registry_new",
        "procedure_start_line": 41,
        "file": "subprojects/prometheus-client-c/prom/src/prom_collector_registry.c",
        "bug_trace": [
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_collector_registry.c",
                "line_number": 44,
                "column_number": 66,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "in call to `malloc (null case)` (modelled)"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_collector_registry.c",
                "line_number": 44,
                "column_number": 66,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "is assigned to the null pointer"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_collector_registry.c",
                "line_number": 44,
                "column_number": 3,
                "description": "assigned"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_collector_registry.c",
                "line_number": 46,
                "column_number": 3,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 4,
        "bug_trace_max_depth": 1,
        "key": "prom_collector_registry.c|prom_collector_registry_new|NULLPTR_DEREFERENCE",
        "node_key": "b6d58810227562dafd5c1d0d95265845",
        "hash": "0671c7d3f64672173ca0cd8cd0ec8a7f",
        "bug_type_hum": "Null Dereference",
        "extras": {}
    },
    {
        "bug_type": "NULLPTR_DEREFERENCE",
        "qualifier": "The call to `prom_map_set` in turn calls `prom_map_ensure_space` and may trigger the following issue: null (from the call to `prom_map_set()` on line 51) is dereferenced in the call to `prom_map_set()`.",
        "severity": "ERROR",
        "category": "Null pointer dereference",
        "line": 51,
        "column": 3,
        "procedure": "prom_collector_registry_new",
        "procedure_start_line": 41,
        "file": "subprojects/prometheus-client-c/prom/src/prom_collector_registry.c",
        "bug_trace": [
            {
                "level": 3,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_collector_registry.c",
                "line_number": 51,
                "column_number": 3,
                "description": "when calling `prom_map_set` here"
            },
            {
                "level": 4,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_map.c",
                "line_number": 331,
                "column_number": 7,
                "description": "when calling `prom_map_ensure_space` here"
            },
            {
                "level": 5,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_map.c",
                "line_number": 288,
                "column_number": 11,
                "description": "is assigned to the null pointer"
            },
            {
                "level": 5,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_map.c",
                "line_number": 288,
                "column_number": 11,
                "description": "when calling `prom_map_set_internal` here"
            },
            {
                "level": 6,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_map.c",
                "line_number": 219,
                "column_number": 1,
                "description": "parameter `addrs` of prom_map_set_internal"
            },
            {
                "level": 6,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_map.c",
                "line_number": 226,
                "column_number": 3,
                "description": "assigned"
            },
            {
                "level": 6,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_map.c",
                "line_number": 227,
                "column_number": 8,
                "description": "assigned"
            },
            {
                "level": 6,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_map.c",
                "line_number": 228,
                "column_number": 5,
                "description": "assigned"
            },
            {
                "level": 6,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_map.c",
                "line_number": 229,
                "column_number": 41,
                "description": "when calling `prom_linked_list_compare` here"
            },
            {
                "level": 7,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_linked_list.c",
                "line_number": 192,
                "column_number": 1,
                "description": "parameter `item_a` of prom_linked_list_compare"
            },
            {
                "level": 7,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_linked_list.c",
                "line_number": 198,
                "column_number": 12,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 11,
        "bug_trace_max_depth": 7,
        "key": "prom_collector_registry.c|prom_collector_registry_new|NULLPTR_DEREFERENCE",
        "node_key": "b95f2be690887656bb9d2e82929de056",
        "hash": "3bb8b2a1b8051b76facd3592b59d438c",
        "bug_type_hum": "Null Dereference",
        "extras": {}
    },
    {
        "bug_type": "NULLPTR_DEREFERENCE",
        "qualifier": "`prom_map_set_free_value_fn()` could be null (from the call to `prom_map_set()` on line 51) and is dereferenced in the call to `prom_map_set()`.",
        "severity": "ERROR",
        "category": "Null pointer dereference",
        "line": 51,
        "column": 3,
        "procedure": "prom_collector_registry_new",
        "procedure_start_line": 41,
        "file": "subprojects/prometheus-client-c/prom/src/prom_collector_registry.c",
        "bug_trace": [
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_collector_registry.c",
                "line_number": 49,
                "column_number": 22,
                "description": "in call to function `prom_map_new` with no summary"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_collector_registry.c",
                "line_number": 49,
                "column_number": 3,
                "description": "assigned"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_collector_registry.c",
                "line_number": 51,
                "column_number": 3,
                "description": "when calling `prom_map_set` here"
            },
            {
                "level": 2,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_map.c",
                "line_number": 322,
                "column_number": 1,
                "description": "parameter `self` of prom_map_set"
            },
            {
                "level": 2,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_map.c",
                "line_number": 331,
                "column_number": 7,
                "description": "in call to `prom_map_ensure_space`"
            },
            {
                "level": 3,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_map.c",
                "line_number": 269,
                "column_number": 36,
                "description": "macro expanded here"
            },
            {
                "level": 3,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "in call to `malloc (null case)` (modelled)"
            },
            {
                "level": 3,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_map.c",
                "line_number": 269,
                "column_number": 36,
                "description": "macro expanded here"
            },
            {
                "level": 3,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "is assigned to the null pointer"
            },
            {
                "level": 3,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_map.c",
                "line_number": 269,
                "column_number": 3,
                "description": "assigned"
            },
            {
                "level": 3,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_map.c",
                "line_number": 317,
                "column_number": 3,
                "description": "assigned"
            },
            {
                "level": 2,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_map.c",
                "line_number": 331,
                "column_number": 7,
                "description": "return from call to `prom_map_ensure_space`"
            },
            {
                "level": 2,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_map.c",
                "line_number": 342,
                "column_number": 7,
                "description": "when calling `prom_map_set_internal` here"
            },
            {
                "level": 3,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_map.c",
                "line_number": 219,
                "column_number": 1,
                "description": "parameter `addrs` of prom_map_set_internal"
            },
            {
                "level": 3,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_map.c",
                "line_number": 226,
                "column_number": 30,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 13,
        "bug_trace_max_depth": 3,
        "key": "prom_collector_registry.c|prom_collector_registry_new|NULLPTR_DEREFERENCE",
        "node_key": "b95f2be690887656bb9d2e82929de056",
        "hash": "4622fc72e7fd9e2a602c2456bc3134b1",
        "bug_type_hum": "Null Dereference",
        "extras": {}
    },
    {
        "bug_type": "NULLPTR_DEREFERENCE",
        "qualifier": "`self` could be null (null value originating from line 31) and is dereferenced.",
        "severity": "ERROR",
        "category": "Null pointer dereference",
        "line": 32,
        "column": 3,
        "procedure": "prom_histogram_buckets_new",
        "procedure_start_line": 30,
        "file": "subprojects/prometheus-client-c/prom/src/prom_histogram_buckets.c",
        "bug_trace": [
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_histogram_buckets.c",
                "line_number": 31,
                "column_number": 64,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "in call to `malloc (null case)` (modelled)"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_histogram_buckets.c",
                "line_number": 31,
                "column_number": 64,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "is assigned to the null pointer"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_histogram_buckets.c",
                "line_number": 31,
                "column_number": 3,
                "description": "assigned"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_histogram_buckets.c",
                "line_number": 32,
                "column_number": 3,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 4,
        "bug_trace_max_depth": 1,
        "key": "prom_histogram_buckets.c|prom_histogram_buckets_new|NULLPTR_DEREFERENCE",
        "node_key": "bf7301783f67616e19012d9536451efa",
        "hash": "8c2808dd8f326a602afe06fff0810453",
        "bug_type_hum": "Null Dereference",
        "extras": {}
    },
    {
        "bug_type": "NULLPTR_DEREFERENCE",
        "qualifier": "`upper_bounds` could be null (null value originating from line 33) and is dereferenced.",
        "severity": "ERROR",
        "category": "Null pointer dereference",
        "line": 34,
        "column": 3,
        "procedure": "prom_histogram_buckets_new",
        "procedure_start_line": 30,
        "file": "subprojects/prometheus-client-c/prom/src/prom_histogram_buckets.c",
        "bug_trace": [
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_histogram_buckets.c",
                "line_number": 33,
                "column_number": 36,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "in call to `malloc (null case)` (modelled)"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_histogram_buckets.c",
                "line_number": 33,
                "column_number": 36,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "is assigned to the null pointer"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_histogram_buckets.c",
                "line_number": 33,
                "column_number": 3,
                "description": "assigned"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_histogram_buckets.c",
                "line_number": 34,
                "column_number": 3,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 4,
        "bug_trace_max_depth": 1,
        "key": "prom_histogram_buckets.c|prom_histogram_buckets_new|NULLPTR_DEREFERENCE",
        "node_key": "b018c868c7f414d92c31dc276db2596b",
        "hash": "86d66aba9eb1b944152673bfb0d9e937",
        "bug_type_hum": "Null Dereference",
        "extras": {}
    },
    {
        "bug_type": "NULLPTR_DEREFERENCE",
        "qualifier": "`upper_bounds` could be null (null value originating from line 54) and is dereferenced.",
        "severity": "ERROR",
        "category": "Null pointer dereference",
        "line": 55,
        "column": 3,
        "procedure": "prom_histogram_buckets_linear",
        "procedure_start_line": 49,
        "file": "subprojects/prometheus-client-c/prom/src/prom_histogram_buckets.c",
        "bug_trace": [
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_histogram_buckets.c",
                "line_number": 54,
                "column_number": 36,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "in call to `malloc (null case)` (modelled)"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_histogram_buckets.c",
                "line_number": 54,
                "column_number": 36,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "is assigned to the null pointer"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_histogram_buckets.c",
                "line_number": 54,
                "column_number": 3,
                "description": "assigned"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_histogram_buckets.c",
                "line_number": 55,
                "column_number": 3,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 4,
        "bug_trace_max_depth": 1,
        "key": "prom_histogram_buckets.c|prom_histogram_buckets_linear|NULLPTR_DEREFERENCE",
        "node_key": "d28af2cb505833424e7397a0d3df4a89",
        "hash": "374da9080299e4c241127f32085201fd",
        "bug_type_hum": "Null Dereference",
        "extras": {}
    },
    {
        "bug_type": "NULLPTR_DEREFERENCE",
        "qualifier": "`self` could be null (null value originating from line 52) and is dereferenced.",
        "severity": "ERROR",
        "category": "Null pointer dereference",
        "line": 59,
        "column": 3,
        "procedure": "prom_histogram_buckets_linear",
        "procedure_start_line": 49,
        "file": "subprojects/prometheus-client-c/prom/src/prom_histogram_buckets.c",
        "bug_trace": [
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_histogram_buckets.c",
                "line_number": 52,
                "column_number": 64,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "in call to `malloc (null case)` (modelled)"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_histogram_buckets.c",
                "line_number": 52,
                "column_number": 64,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "is assigned to the null pointer"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_histogram_buckets.c",
                "line_number": 52,
                "column_number": 3,
                "description": "assigned"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_histogram_buckets.c",
                "line_number": 59,
                "column_number": 3,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 4,
        "bug_trace_max_depth": 1,
        "key": "prom_histogram_buckets.c|prom_histogram_buckets_linear|NULLPTR_DEREFERENCE",
        "node_key": "11ad868c78cb5ac7cfebc2a6732d7ff2",
        "hash": "9e72fc58bd99a57c457c5597c7de0d9b",
        "bug_type_hum": "Null Dereference",
        "extras": {}
    },
    {
        "bug_type": "NULLPTR_DEREFERENCE",
        "qualifier": "`upper_bounds` could be null (null value originating from line 80) and is dereferenced.",
        "severity": "ERROR",
        "category": "Null pointer dereference",
        "line": 81,
        "column": 3,
        "procedure": "prom_histogram_buckets_exponential",
        "procedure_start_line": 64,
        "file": "subprojects/prometheus-client-c/prom/src/prom_histogram_buckets.c",
        "bug_trace": [
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_histogram_buckets.c",
                "line_number": 80,
                "column_number": 36,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "in call to `malloc (null case)` (modelled)"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_histogram_buckets.c",
                "line_number": 80,
                "column_number": 36,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "is assigned to the null pointer"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_histogram_buckets.c",
                "line_number": 80,
                "column_number": 3,
                "description": "assigned"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_histogram_buckets.c",
                "line_number": 81,
                "column_number": 3,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 4,
        "bug_trace_max_depth": 1,
        "key": "prom_histogram_buckets.c|prom_histogram_buckets_exponential|NULLPTR_DEREFERENCE",
        "node_key": "d28af2cb505833424e7397a0d3df4a89",
        "hash": "53e41d4b0137dd2e2dc9162cd8a76914",
        "bug_type_hum": "Null Dereference",
        "extras": {}
    },
    {
        "bug_type": "NULLPTR_DEREFERENCE",
        "qualifier": "`self` could be null (null value originating from line 78) and is dereferenced.",
        "severity": "ERROR",
        "category": "Null pointer dereference",
        "line": 85,
        "column": 3,
        "procedure": "prom_histogram_buckets_exponential",
        "procedure_start_line": 64,
        "file": "subprojects/prometheus-client-c/prom/src/prom_histogram_buckets.c",
        "bug_trace": [
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_histogram_buckets.c",
                "line_number": 78,
                "column_number": 64,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "in call to `malloc (null case)` (modelled)"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_histogram_buckets.c",
                "line_number": 78,
                "column_number": 64,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "is assigned to the null pointer"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_histogram_buckets.c",
                "line_number": 78,
                "column_number": 3,
                "description": "assigned"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_histogram_buckets.c",
                "line_number": 85,
                "column_number": 3,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 4,
        "bug_trace_max_depth": 1,
        "key": "prom_histogram_buckets.c|prom_histogram_buckets_exponential|NULLPTR_DEREFERENCE",
        "node_key": "11ad868c78cb5ac7cfebc2a6732d7ff2",
        "hash": "2307b4d9f53e5e1976b3ffaf109c7fb8",
        "bug_type_hum": "Null Dereference",
        "extras": {}
    },
    {
        "bug_type": "NULLPTR_DEREFERENCE",
        "qualifier": "`self` could be null (null value originating from line 27) and is dereferenced.",
        "severity": "ERROR",
        "category": "Null pointer dereference",
        "line": 28,
        "column": 3,
        "procedure": "prom_linked_list_new",
        "procedure_start_line": 26,
        "file": "subprojects/prometheus-client-c/prom/src/prom_linked_list.c",
        "bug_trace": [
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_linked_list.c",
                "line_number": 27,
                "column_number": 52,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "in call to `malloc (null case)` (modelled)"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_linked_list.c",
                "line_number": 27,
                "column_number": 52,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "is assigned to the null pointer"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_linked_list.c",
                "line_number": 27,
                "column_number": 3,
                "description": "assigned"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_linked_list.c",
                "line_number": 28,
                "column_number": 3,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 4,
        "bug_trace_max_depth": 1,
        "key": "prom_linked_list.c|prom_linked_list_new|NULLPTR_DEREFERENCE",
        "node_key": "e60f97be9305272ddb99efdb3dd3f4c0",
        "hash": "5abe018fbd915b5dc03b74d9013a36fc",
        "bug_type_hum": "Null Dereference",
        "extras": {}
    },
    {
        "bug_type": "NULLPTR_DEREFERENCE",
        "qualifier": "`node` could be null (null value originating from line 92) and is dereferenced.",
        "severity": "ERROR",
        "category": "Null pointer dereference",
        "line": 94,
        "column": 3,
        "procedure": "prom_linked_list_append",
        "procedure_start_line": 89,
        "file": "subprojects/prometheus-client-c/prom/src/prom_linked_list.c",
        "bug_trace": [
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_linked_list.c",
                "line_number": 92,
                "column_number": 62,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "in call to `malloc (null case)` (modelled)"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_linked_list.c",
                "line_number": 92,
                "column_number": 62,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "is assigned to the null pointer"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_linked_list.c",
                "line_number": 92,
                "column_number": 3,
                "description": "assigned"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_linked_list.c",
                "line_number": 94,
                "column_number": 3,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 4,
        "bug_trace_max_depth": 1,
        "key": "prom_linked_list.c|prom_linked_list_append|NULLPTR_DEREFERENCE",
        "node_key": "9517c8be277afd7fbc308bec61fed2ba",
        "hash": "688b3e22382b55259934a134365e1669",
        "bug_type_hum": "Null Dereference",
        "extras": {}
    },
    {
        "bug_type": "NULLPTR_DEREFERENCE",
        "qualifier": "`node` could be null (null value originating from line 109) and is dereferenced.",
        "severity": "ERROR",
        "category": "Null pointer dereference",
        "line": 111,
        "column": 3,
        "procedure": "prom_linked_list_push",
        "procedure_start_line": 106,
        "file": "subprojects/prometheus-client-c/prom/src/prom_linked_list.c",
        "bug_trace": [
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_linked_list.c",
                "line_number": 109,
                "column_number": 62,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "in call to `malloc (null case)` (modelled)"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_linked_list.c",
                "line_number": 109,
                "column_number": 62,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "is assigned to the null pointer"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_linked_list.c",
                "line_number": 109,
                "column_number": 3,
                "description": "assigned"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_linked_list.c",
                "line_number": 111,
                "column_number": 3,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 4,
        "bug_trace_max_depth": 1,
        "key": "prom_linked_list.c|prom_linked_list_push|NULLPTR_DEREFERENCE",
        "node_key": "381d0e5c32ec882770b32fb79e2b1c98",
        "hash": "fa67684ffa890e92b7f8588f3b881aaa",
        "bug_type_hum": "Null Dereference",
        "extras": {}
    },
    {
        "bug_type": "NULLPTR_DEREFERENCE",
        "qualifier": "`self` could be null (null value originating from line 41) and is dereferenced.",
        "severity": "ERROR",
        "category": "Null pointer dereference",
        "line": 42,
        "column": 3,
        "procedure": "prom_map_node_new",
        "procedure_start_line": 40,
        "file": "subprojects/prometheus-client-c/prom/src/prom_map.c",
        "bug_trace": [
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_map.c",
                "line_number": 41,
                "column_number": 27,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "in call to `malloc (null case)` (modelled)"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_map.c",
                "line_number": 41,
                "column_number": 27,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "is assigned to the null pointer"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_map.c",
                "line_number": 41,
                "column_number": 3,
                "description": "assigned"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_map.c",
                "line_number": 42,
                "column_number": 3,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 4,
        "bug_trace_max_depth": 1,
        "key": "prom_map.c|prom_map_node_new|NULLPTR_DEREFERENCE",
        "node_key": "957c4078fa38106bd7aaa35e13d17932",
        "hash": "45804a77b48c6a0068562f547157af7e",
        "bug_type_hum": "Null Dereference",
        "extras": {}
    },
    {
        "bug_type": "NULLPTR_DEREFERENCE",
        "qualifier": "`self` could be null (null value originating from line 79) and is dereferenced.",
        "severity": "ERROR",
        "category": "Null pointer dereference",
        "line": 80,
        "column": 3,
        "procedure": "prom_map_new",
        "procedure_start_line": 76,
        "file": "subprojects/prometheus-client-c/prom/src/prom_map.c",
        "bug_trace": [
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_map.c",
                "line_number": 79,
                "column_number": 36,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "in call to `malloc (null case)` (modelled)"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_map.c",
                "line_number": 79,
                "column_number": 36,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "is assigned to the null pointer"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_map.c",
                "line_number": 79,
                "column_number": 3,
                "description": "assigned"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_map.c",
                "line_number": 80,
                "column_number": 3,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 4,
        "bug_trace_max_depth": 1,
        "key": "prom_map.c|prom_map_new|NULLPTR_DEREFERENCE",
        "node_key": "e60f97be9305272ddb99efdb3dd3f4c0",
        "hash": "3f9961079d8c81e59d52c6ad418eaa15",
        "bug_type_hum": "Null Dereference",
        "extras": {}
    },
    {
        "bug_type": "NULLPTR_DEREFERENCE",
        "qualifier": "`i` could be null (null value originating from line 94) and is dereferenced.",
        "severity": "ERROR",
        "category": "Null pointer dereference",
        "line": 98,
        "column": 5,
        "procedure": "prom_map_new",
        "procedure_start_line": 76,
        "file": "subprojects/prometheus-client-c/prom/src/prom_map.c",
        "bug_trace": [
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_map.c",
                "line_number": 94,
                "column_number": 17,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "in call to `malloc (null case)` (modelled)"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_map.c",
                "line_number": 94,
                "column_number": 17,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "is assigned to the null pointer"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_map.c",
                "line_number": 94,
                "column_number": 3,
                "description": "assigned"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_map.c",
                "line_number": 98,
                "column_number": 5,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 4,
        "bug_trace_max_depth": 1,
        "key": "prom_map.c|prom_map_new|NULLPTR_DEREFERENCE",
        "node_key": "84b3f2f4f1fcdbc6245c399ebf6e1143",
        "hash": "77fc1d1344e5d22ce7eafe6b46827793",
        "bug_type_hum": "Null Dereference",
        "extras": {}
    },
    {
        "bug_type": "NULLPTR_DEREFERENCE",
        "qualifier": "`i` could be null (null value originating from line 269) and is dereferenced.",
        "severity": "ERROR",
        "category": "Null pointer dereference",
        "line": 273,
        "column": 5,
        "procedure": "prom_map_ensure_space",
        "procedure_start_line": 249,
        "file": "subprojects/prometheus-client-c/prom/src/prom_map.c",
        "bug_trace": [
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_map.c",
                "line_number": 269,
                "column_number": 36,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "in call to `malloc (null case)` (modelled)"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_map.c",
                "line_number": 269,
                "column_number": 36,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "is assigned to the null pointer"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_map.c",
                "line_number": 269,
                "column_number": 3,
                "description": "assigned"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_map.c",
                "line_number": 273,
                "column_number": 5,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 4,
        "bug_trace_max_depth": 1,
        "key": "prom_map.c|prom_map_ensure_space|NULLPTR_DEREFERENCE",
        "node_key": "4ef3930b62e9d501fcfa07fbf0da3258",
        "hash": "8fdc9e8d4da63ff6880056772f06d1e2",
        "bug_type_hum": "Null Dereference",
        "extras": {}
    },
    {
        "bug_type": "MEMORY_LEAK_C",
        "qualifier": "Memory dynamically allocated by `malloc`, indirectly via call to `prom_map_node_new()` on line 366 is not freed after the last access at line 376, column 11.",
        "severity": "ERROR",
        "category": "Resource leak",
        "line": 376,
        "column": 11,
        "procedure": "prom_map_delete_internal",
        "procedure_start_line": 361,
        "file": "subprojects/prometheus-client-c/prom/src/prom_map.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_map.c",
                "line_number": 366,
                "column_number": 36,
                "description": "allocation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_map.c",
                "line_number": 366,
                "column_number": 36,
                "description": "when calling `prom_map_node_new` here"
            },
            {
                "level": 2,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_map.c",
                "line_number": 42,
                "column_number": 15,
                "description": "macro expanded here"
            },
            {
                "level": 2,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 41,
                "column_number": -1,
                "description": "allocated by `malloc` here"
            },
            {
                "level": 0,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_map.c",
                "line_number": 376,
                "column_number": 11,
                "description": "memory becomes unreachable here"
            }
        ],
        "bug_trace_length": 4,
        "bug_trace_max_depth": 2,
        "key": "prom_map.c|prom_map_delete_internal|MEMORY_LEAK_C",
        "node_key": "b0505af42fefa95ad84b38b49268fe07",
        "hash": "a11ebdd3eb4ccbfeb67165af88c9479f",
        "bug_type_hum": "Memory Leak",
        "extras": {}
    },
    {
        "bug_type": "NULLPTR_DEREFERENCE",
        "qualifier": "`self` could be null (null value originating from line 38) and is dereferenced.",
        "severity": "ERROR",
        "category": "Null pointer dereference",
        "line": 39,
        "column": 3,
        "procedure": "prom_metric_new",
        "procedure_start_line": 35,
        "file": "subprojects/prometheus-client-c/prom/src/prom_metric.c",
        "bug_trace": [
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric.c",
                "line_number": 38,
                "column_number": 42,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "in call to `malloc (null case)` (modelled)"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric.c",
                "line_number": 38,
                "column_number": 42,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "is assigned to the null pointer"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric.c",
                "line_number": 38,
                "column_number": 3,
                "description": "assigned"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric.c",
                "line_number": 39,
                "column_number": 3,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 4,
        "bug_trace_max_depth": 1,
        "key": "prom_metric.c|prom_metric_new|NULLPTR_DEREFERENCE",
        "node_key": "1466417a2c6e07913ac313df0b77f760",
        "hash": "251e05f08b0fea26bfda27a07f3eea46",
        "bug_type_hum": "Null Dereference",
        "extras": {}
    },
    {
        "bug_type": "MEMORY_LEAK_C",
        "qualifier": "Memory dynamically allocated by `malloc` on line 44 is not freed after the last access at line 47, column 9.",
        "severity": "ERROR",
        "category": "Resource leak",
        "line": 47,
        "column": 9,
        "procedure": "prom_metric_new",
        "procedure_start_line": 35,
        "file": "subprojects/prometheus-client-c/prom/src/prom_metric.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric.c",
                "line_number": 44,
                "column_number": 35,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "allocation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric.c",
                "line_number": 44,
                "column_number": 35,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "allocated by `malloc` here"
            },
            {
                "level": 0,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric.c",
                "line_number": 47,
                "column_number": 9,
                "description": "memory becomes unreachable here"
            }
        ],
        "bug_trace_length": 3,
        "bug_trace_max_depth": 1,
        "key": "prom_metric.c|prom_metric_new|MEMORY_LEAK_C",
        "node_key": "9d9b3fe366249614a82b9f2fb906304a",
        "hash": "35961e8dbe6ad6695f7bbafdd2844a64",
        "bug_type_hum": "Memory Leak",
        "extras": {}
    },
    {
        "bug_type": "MEMORY_LEAK_C",
        "qualifier": "Memory dynamically allocated by `malloc` on line 57 is not freed after the last access at line 47, column 9.",
        "severity": "ERROR",
        "category": "Resource leak",
        "line": 47,
        "column": 9,
        "procedure": "prom_metric_new",
        "procedure_start_line": 35,
        "file": "subprojects/prometheus-client-c/prom/src/prom_metric.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric.c",
                "line_number": 57,
                "column_number": 12,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 41,
                "column_number": -1,
                "description": "allocation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric.c",
                "line_number": 57,
                "column_number": 12,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 41,
                "column_number": -1,
                "description": "allocated by `malloc` here"
            },
            {
                "level": 0,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric.c",
                "line_number": 47,
                "column_number": 9,
                "description": "memory becomes unreachable here"
            }
        ],
        "bug_trace_length": 3,
        "bug_trace_max_depth": 1,
        "key": "prom_metric.c|prom_metric_new|MEMORY_LEAK_C",
        "node_key": "9d9b3fe366249614a82b9f2fb906304a",
        "hash": "35961e8dbe6ad6695f7bbafdd2844a64",
        "bug_type_hum": "Memory Leak",
        "extras": {}
    },
    {
        "bug_type": "MEMORY_LEAK_C",
        "qualifier": "Memory dynamically allocated by `malloc` on line 44 is not freed after the last access at line 52, column 9.",
        "severity": "ERROR",
        "category": "Resource leak",
        "line": 52,
        "column": 9,
        "procedure": "prom_metric_new",
        "procedure_start_line": 35,
        "file": "subprojects/prometheus-client-c/prom/src/prom_metric.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric.c",
                "line_number": 44,
                "column_number": 35,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "allocation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric.c",
                "line_number": 44,
                "column_number": 35,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "allocated by `malloc` here"
            },
            {
                "level": 0,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric.c",
                "line_number": 52,
                "column_number": 9,
                "description": "memory becomes unreachable here"
            }
        ],
        "bug_trace_length": 3,
        "bug_trace_max_depth": 1,
        "key": "prom_metric.c|prom_metric_new|MEMORY_LEAK_C",
        "node_key": "9d9b3fe366249614a82b9f2fb906304a",
        "hash": "35961e8dbe6ad6695f7bbafdd2844a64",
        "bug_type_hum": "Memory Leak",
        "extras": {}
    },
    {
        "bug_type": "MEMORY_LEAK_C",
        "qualifier": "Memory dynamically allocated by `malloc` on line 57 is not freed after the last access at line 52, column 9.",
        "severity": "ERROR",
        "category": "Resource leak",
        "line": 52,
        "column": 9,
        "procedure": "prom_metric_new",
        "procedure_start_line": 35,
        "file": "subprojects/prometheus-client-c/prom/src/prom_metric.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric.c",
                "line_number": 57,
                "column_number": 12,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 41,
                "column_number": -1,
                "description": "allocation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric.c",
                "line_number": 57,
                "column_number": 12,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 41,
                "column_number": -1,
                "description": "allocated by `malloc` here"
            },
            {
                "level": 0,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric.c",
                "line_number": 52,
                "column_number": 9,
                "description": "memory becomes unreachable here"
            }
        ],
        "bug_trace_length": 3,
        "bug_trace_max_depth": 1,
        "key": "prom_metric.c|prom_metric_new|MEMORY_LEAK_C",
        "node_key": "9d9b3fe366249614a82b9f2fb906304a",
        "hash": "35961e8dbe6ad6695f7bbafdd2844a64",
        "bug_type_hum": "Memory Leak",
        "extras": {}
    },
    {
        "bug_type": "NULLPTR_DEREFERENCE",
        "qualifier": "`i` could be null (null value originating from line 44) and is dereferenced.",
        "severity": "ERROR",
        "category": "Null pointer dereference",
        "line": 57,
        "column": 5,
        "procedure": "prom_metric_new",
        "procedure_start_line": 35,
        "file": "subprojects/prometheus-client-c/prom/src/prom_metric.c",
        "bug_trace": [
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric.c",
                "line_number": 44,
                "column_number": 35,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "in call to `malloc (null case)` (modelled)"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric.c",
                "line_number": 44,
                "column_number": 35,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "is assigned to the null pointer"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric.c",
                "line_number": 44,
                "column_number": 3,
                "description": "assigned"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric.c",
                "line_number": 57,
                "column_number": 5,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 4,
        "bug_trace_max_depth": 1,
        "key": "prom_metric.c|prom_metric_new|NULLPTR_DEREFERENCE",
        "node_key": "964de8d482d326070345ca99a182b73d",
        "hash": "df1db2126e7fd2f57c270b552999f198",
        "bug_type_hum": "Null Dereference",
        "extras": {}
    },
    {
        "bug_type": "NULLPTR_DEREFERENCE",
        "qualifier": "`self` could be null (null value originating from line 34) and is dereferenced.",
        "severity": "ERROR",
        "category": "Null pointer dereference",
        "line": 35,
        "column": 3,
        "procedure": "prom_metric_formatter_new",
        "procedure_start_line": 33,
        "file": "subprojects/prometheus-client-c/prom/src/prom_metric_formatter.c",
        "bug_trace": [
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_formatter.c",
                "line_number": 34,
                "column_number": 62,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "in call to `malloc (null case)` (modelled)"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_formatter.c",
                "line_number": 34,
                "column_number": 62,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "is assigned to the null pointer"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_formatter.c",
                "line_number": 34,
                "column_number": 3,
                "description": "assigned"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_formatter.c",
                "line_number": 35,
                "column_number": 3,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 4,
        "bug_trace_max_depth": 1,
        "key": "prom_metric_formatter.c|prom_metric_formatter_new|NULLPTR_DEREFERENCE",
        "node_key": "a597fab121221eb58ba530e4b942e718",
        "hash": "cdcfdddc1b828e1220c84f76694470ee",
        "bug_type_hum": "Null Dereference",
        "extras": {}
    },
    {
        "bug_type": "NULLPTR_DEREFERENCE",
        "qualifier": "`self` could be null (null value originating from line 30) and is dereferenced.",
        "severity": "ERROR",
        "category": "Null pointer dereference",
        "line": 31,
        "column": 3,
        "procedure": "prom_metric_sample_new",
        "procedure_start_line": 29,
        "file": "subprojects/prometheus-client-c/prom/src/prom_metric_sample.c",
        "bug_trace": [
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample.c",
                "line_number": 30,
                "column_number": 56,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "in call to `malloc (null case)` (modelled)"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample.c",
                "line_number": 30,
                "column_number": 56,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "is assigned to the null pointer"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample.c",
                "line_number": 30,
                "column_number": 3,
                "description": "assigned"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample.c",
                "line_number": 31,
                "column_number": 3,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 4,
        "bug_trace_max_depth": 1,
        "key": "prom_metric_sample.c|prom_metric_sample_new|NULLPTR_DEREFERENCE",
        "node_key": "ae6c13f304e550f5447e0a24531620d7",
        "hash": "24cbd05d61274fe68c7b31473f92745b",
        "bug_type_hum": "Null Dereference",
        "extras": {}
    },
    {
        "bug_type": "NULLPTR_DEREFERENCE",
        "qualifier": "`self` could be null (null value originating from line 77) and is dereferenced.",
        "severity": "ERROR",
        "category": "Null pointer dereference",
        "line": 80,
        "column": 3,
        "procedure": "prom_metric_sample_histogram_new",
        "procedure_start_line": 69,
        "file": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
        "bug_trace": [
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
                "line_number": 77,
                "column_number": 41,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "in call to `malloc (null case)` (modelled)"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
                "line_number": 77,
                "column_number": 41,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "is assigned to the null pointer"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
                "line_number": 76,
                "column_number": 3,
                "description": "assigned"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
                "line_number": 80,
                "column_number": 3,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 4,
        "bug_trace_max_depth": 1,
        "key": "prom_metric_sample_histogram.c|prom_metric_sample_histogram_new|NULLPTR_DEREFERENCE",
        "node_key": "a597fab121221eb58ba530e4b942e718",
        "hash": "c819ab6a243e04f25aaf3548b6efd401",
        "bug_type_hum": "Null Dereference",
        "extras": {}
    },
    {
        "bug_type": "MEMORY_LEAK_C",
        "qualifier": "Memory dynamically allocated by `malloc` on line 182 is not freed after the last access at line 182, column 5.",
        "severity": "ERROR",
        "category": "Resource leak",
        "line": 182,
        "column": 5,
        "procedure": "prom_metric_sample_histogram_init_bucket_samples",
        "procedure_start_line": 168,
        "file": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
                "line_number": 182,
                "column_number": 53,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 41,
                "column_number": -1,
                "description": "allocation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
                "line_number": 182,
                "column_number": 53,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 41,
                "column_number": -1,
                "description": "allocated by `malloc` here"
            },
            {
                "level": 0,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
                "line_number": 182,
                "column_number": 5,
                "description": "memory becomes unreachable here"
            }
        ],
        "bug_trace_length": 3,
        "bug_trace_max_depth": 1,
        "key": "prom_metric_sample_histogram.c|prom_metric_sample_histogram_init_bucket_samples|MEMORY_LEAK_C",
        "node_key": "9d9b3fe366249614a82b9f2fb906304a",
        "hash": "3b073416b940612f0c1400fe1dad55bd",
        "bug_type_hum": "Memory Leak",
        "extras": {}
    },
    {
        "bug_type": "MEMORY_LEAK_C",
        "qualifier": "Memory dynamically allocated by `malloc`, indirectly via call to `prom_metric_sample_histogram_l_value_for_bucket()` on line 178 is not freed after the last access at line 183, column 9.",
        "severity": "ERROR",
        "category": "Resource leak",
        "line": 183,
        "column": 9,
        "procedure": "prom_metric_sample_histogram_init_bucket_samples",
        "procedure_start_line": 168,
        "file": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
                "line_number": 178,
                "column_number": 27,
                "description": "allocation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
                "line_number": 178,
                "column_number": 27,
                "description": "when calling `prom_metric_sample_histogram_l_value_for_bucket` here"
            },
            {
                "level": 2,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
                "line_number": 452,
                "column_number": 35,
                "description": "when calling `prom_metric_formatter_dump` here"
            },
            {
                "level": 3,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_formatter.c",
                "line_number": 190,
                "column_number": 16,
                "description": "when calling `prom_string_builder_dump` here"
            },
            {
                "level": 4,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_string_builder.c",
                "line_number": 145,
                "column_number": 23,
                "description": "macro expanded here"
            },
            {
                "level": 4,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "allocated by `malloc` here"
            },
            {
                "level": 0,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
                "line_number": 183,
                "column_number": 9,
                "description": "memory becomes unreachable here"
            }
        ],
        "bug_trace_length": 6,
        "bug_trace_max_depth": 4,
        "key": "prom_metric_sample_histogram.c|prom_metric_sample_histogram_init_bucket_samples|MEMORY_LEAK_C",
        "node_key": "9d9b3fe366249614a82b9f2fb906304a",
        "hash": "76756b677d87c6aa85c2b9313be24ab7",
        "bug_type_hum": "Memory Leak",
        "extras": {}
    },
    {
        "bug_type": "MEMORY_LEAK_C",
        "qualifier": "Memory dynamically allocated by `malloc` on line 211 is not freed after the last access at line 211, column 3.",
        "severity": "ERROR",
        "category": "Resource leak",
        "line": 211,
        "column": 3,
        "procedure": "prom_metric_sample_histogram_init_inf",
        "procedure_start_line": 202,
        "file": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
                "line_number": 211,
                "column_number": 51,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 41,
                "column_number": -1,
                "description": "allocation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
                "line_number": 211,
                "column_number": 51,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 41,
                "column_number": -1,
                "description": "allocated by `malloc` here"
            },
            {
                "level": 0,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
                "line_number": 211,
                "column_number": 3,
                "description": "memory becomes unreachable here"
            }
        ],
        "bug_trace_length": 3,
        "bug_trace_max_depth": 1,
        "key": "prom_metric_sample_histogram.c|prom_metric_sample_histogram_init_inf|MEMORY_LEAK_C",
        "node_key": "a3aee70cdd866ec20ce3b01b9f7929e4",
        "hash": "d39ab401a02a78e1111da7549fae105b",
        "bug_type_hum": "Memory Leak",
        "extras": {}
    },
    {
        "bug_type": "MEMORY_LEAK_C",
        "qualifier": "Memory dynamically allocated by `malloc`, indirectly via call to `prom_metric_sample_histogram_l_value_for_inf()` on line 208 is not freed after the last access at line 212, column 7.",
        "severity": "ERROR",
        "category": "Resource leak",
        "line": 212,
        "column": 7,
        "procedure": "prom_metric_sample_histogram_init_inf",
        "procedure_start_line": 202,
        "file": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
                "line_number": 208,
                "column_number": 7,
                "description": "allocation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
                "line_number": 208,
                "column_number": 7,
                "description": "when calling `prom_metric_sample_histogram_l_value_for_inf` here"
            },
            {
                "level": 2,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
                "line_number": 491,
                "column_number": 35,
                "description": "when calling `prom_metric_formatter_dump` here"
            },
            {
                "level": 3,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_formatter.c",
                "line_number": 190,
                "column_number": 16,
                "description": "when calling `prom_string_builder_dump` here"
            },
            {
                "level": 4,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_string_builder.c",
                "line_number": 145,
                "column_number": 23,
                "description": "macro expanded here"
            },
            {
                "level": 4,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "allocated by `malloc` here"
            },
            {
                "level": 0,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
                "line_number": 212,
                "column_number": 7,
                "description": "memory becomes unreachable here"
            }
        ],
        "bug_trace_length": 6,
        "bug_trace_max_depth": 4,
        "key": "prom_metric_sample_histogram.c|prom_metric_sample_histogram_init_inf|MEMORY_LEAK_C",
        "node_key": "a3aee70cdd866ec20ce3b01b9f7929e4",
        "hash": "7eb618cbc6a8e24d1c2a451c1d065253",
        "bug_type_hum": "Memory Leak",
        "extras": {}
    },
    {
        "bug_type": "MEMORY_LEAK_C",
        "qualifier": "Memory dynamically allocated by `malloc` on line 235 is not freed after the last access at line 235, column 3.",
        "severity": "ERROR",
        "category": "Resource leak",
        "line": 235,
        "column": 3,
        "procedure": "prom_metric_sample_histogram_init_count",
        "procedure_start_line": 223,
        "file": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
                "line_number": 235,
                "column_number": 51,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 41,
                "column_number": -1,
                "description": "allocation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
                "line_number": 235,
                "column_number": 51,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 41,
                "column_number": -1,
                "description": "allocated by `malloc` here"
            },
            {
                "level": 0,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
                "line_number": 235,
                "column_number": 3,
                "description": "memory becomes unreachable here"
            }
        ],
        "bug_trace_length": 3,
        "bug_trace_max_depth": 1,
        "key": "prom_metric_sample_histogram.c|prom_metric_sample_histogram_init_count|MEMORY_LEAK_C",
        "node_key": "1dc3356f6070a264d4b0808f17592b6c",
        "hash": "a32ae116e67709eb847d6e3459ecbcb7",
        "bug_type_hum": "Memory Leak",
        "extras": {}
    },
    {
        "bug_type": "MEMORY_LEAK_C",
        "qualifier": "Memory dynamically allocated by `malloc`, indirectly via call to `prom_metric_formatter_dump()` on line 232 is not freed after the last access at line 236, column 7.",
        "severity": "ERROR",
        "category": "Resource leak",
        "line": 236,
        "column": 7,
        "procedure": "prom_metric_sample_histogram_init_count",
        "procedure_start_line": 223,
        "file": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
                "line_number": 232,
                "column_number": 31,
                "description": "allocation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
                "line_number": 232,
                "column_number": 31,
                "description": "when calling `prom_metric_formatter_dump` here"
            },
            {
                "level": 2,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_formatter.c",
                "line_number": 190,
                "column_number": 16,
                "description": "when calling `prom_string_builder_dump` here"
            },
            {
                "level": 3,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_string_builder.c",
                "line_number": 145,
                "column_number": 23,
                "description": "macro expanded here"
            },
            {
                "level": 3,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "allocated by `malloc` here"
            },
            {
                "level": 0,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
                "line_number": 236,
                "column_number": 7,
                "description": "memory becomes unreachable here"
            }
        ],
        "bug_trace_length": 5,
        "bug_trace_max_depth": 3,
        "key": "prom_metric_sample_histogram.c|prom_metric_sample_histogram_init_count|MEMORY_LEAK_C",
        "node_key": "1dc3356f6070a264d4b0808f17592b6c",
        "hash": "033fce4b6a545384ff2eef1ad920f7c9",
        "bug_type_hum": "Memory Leak",
        "extras": {}
    },
    {
        "bug_type": "MEMORY_LEAK_C",
        "qualifier": "Memory dynamically allocated by `malloc` on line 259 is not freed after the last access at line 259, column 3.",
        "severity": "ERROR",
        "category": "Resource leak",
        "line": 259,
        "column": 3,
        "procedure": "prom_metric_sample_histogram_init_summary",
        "procedure_start_line": 247,
        "file": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
                "line_number": 259,
                "column_number": 51,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 41,
                "column_number": -1,
                "description": "allocation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
                "line_number": 259,
                "column_number": 51,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 41,
                "column_number": -1,
                "description": "allocated by `malloc` here"
            },
            {
                "level": 0,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
                "line_number": 259,
                "column_number": 3,
                "description": "memory becomes unreachable here"
            }
        ],
        "bug_trace_length": 3,
        "bug_trace_max_depth": 1,
        "key": "prom_metric_sample_histogram.c|prom_metric_sample_histogram_init_summary|MEMORY_LEAK_C",
        "node_key": "1dc3356f6070a264d4b0808f17592b6c",
        "hash": "6377e84f03e8727a307dd081cfa1656c",
        "bug_type_hum": "Memory Leak",
        "extras": {}
    },
    {
        "bug_type": "MEMORY_LEAK_C",
        "qualifier": "Memory dynamically allocated by `malloc`, indirectly via call to `prom_metric_formatter_dump()` on line 256 is not freed after the last access at line 260, column 7.",
        "severity": "ERROR",
        "category": "Resource leak",
        "line": 260,
        "column": 7,
        "procedure": "prom_metric_sample_histogram_init_summary",
        "procedure_start_line": 247,
        "file": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
                "line_number": 256,
                "column_number": 29,
                "description": "allocation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
                "line_number": 256,
                "column_number": 29,
                "description": "when calling `prom_metric_formatter_dump` here"
            },
            {
                "level": 2,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_formatter.c",
                "line_number": 190,
                "column_number": 16,
                "description": "when calling `prom_string_builder_dump` here"
            },
            {
                "level": 3,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_string_builder.c",
                "line_number": 145,
                "column_number": 23,
                "description": "macro expanded here"
            },
            {
                "level": 3,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "allocated by `malloc` here"
            },
            {
                "level": 0,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
                "line_number": 260,
                "column_number": 7,
                "description": "memory becomes unreachable here"
            }
        ],
        "bug_trace_length": 5,
        "bug_trace_max_depth": 3,
        "key": "prom_metric_sample_histogram.c|prom_metric_sample_histogram_init_summary|MEMORY_LEAK_C",
        "node_key": "1dc3356f6070a264d4b0808f17592b6c",
        "hash": "e85134ab3844bf352d9778298d5751e1",
        "bug_type_hum": "Memory Leak",
        "extras": {}
    },
    {
        "bug_type": "NULLPTR_DEREFERENCE",
        "qualifier": "`i` could be null (null value originating from line 433) and is dereferenced.",
        "severity": "ERROR",
        "category": "Null pointer dereference",
        "line": 435,
        "column": 5,
        "procedure": "prom_metric_sample_histogram_l_value_for_bucket",
        "procedure_start_line": 417,
        "file": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
        "bug_trace": [
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
                "line_number": 433,
                "column_number": 42,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "in call to `malloc (null case)` (modelled)"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
                "line_number": 433,
                "column_number": 42,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "is assigned to the null pointer"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
                "line_number": 433,
                "column_number": 3,
                "description": "assigned"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
                "line_number": 435,
                "column_number": 5,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 4,
        "bug_trace_max_depth": 1,
        "key": "prom_metric_sample_histogram.c|prom_metric_sample_histogram_l_value_for_bucket|NULLPTR_DEREFERENCE",
        "node_key": "6522796b1a5cb6989c936a80e7269d31",
        "hash": "e7449bbe64877290a6d0cf91f3600eaa",
        "bug_type_hum": "Null Dereference",
        "extras": {}
    },
    {
        "bug_type": "NULLPTR_DEREFERENCE",
        "qualifier": "`new_keys` could be null (null value originating from line 433) and is dereferenced.",
        "severity": "ERROR",
        "category": "Null pointer dereference",
        "line": 437,
        "column": 3,
        "procedure": "prom_metric_sample_histogram_l_value_for_bucket",
        "procedure_start_line": 417,
        "file": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
        "bug_trace": [
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
                "line_number": 433,
                "column_number": 42,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "in call to `malloc (null case)` (modelled)"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
                "line_number": 433,
                "column_number": 42,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "is assigned to the null pointer"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
                "line_number": 433,
                "column_number": 3,
                "description": "assigned"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
                "line_number": 437,
                "column_number": 3,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 4,
        "bug_trace_max_depth": 1,
        "key": "prom_metric_sample_histogram.c|prom_metric_sample_histogram_l_value_for_bucket|NULLPTR_DEREFERENCE",
        "node_key": "50fce549e3f4570cba9025de7442e900",
        "hash": "fa5b0b91dbdcc456f6beeaab07c334c5",
        "bug_type_hum": "Null Dereference",
        "extras": {}
    },
    {
        "bug_type": "NULLPTR_DEREFERENCE",
        "qualifier": "`i` could be null (null value originating from line 440) and is dereferenced.",
        "severity": "ERROR",
        "category": "Null pointer dereference",
        "line": 442,
        "column": 5,
        "procedure": "prom_metric_sample_histogram_l_value_for_bucket",
        "procedure_start_line": 417,
        "file": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
        "bug_trace": [
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
                "line_number": 440,
                "column_number": 44,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "in call to `malloc (null case)` (modelled)"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
                "line_number": 440,
                "column_number": 44,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "is assigned to the null pointer"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
                "line_number": 440,
                "column_number": 3,
                "description": "assigned"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
                "line_number": 442,
                "column_number": 5,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 4,
        "bug_trace_max_depth": 1,
        "key": "prom_metric_sample_histogram.c|prom_metric_sample_histogram_l_value_for_bucket|NULLPTR_DEREFERENCE",
        "node_key": "6522796b1a5cb6989c936a80e7269d31",
        "hash": "e7449bbe64877290a6d0cf91f3600eaa",
        "bug_type_hum": "Null Dereference",
        "extras": {}
    },
    {
        "bug_type": "NULLPTR_DEREFERENCE",
        "qualifier": "`new_values` could be null (null value originating from line 440) and is dereferenced.",
        "severity": "ERROR",
        "category": "Null pointer dereference",
        "line": 445,
        "column": 3,
        "procedure": "prom_metric_sample_histogram_l_value_for_bucket",
        "procedure_start_line": 417,
        "file": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
        "bug_trace": [
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
                "line_number": 440,
                "column_number": 44,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "in call to `malloc (null case)` (modelled)"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
                "line_number": 440,
                "column_number": 44,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "is assigned to the null pointer"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
                "line_number": 440,
                "column_number": 3,
                "description": "assigned"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
                "line_number": 445,
                "column_number": 3,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 4,
        "bug_trace_max_depth": 1,
        "key": "prom_metric_sample_histogram.c|prom_metric_sample_histogram_l_value_for_bucket|NULLPTR_DEREFERENCE",
        "node_key": "a482c26c90b14b51805899f62b51640e",
        "hash": "3c8a7ba1f6e3812bec6e90d2b9989740",
        "bug_type_hum": "Null Dereference",
        "extras": {}
    },
    {
        "bug_type": "MEMORY_LEAK_C",
        "qualifier": "Memory dynamically allocated by `malloc`, indirectly via call to `prom_metric_sample_histogram_bucket_to_str()` on line 445 is not freed after the last access at line 453, column 3.",
        "severity": "ERROR",
        "category": "Resource leak",
        "line": 453,
        "column": 3,
        "procedure": "prom_metric_sample_histogram_l_value_for_bucket",
        "procedure_start_line": 417,
        "file": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
                "line_number": 445,
                "column_number": 29,
                "description": "allocation part of the trace starts here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
                "line_number": 445,
                "column_number": 29,
                "description": "when calling `prom_metric_sample_histogram_bucket_to_str` here"
            },
            {
                "level": 2,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
                "line_number": 503,
                "column_number": 23,
                "description": "macro expanded here"
            },
            {
                "level": 2,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "allocated by `malloc` here"
            },
            {
                "level": 0,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
                "line_number": 453,
                "column_number": 3,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 46,
                "column_number": -1,
                "description": "memory becomes unreachable here"
            }
        ],
        "bug_trace_length": 4,
        "bug_trace_max_depth": 2,
        "key": "prom_metric_sample_histogram.c|prom_metric_sample_histogram_l_value_for_bucket|MEMORY_LEAK_C",
        "node_key": "fa0c051eb65fbf8d37c52865108bb194",
        "hash": "113b56adc42eef2a864e4d051f95ef4b",
        "bug_type_hum": "Memory Leak",
        "extras": {}
    },
    {
        "bug_type": "NULLPTR_DEREFERENCE",
        "qualifier": "`i` could be null (null value originating from line 472) and is dereferenced.",
        "severity": "ERROR",
        "category": "Null pointer dereference",
        "line": 474,
        "column": 5,
        "procedure": "prom_metric_sample_histogram_l_value_for_inf",
        "procedure_start_line": 457,
        "file": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
        "bug_trace": [
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
                "line_number": 472,
                "column_number": 42,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "in call to `malloc (null case)` (modelled)"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
                "line_number": 472,
                "column_number": 42,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "is assigned to the null pointer"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
                "line_number": 472,
                "column_number": 3,
                "description": "assigned"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
                "line_number": 474,
                "column_number": 5,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 4,
        "bug_trace_max_depth": 1,
        "key": "prom_metric_sample_histogram.c|prom_metric_sample_histogram_l_value_for_inf|NULLPTR_DEREFERENCE",
        "node_key": "6522796b1a5cb6989c936a80e7269d31",
        "hash": "9b0f3dcce60992a35c2a76f0df21b3d7",
        "bug_type_hum": "Null Dereference",
        "extras": {}
    },
    {
        "bug_type": "NULLPTR_DEREFERENCE",
        "qualifier": "`new_keys` could be null (null value originating from line 472) and is dereferenced.",
        "severity": "ERROR",
        "category": "Null pointer dereference",
        "line": 476,
        "column": 3,
        "procedure": "prom_metric_sample_histogram_l_value_for_inf",
        "procedure_start_line": 457,
        "file": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
        "bug_trace": [
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
                "line_number": 472,
                "column_number": 42,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "in call to `malloc (null case)` (modelled)"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
                "line_number": 472,
                "column_number": 42,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "is assigned to the null pointer"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
                "line_number": 472,
                "column_number": 3,
                "description": "assigned"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
                "line_number": 476,
                "column_number": 3,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 4,
        "bug_trace_max_depth": 1,
        "key": "prom_metric_sample_histogram.c|prom_metric_sample_histogram_l_value_for_inf|NULLPTR_DEREFERENCE",
        "node_key": "50fce549e3f4570cba9025de7442e900",
        "hash": "05b234102f447d0e0c1a7ab8c021a01a",
        "bug_type_hum": "Null Dereference",
        "extras": {}
    },
    {
        "bug_type": "NULLPTR_DEREFERENCE",
        "qualifier": "`i` could be null (null value originating from line 479) and is dereferenced.",
        "severity": "ERROR",
        "category": "Null pointer dereference",
        "line": 481,
        "column": 5,
        "procedure": "prom_metric_sample_histogram_l_value_for_inf",
        "procedure_start_line": 457,
        "file": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
        "bug_trace": [
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
                "line_number": 479,
                "column_number": 44,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "in call to `malloc (null case)` (modelled)"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
                "line_number": 479,
                "column_number": 44,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "is assigned to the null pointer"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
                "line_number": 479,
                "column_number": 3,
                "description": "assigned"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
                "line_number": 481,
                "column_number": 5,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 4,
        "bug_trace_max_depth": 1,
        "key": "prom_metric_sample_histogram.c|prom_metric_sample_histogram_l_value_for_inf|NULLPTR_DEREFERENCE",
        "node_key": "6522796b1a5cb6989c936a80e7269d31",
        "hash": "9b0f3dcce60992a35c2a76f0df21b3d7",
        "bug_type_hum": "Null Dereference",
        "extras": {}
    },
    {
        "bug_type": "NULLPTR_DEREFERENCE",
        "qualifier": "`new_values` could be null (null value originating from line 479) and is dereferenced.",
        "severity": "ERROR",
        "category": "Null pointer dereference",
        "line": 484,
        "column": 3,
        "procedure": "prom_metric_sample_histogram_l_value_for_inf",
        "procedure_start_line": 457,
        "file": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
        "bug_trace": [
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
                "line_number": 479,
                "column_number": 44,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "in call to `malloc (null case)` (modelled)"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
                "line_number": 479,
                "column_number": 44,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "is assigned to the null pointer"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
                "line_number": 479,
                "column_number": 3,
                "description": "assigned"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
                "line_number": 484,
                "column_number": 3,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 4,
        "bug_trace_max_depth": 1,
        "key": "prom_metric_sample_histogram.c|prom_metric_sample_histogram_l_value_for_inf|NULLPTR_DEREFERENCE",
        "node_key": "fe8ff16672b624dfa045ce618e976baa",
        "hash": "8c90a67b5f6c2918702690aeb73036cc",
        "bug_type_hum": "Null Dereference",
        "extras": {}
    },
    {
        "bug_type": "NULLPTR_DEREFERENCE",
        "qualifier": "`buf` could be null (null value originating from line 503) and is dereferenced.",
        "severity": "ERROR",
        "category": "Null pointer dereference",
        "line": 504,
        "column": 3,
        "procedure": "prom_metric_sample_histogram_bucket_to_str",
        "procedure_start_line": 502,
        "file": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
        "bug_trace": [
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
                "line_number": 503,
                "column_number": 23,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "in call to `malloc (null case)` (modelled)"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
                "line_number": 503,
                "column_number": 23,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "is assigned to the null pointer"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
                "line_number": 503,
                "column_number": 3,
                "description": "assigned"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_metric_sample_histogram.c",
                "line_number": 504,
                "column_number": 3,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 4,
        "bug_trace_max_depth": 1,
        "key": "prom_metric_sample_histogram.c|prom_metric_sample_histogram_bucket_to_str|NULLPTR_DEREFERENCE",
        "node_key": "d5682e9e22658863a4a67ed8d51ec6a4",
        "hash": "e5ec24e6c522c87ee0d046c93e4fc76d",
        "bug_type_hum": "Null Dereference",
        "extras": {}
    },
    {
        "bug_type": "NULLPTR_DEREFERENCE",
        "qualifier": "`self` could be null (null value originating from line 57) and is dereferenced.",
        "severity": "ERROR",
        "category": "Null pointer dereference",
        "line": 59,
        "column": 3,
        "procedure": "prom_process_limits_row_new",
        "procedure_start_line": 55,
        "file": "subprojects/prometheus-client-c/prom/src/prom_process_limits.c",
        "bug_trace": [
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_process_limits.c",
                "line_number": 57,
                "column_number": 66,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "in call to `malloc (null case)` (modelled)"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_process_limits.c",
                "line_number": 57,
                "column_number": 66,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "is assigned to the null pointer"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_process_limits.c",
                "line_number": 57,
                "column_number": 3,
                "description": "assigned"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_process_limits.c",
                "line_number": 59,
                "column_number": 3,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 4,
        "bug_trace_max_depth": 1,
        "key": "prom_process_limits.c|prom_process_limits_row_new|NULLPTR_DEREFERENCE",
        "node_key": "a4898f3f37da5c2b6a527355408cdcb0",
        "hash": "241e8ca7a5f4095a2c89763e7701c27a",
        "bug_type_hum": "Null Dereference",
        "extras": {}
    },
    {
        "bug_type": "NULLPTR_DEREFERENCE",
        "qualifier": "`self` could be null (null value originating from line 84) and is dereferenced.",
        "severity": "ERROR",
        "category": "Null pointer dereference",
        "line": 86,
        "column": 3,
        "procedure": "prom_process_limits_current_row_new",
        "procedure_start_line": 82,
        "file": "subprojects/prometheus-client-c/prom/src/prom_process_limits.c",
        "bug_trace": [
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_process_limits.c",
                "line_number": 84,
                "column_number": 44,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "in call to `malloc (null case)` (modelled)"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_process_limits.c",
                "line_number": 84,
                "column_number": 44,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "is assigned to the null pointer"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_process_limits.c",
                "line_number": 83,
                "column_number": 3,
                "description": "assigned"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_process_limits.c",
                "line_number": 86,
                "column_number": 3,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 4,
        "bug_trace_max_depth": 1,
        "key": "prom_process_limits.c|prom_process_limits_current_row_new|NULLPTR_DEREFERENCE",
        "node_key": "e60f97be9305272ddb99efdb3dd3f4c0",
        "hash": "337e3c506a4fac71308573b45ee070bc",
        "bug_type_hum": "Null Dereference",
        "extras": {}
    },
    {
        "bug_type": "NULLPTR_DEREFERENCE",
        "qualifier": "`self` could be null (null value originating from line 55) and is dereferenced.",
        "severity": "ERROR",
        "category": "Null pointer dereference",
        "line": 56,
        "column": 3,
        "procedure": "prom_process_stat_new",
        "procedure_start_line": 54,
        "file": "subprojects/prometheus-client-c/prom/src/prom_process_stat.c",
        "bug_trace": [
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_process_stat.c",
                "line_number": 55,
                "column_number": 54,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "in call to `malloc (null case)` (modelled)"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_process_stat.c",
                "line_number": 55,
                "column_number": 54,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "is assigned to the null pointer"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_process_stat.c",
                "line_number": 55,
                "column_number": 3,
                "description": "assigned"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_process_stat.c",
                "line_number": 56,
                "column_number": 3,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 4,
        "bug_trace_max_depth": 1,
        "key": "prom_process_stat.c|prom_process_stat_new|NULLPTR_DEREFERENCE",
        "node_key": "0e0521a824d14b649150234dd46dbf9e",
        "hash": "60f09756817e390216dc4384d70445a8",
        "bug_type_hum": "Null Dereference",
        "extras": {}
    },
    {
        "bug_type": "NULLPTR_DEREFERENCE",
        "qualifier": "`self` could be null (null value originating from line 59) and is dereferenced.",
        "severity": "ERROR",
        "category": "Null pointer dereference",
        "line": 60,
        "column": 3,
        "procedure": "prom_procfs_buf_new",
        "procedure_start_line": 39,
        "file": "subprojects/prometheus-client-c/prom/src/prom_procfs.c",
        "bug_trace": [
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_procfs.c",
                "line_number": 59,
                "column_number": 29,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "in call to `malloc (null case)` (modelled)"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_procfs.c",
                "line_number": 59,
                "column_number": 29,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "is assigned to the null pointer"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_procfs.c",
                "line_number": 59,
                "column_number": 3,
                "description": "assigned"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_procfs.c",
                "line_number": 60,
                "column_number": 3,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 4,
        "bug_trace_max_depth": 1,
        "key": "prom_procfs.c|prom_procfs_buf_new|NULLPTR_DEREFERENCE",
        "node_key": "6c7df69bd80f9ca445da350642dba916",
        "hash": "d0ddc4ab66332c11e08836865a1f8366",
        "bug_type_hum": "Null Dereference",
        "extras": {}
    },
    {
        "bug_type": "NULLPTR_DEREFERENCE",
        "qualifier": "`i` could be null (null value originating from line 60) and is dereferenced.",
        "severity": "ERROR",
        "category": "Null pointer dereference",
        "line": 73,
        "column": 5,
        "procedure": "prom_procfs_buf_new",
        "procedure_start_line": 39,
        "file": "subprojects/prometheus-client-c/prom/src/prom_procfs.c",
        "bug_trace": [
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_procfs.c",
                "line_number": 60,
                "column_number": 15,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "in call to `malloc (null case)` (modelled)"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_procfs.c",
                "line_number": 60,
                "column_number": 15,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "is assigned to the null pointer"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_procfs.c",
                "line_number": 60,
                "column_number": 3,
                "description": "assigned"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_procfs.c",
                "line_number": 73,
                "column_number": 5,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 4,
        "bug_trace_max_depth": 1,
        "key": "prom_procfs.c|prom_procfs_buf_new|NULLPTR_DEREFERENCE",
        "node_key": "1ab2347dea50d0ff7155c1198f2a1c9b",
        "hash": "43e50f6bb737ae284ad774308e300256",
        "bug_type_hum": "Null Dereference",
        "extras": {}
    },
    {
        "bug_type": "NULLPTR_DEREFERENCE",
        "qualifier": "`self->size` could be null (null value originating from line 60) and is dereferenced.",
        "severity": "ERROR",
        "category": "Null pointer dereference",
        "line": 84,
        "column": 3,
        "procedure": "prom_procfs_buf_new",
        "procedure_start_line": 39,
        "file": "subprojects/prometheus-client-c/prom/src/prom_procfs.c",
        "bug_trace": [
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_procfs.c",
                "line_number": 60,
                "column_number": 15,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "in call to `malloc (null case)` (modelled)"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_procfs.c",
                "line_number": 60,
                "column_number": 15,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "is assigned to the null pointer"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_procfs.c",
                "line_number": 60,
                "column_number": 3,
                "description": "assigned"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_procfs.c",
                "line_number": 84,
                "column_number": 3,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 4,
        "bug_trace_max_depth": 1,
        "key": "prom_procfs.c|prom_procfs_buf_new|NULLPTR_DEREFERENCE",
        "node_key": "1ab2347dea50d0ff7155c1198f2a1c9b",
        "hash": "36e723ec749b71d58efdb34d47faff9f",
        "bug_type_hum": "Null Dereference",
        "extras": {}
    },
    {
        "bug_type": "NULLPTR_DEREFERENCE",
        "qualifier": "`self` could be null (null value originating from line 43) and is dereferenced.",
        "severity": "ERROR",
        "category": "Null pointer dereference",
        "line": 44,
        "column": 3,
        "procedure": "prom_string_builder_new",
        "procedure_start_line": 40,
        "file": "subprojects/prometheus-client-c/prom/src/prom_string_builder.c",
        "bug_trace": [
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_string_builder.c",
                "line_number": 43,
                "column_number": 58,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "in call to `malloc (null case)` (modelled)"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_string_builder.c",
                "line_number": 43,
                "column_number": 58,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "is assigned to the null pointer"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_string_builder.c",
                "line_number": 43,
                "column_number": 3,
                "description": "assigned"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_string_builder.c",
                "line_number": 44,
                "column_number": 3,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 4,
        "bug_trace_max_depth": 1,
        "key": "prom_string_builder.c|prom_string_builder_new|NULLPTR_DEREFERENCE",
        "node_key": "53685cc892a5fac0caf1af23b2db8ab4",
        "hash": "0a5fef754ba4f2a206b609bace08fda3",
        "bug_type_hum": "Null Dereference",
        "extras": {}
    },
    {
        "bug_type": "NULLPTR_DEREFERENCE",
        "qualifier": "`self->str` could be null (null value originating from line 57) and is dereferenced.",
        "severity": "ERROR",
        "category": "Null pointer dereference",
        "line": 58,
        "column": 3,
        "procedure": "prom_string_builder_init",
        "procedure_start_line": 54,
        "file": "subprojects/prometheus-client-c/prom/src/prom_string_builder.c",
        "bug_trace": [
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_string_builder.c",
                "line_number": 57,
                "column_number": 23,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "in call to `malloc (null case)` (modelled)"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_string_builder.c",
                "line_number": 57,
                "column_number": 23,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "is assigned to the null pointer"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_string_builder.c",
                "line_number": 57,
                "column_number": 3,
                "description": "assigned"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_string_builder.c",
                "line_number": 58,
                "column_number": 3,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 4,
        "bug_trace_max_depth": 1,
        "key": "prom_string_builder.c|prom_string_builder_init|NULLPTR_DEREFERENCE",
        "node_key": "8dfd824e2d7ada79032176d62b420602",
        "hash": "d75a1dc2f4a5a90e8cb300494eaacecc",
        "bug_type_hum": "Null Dereference",
        "extras": {}
    },
    {
        "bug_type": "NULLPTR_DEREFERENCE",
        "qualifier": "`out` could be null (null value originating from line 145) and is dereferenced.",
        "severity": "ERROR",
        "category": "Null pointer dereference",
        "line": 146,
        "column": 3,
        "procedure": "prom_string_builder_dump",
        "procedure_start_line": 142,
        "file": "subprojects/prometheus-client-c/prom/src/prom_string_builder.c",
        "bug_trace": [
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_string_builder.c",
                "line_number": 145,
                "column_number": 23,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "in call to `malloc (null case)` (modelled)"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_string_builder.c",
                "line_number": 145,
                "column_number": 23,
                "description": "macro expanded here"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/include/prom_alloc.h",
                "line_number": 31,
                "column_number": -1,
                "description": "is assigned to the null pointer"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_string_builder.c",
                "line_number": 145,
                "column_number": 3,
                "description": "assigned"
            },
            {
                "level": 1,
                "filename": "subprojects/prometheus-client-c/prom/src/prom_string_builder.c",
                "line_number": 146,
                "column_number": 3,
                "description": "invalid access occurs here"
            }
        ],
        "bug_trace_length": 4,
        "bug_trace_max_depth": 1,
        "key": "prom_string_builder.c|prom_string_builder_dump|NULLPTR_DEREFERENCE",
        "node_key": "b6fe22873058f3f9148c525273a417ec",
        "hash": "5046b9cdc3afbc296eda7b7ecdd7d0ff",
        "bug_type_hum": "Null Dereference",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`imp` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 74,
        "column": 5,
        "procedure": "test_get_gmt",
        "procedure_start_line": 63,
        "file": "tests/core/time-test.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "tests/core/time-test.c",
                "line_number": 63,
                "column_number": 1,
                "description": "variable `imp` declared here"
            },
            {
                "level": 0,
                "filename": "tests/core/time-test.c",
                "line_number": 74,
                "column_number": 5,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "tests/core/time-test.c",
                "line_number": 74,
                "column_number": -1,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "time-test.c|test_get_gmt|PULSE_UNINITIALIZED_VALUE",
        "node_key": "e9d1e03d7e62421ded3149eb693c0d3e",
        "hash": "bfab8585a9d40d99166d7caf87e9f819",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`imp` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 88,
        "column": 5,
        "procedure": "test_get_lt",
        "procedure_start_line": 77,
        "file": "tests/core/time-test.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "tests/core/time-test.c",
                "line_number": 77,
                "column_number": 1,
                "description": "variable `imp` declared here"
            },
            {
                "level": 0,
                "filename": "tests/core/time-test.c",
                "line_number": 88,
                "column_number": 5,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "tests/core/time-test.c",
                "line_number": 88,
                "column_number": -1,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "time-test.c|test_get_lt|PULSE_UNINITIALIZED_VALUE",
        "node_key": "e9d1e03d7e62421ded3149eb693c0d3e",
        "hash": "80552ba68f091de1e00fd9b85a8c37c2",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    },
    {
        "bug_type": "PULSE_UNINITIALIZED_VALUE",
        "qualifier": "`imp` is read without initialization.",
        "severity": "ERROR",
        "category": "Memory error",
        "line": 100,
        "column": 5,
        "procedure": "test_imp_gmt",
        "procedure_start_line": 91,
        "file": "tests/core/time-test.c",
        "bug_trace": [
            {
                "level": 0,
                "filename": "tests/core/time-test.c",
                "line_number": 91,
                "column_number": 1,
                "description": "variable `imp` declared here"
            },
            {
                "level": 0,
                "filename": "tests/core/time-test.c",
                "line_number": 100,
                "column_number": 5,
                "description": "macro expanded here"
            },
            {
                "level": 0,
                "filename": "tests/core/time-test.c",
                "line_number": 100,
                "column_number": -1,
                "description": "read to uninitialized value occurs here"
            }
        ],
        "bug_trace_length": 2,
        "bug_trace_max_depth": 0,
        "key": "time-test.c|test_imp_gmt|PULSE_UNINITIALIZED_VALUE",
        "node_key": "0004d597c3ebe013d69582eb5f633b6e",
        "hash": "698cb0542a83d66dc10ae9cc19e95b96",
        "bug_type_hum": "Uninitialized Value",
        "extras": {}
    }
]
