// 
// Copyright (c) Facebook, Inc. and its affiliates.
//
// This source code is licensed under the MIT license found in the
// LICENSE file in the root directory of this source tree.

.source_language = "C" @?

define add(var0: int, var1: int) : int {
  local var4: int, var3: int
  #: @[13:0]
      n9 = load &var0 @[13:0]
      store &var3 <- n9 @[13:0]
      n10 = load &var1 @[13:0]
      store &var4 <- n10 @[13:0]
      n19 = load &var3 @[13:34]
      n20 = load &var4 @[13:39]
      ret __sil_plusa_int(n19, n20) @[13:27]
      
} @?

declare bar() : *ptr_elt

define call_add() : int {
  #: @[29:25]
      n58 = add(1, 2) @[29:25]
      jmp 1::ret @[29:25]
      
  #1::ret: @[29:18]
      ret n58 @[29:18]
      
} @?

declare foo() : *ptr_elt

define main() : int {
  local var1: int
  #: @[10:0]
      store &var1 <- 0 @[10:0]
      ret 0 @[10:14]
      
} @?

define test() : *int {
  #: @[11:15]
      ret null @[11:15]
      
} @?

define test2() : int {
  local var2: int, var1: int
  #: @[18:10]
      n33 = load &var1 @[18:10]
      n34 = load &var2 @[18:15]
      ret __sil_plusa_int(n33, n34) @[18:3]
      
} @?

define test3(var0: *int) : int {
  local var2: *int
  #: @[21:0]
      n37 = load &var0 @[21:0]
      store &var2 <- n37 @[21:0]
      n43 = load &var2 @[21:31]
      n44 = load n43 @[21:30]
      ret n44 @[21:23]
      
} @?

define test4() : int {
  #: @[25:22]
      n48 = foo() @[25:22]
      jmp 1::ret @[25:22]
      
  #1::ret: @[25:15]
      ret n48 @[25:15]
      
} @?

define test5() : int {
  #: @[27:22]
      n53 = bar() @[27:22]
      jmp 1::ret @[27:22]
      
  #1::ret: @[27:15]
      ret n53 @[27:15]
      
} @?

define test6() : *ptr_elt {
  local var2: *int, var1: *ptr_elt
  #: @[32:8]
      store &var2 <- null @[32:8]
      n66 = call_add() @[33:7]
      jmp 3::ret @[33:7]
      
  #3::ret: @[33:7]
      if __sil_eq(n66, 3) then jmp 5 else jmp 8 @[33:7]
      
  #5: @[34:13]
      n70 = load n63 @[34:13]
      n71 = load n70 @[34:12]
      store n62 <- n71 @[34:5]
      jmp 9 @[34:5]
      
  #8: @[36:5]
      store n62 <- 0 @[36:5]
      jmp 9 @[36:5]
      
  #9: @[37:1]
      n78 = load n62 @[37:1]
      ret n78 @[37:1]
      
} @?

