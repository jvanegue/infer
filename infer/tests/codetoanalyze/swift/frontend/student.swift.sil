// 
// Copyright (c) Facebook, Inc. and its affiliates.
//
// This source code is licensed under the MIT license found in the
// LICENSE file in the root directory of this source tree.

.source_language = "Swift" @?

define .plain_name = "create_student" $s5Hello14create_studentSiyF() : int {
  local john: *ptr_elt
  #: @[11:16]
      n2 = $s5Hello7StudentCMa(0) @[11:16]
      jmp 2::ret @[11:16]
      
  #2::ret: @[11:16]
      n6 = load n2.swift::metadata_response.field_0 @[11:16]
      n7 = T5Hello7StudentC.$s5Hello7StudentC3age6weightACSi_SitcfC(30, 60, n6) @[11:16]
      jmp 4::ret @[11:16]
      
  #4::ret: @[134:0]
      store &john <- n7 @[134:0]
      n10 = load n7.T5Hello7StudentC.field_1 @[12:17]
      n8 = load n10.TSi.field_0 @[12:17]
      ret n8 @[12:5]
      
} @?

define .plain_name = "test_student_allocation_bad" $s5Hello27test_student_allocation_badyyF() : *ptr_elt {
  #: @[16:5]
      n1 = $s5Hello14create_studentSiyF() @[16:5]
      jmp 1::ret @[16:5]
      
  #$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_SSAHSus6UInt32VtF::void::ret: @[136:0]
      unreachable @[136:0]
      
  #1::ret: @[16:5]
      n2 = __sil_eq(n1, 35) @[16:5]
      if n2 then jmp 8 else jmp 4 @[16:5]
      
  #4: @[16:5]
      n3 = $ss6assert__4file4lineySbyXK_SSyXKs12StaticStringVSutFfA0_SSycfu_() @[16:5]
      jmp 5::ret @[16:5]
      
  #5::ret: @[16:5]
      _ = __sil_assert_fail(null) @[16:5]
      jmp $ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_SSAHSus6UInt32VtF::void::ret @[16:5]
      
  #8: @[17:1]
      ret null @[17:1]
      
} @?

define .plain_name = "test_student_allocation_good" $s5Hello28test_student_allocation_goodyyF() : *ptr_elt {
  #: @[20:5]
      n1 = $s5Hello14create_studentSiyF() @[20:5]
      jmp 1::ret @[20:5]
      
  #$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_SSAHSus6UInt32VtF::void::ret: @[138:0]
      unreachable @[138:0]
      
  #1::ret: @[20:5]
      n2 = __sil_eq(n1, 30) @[20:5]
      if n2 then jmp 8 else jmp 4 @[20:5]
      
  #4: @[20:5]
      n3 = $ss6assert__4file4lineySbyXK_SSyXKs12StaticStringVSutFfA0_SSycfu_() @[20:5]
      jmp 5::ret @[20:5]
      
  #5::ret: @[20:5]
      _ = __sil_assert_fail(null) @[20:5]
      jmp $ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_SSAHSus6UInt32VtF::void::ret @[20:5]
      
  #8: @[21:1]
      ret null @[21:1]
      
} @?

define .plain_name = "init" .method_offset = "15" T5Hello7StudentC.$s5Hello7StudentC3age6weightACSi_SitcfC(var0: int, var1: int, var2: *ptr_elt) : *ptr_elt {
  #: @[140:0]
      n1 = load &var2 @[140:0]
      n4 = __sil_swift_alloc(<T5Hello7StudentC>) @[140:0]
      jmp 4::ret @[141:0]
      
  #4::ret: @[143:0]
      n5 = load &var0 @[143:0]
      n6 = load &var1 @[143:0]
      n8 = $s5Hello7StudentC3age6weightACSi_Sitcfc(n5, n6, n4) @[143:0]
      jmp 5::ret @[144:0]
      
  #5::ret: @[145:0]
      ret n8 @[145:0]
      
} @?

define .plain_name = "init" $s5Hello7StudentC3age6weightACSi_Sitcfc(var0: int, var1: int, var2: *ptr_elt) : *ptr_elt {
  local weight: int, self: *ptr_elt, age: int
  #: @[149:0]
      n1 = load &var0 @[149:0]
      store &age <- n1 @[149:0]
      n2 = load &var1 @[150:0]
      store &weight <- n2 @[150:0]
      n3 = load &var2 @[151:0]
      store &self <- n3 @[151:0]
      n4 = load &var2 @[5:18]
      n5 = load n4.T5Hello7StudentC.field_1 @[5:18]
      n1 = load &var0 @[5:18]
      store n5.TSi.field_0 <- n1 @[5:18]
      n6 = load &var2 @[6:21]
      n7 = load n6.T5Hello7StudentC.field_2 @[6:21]
      n2 = load &var1 @[6:21]
      store n7.TSi.field_0 <- n2 @[6:21]
      n8 = load &var2 @[7:5]
      ret n8 @[7:5]
      
} @?

define .plain_name = "age.get" $s5Hello7StudentC3ageSivg(var0: *ptr_elt) : int {
  #: @[154:0]
      n2 = load &var0 @[154:0]
      n3 = load n2.T5Hello7StudentC.field_1 @[154:0]
      n1 = load n3.TSi.field_0 @[154:0]
      ret n1 @[155:0]
      
} @?

declare .plain_name = "weight.modify" .method_offset = "14" T5Hello7StudentC.$s5Hello7StudentC6weightSivM(*ptr_elt, *ptr_elt) : *ptr_elt

declare .plain_name = "weight.modify" $s5Hello7StudentC6weightSivM::resume::0(*ptr_elt, int) : *ptr_elt

define .plain_name = "weight.get" .method_offset = "12" T5Hello7StudentC.$s5Hello7StudentC6weightSivg(var0: *ptr_elt) : int {
  local var2: int[]
  #: @[162:0]
      n2 = load &var0 @[162:0]
      n1 = n2.T5Hello7StudentC.field_2 @[162:0]
      n4 = load n1 @[164:0]
      n3 = load n4.TSi.field_0 @[164:0]
      ret n3 @[166:0]
      
} @?

define .plain_name = "weight.set" .method_offset = "13" T5Hello7StudentC.$s5Hello7StudentC6weightSivs(var0: int, var1: *ptr_elt) : *ptr_elt {
  local var3: int[]
  #: @[169:0]
      n2 = load &var1 @[169:0]
      n1 = n2.T5Hello7StudentC.field_2 @[169:0]
      n4 = load n1 @[171:0]
      n3 = load &var0 @[171:0]
      store n4.TSi.field_0 <- n3 @[171:0]
      ret null @[173:0]
      
} @?

declare $s5Hello7StudentCMa(int) : *ptr_elt

declare .plain_name = "deinit" .method_offset = "-2" T5Hello7StudentC.$s5Hello7StudentCfD(*ptr_elt) : *ptr_elt

declare .plain_name = "deinit" $s5Hello7StudentCfd(*ptr_elt) : *ptr_elt

define .plain_name = "setWeight" $s5Hello9setWeightyySiF(var0: int) : *ptr_elt {
  local weight: int, john: *ptr_elt, getelementptr_offset_1: *void
  #: @[190:0]
      n1 = load &var0 @[190:0]
      store &weight <- n1 @[190:0]
      n3 = $s5Hello7StudentCMa(0) @[25:16]
      jmp 4::ret @[25:16]
      
  #4::ret: @[25:16]
      n7 = load n3.swift::metadata_response.field_0 @[25:16]
      n8 = T5Hello7StudentC.$s5Hello7StudentC3age6weightACSi_SitcfC(30, 60, n7) @[25:16]
      jmp 6::ret @[25:16]
      
  #6::ret: @[191:0]
      store &john <- n8 @[191:0]
      n9 = load n8 @[26:17]
      store &getelementptr_offset_1 <- 13 @[26:17]
      n10 = load &getelementptr_offset_1 @[26:17]
      n11 = load &var0 @[26:17]
      _ = $builtins.llvm_dynamic_call(n10, n11, n8) @[26:17]
      jmp 9::void::ret @[26:17]
      
  #9::void::ret: @[27:1]
      ret null @[27:1]
      
} @?

declare $ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_SSAHSus6UInt32VtF(int, int, int, int, *ptr_elt, int, int, int, int, int) : *ptr_elt

declare $ss6assert__4file4lineySbyXK_SSyXKs12StaticStringVSutFfA0_SSycfu_() : *ptr_elt

declare _swift_FORCE_LOAD_$_swiftCompatibility56() : *ptr_elt

declare objc_opt_self(*ptr_elt) : *ptr_elt

declare swift_allocObject(*ptr_elt, int, int) : *ptr_elt

declare swift_beginAccess(*ptr_elt, *ptr_elt, int, *ptr_elt) : *ptr_elt

declare swift_bridgeObjectRetain(*ptr_elt) : *ptr_elt

declare swift_deallocClassInstance(*ptr_elt, int, int) : *ptr_elt

declare swift_endAccess(*ptr_elt) : *ptr_elt

declare swift_release(*ptr_elt) : *ptr_elt

global symbolic _____ 5Hello7StudentC: *ptr_elt

global symbolic Si: *ptr_elt

global objc_classes_$s5Hello7StudentCN: *ptr_elt

global llvm::used: *ptr_elt

global llvm::compiler::used: *ptr_elt

global _swift_FORCE_LOAD_$_swiftCompatibility56_$_Hello: *ptr_elt

global _objc_empty_cache: *ptr_elt

global __swift_reflection_version: *ptr_elt

global _METACLASS_DATA__TtC5Hello7Student: *ptr_elt

global _IVARS__TtC5Hello7Student: *ptr_elt

global _DATA__TtC5Hello7Student: *ptr_elt

global OBJC_METACLASS_$__TtCs12_SwiftObject: *ptr_elt

global OBJC_CLASS_$__TtCs12_SwiftObject: *ptr_elt

global ::str::7::Student: *ptr_elt

global ::str::6::weight: *ptr_elt

global ::str::5::Hello: *ptr_elt

global ::str::3::age: *ptr_elt

global ::str::19::Hello/student::swift: *ptr_elt

global ::str::18::_TtC5Hello7Student: *ptr_elt

global ::str::16::Assertion failed: *ptr_elt

global ::str::0::: *ptr_elt

global 1: *ptr_elt

global 0: *ptr_elt

global $sBoWV: *ptr_elt

global $s5HelloMXM: *ptr_elt

global $s5Hello7StudentCMn: *ptr_elt

global $s5Hello7StudentCMm: *ptr_elt

global $s5Hello7StudentCMf: *ptr_elt

global $s5Hello7StudentCMF: *ptr_elt

global $s5Hello7StudentCHn: *ptr_elt

global $s5Hello7StudentC6weightSivpWvd: *ptr_elt

global $s5Hello7StudentC3ageSivpWvd: *ptr_elt

type $s5Hello7StudentC6weightSivM::Frame = {field_0: int[]}

type T5Hello7StudentC = {field_0: *swift::refcounted; field_1: *TSi;
                         field_2: *TSi}

type TSi = {field_0: int}

type __infer_tuple_class<*ptr_elt,*ptr_elt> = {__infer_tuple_field_0: *ptr_elt;
                                               __infer_tuple_field_1: *ptr_elt}

type __infer_tuple_class<*ptr_elt,*ptr_elt,*ptr_elt,int,*ptr_elt,*ptr_elt,*ptr_elt,int,int,int,int,int,int,int,int,*ptr_elt,*ptr_elt,int,int,*ptr_elt,*ptr_elt,*ptr_elt,*ptr_elt> = {
__infer_tuple_field_0: *ptr_elt; __infer_tuple_field_1: *ptr_elt;
__infer_tuple_field_2: *ptr_elt; __infer_tuple_field_3: int;
__infer_tuple_field_4: *ptr_elt; __infer_tuple_field_5: *ptr_elt;
__infer_tuple_field_6: *ptr_elt; __infer_tuple_field_7: int;
__infer_tuple_field_8: int; __infer_tuple_field_9: int;
__infer_tuple_field_10: int; __infer_tuple_field_11: int;
__infer_tuple_field_12: int; __infer_tuple_field_13: int;
__infer_tuple_field_14: int; __infer_tuple_field_15: *ptr_elt;
__infer_tuple_field_16: *ptr_elt; __infer_tuple_field_17: int;
__infer_tuple_field_18: int; __infer_tuple_field_19: *ptr_elt;
__infer_tuple_field_20: *ptr_elt; __infer_tuple_field_21: *ptr_elt;
__infer_tuple_field_22: *ptr_elt}

type __infer_tuple_class<*ptr_elt,*ptr_elt,*ptr_elt,int,int> = {__infer_tuple_field_0: *ptr_elt;
                                                                __infer_tuple_field_1: *ptr_elt;
                                                                __infer_tuple_field_2: *ptr_elt;
                                                                __infer_tuple_field_3: int;
                                                                __infer_tuple_field_4: int}

type __infer_tuple_class<int,*ptr_elt> = {__infer_tuple_field_0: int;
                                          __infer_tuple_field_1: *ptr_elt}

type __infer_tuple_class<int,int,(*__infer_tuple_class<*ptr_elt,*ptr_elt,*ptr_elt,int,int>)[]> = {
__infer_tuple_field_0: int; __infer_tuple_field_1: int;
__infer_tuple_field_2: (*__infer_tuple_class<*ptr_elt,*ptr_elt,*ptr_elt,int,int>)[]}

type __infer_tuple_class<int,int,int> = {__infer_tuple_field_0: int;
                                         __infer_tuple_field_1: int;
                                         __infer_tuple_field_2: int}

type __infer_tuple_class<int,int,int,int,*ptr_elt,*ptr_elt,*ptr_elt,*ptr_elt,*ptr_elt,*ptr_elt,*ptr_elt> = {
__infer_tuple_field_0: int; __infer_tuple_field_1: int;
__infer_tuple_field_2: int; __infer_tuple_field_3: int;
__infer_tuple_field_4: *ptr_elt; __infer_tuple_field_5: *ptr_elt;
__infer_tuple_field_6: *ptr_elt; __infer_tuple_field_7: *ptr_elt;
__infer_tuple_field_8: *ptr_elt; __infer_tuple_field_9: *ptr_elt;
__infer_tuple_field_10: *ptr_elt}

type __infer_tuple_class<int,int,int,int,int,int,int,int,int,int,int> = {
__infer_tuple_field_0: int; __infer_tuple_field_1: int;
__infer_tuple_field_2: int; __infer_tuple_field_3: int;
__infer_tuple_field_4: int; __infer_tuple_field_5: int;
__infer_tuple_field_6: int; __infer_tuple_field_7: int;
__infer_tuple_field_8: int; __infer_tuple_field_9: int;
__infer_tuple_field_10: int}

type __infer_tuple_class<int,int,int,int,int,int,int,int,int,int,int,int,int,*swift::method_descriptor,*swift::method_descriptor,*swift::method_descriptor,*swift::method_descriptor> = {
__infer_tuple_field_0: int; __infer_tuple_field_1: int;
__infer_tuple_field_2: int; __infer_tuple_field_3: int;
__infer_tuple_field_4: int; __infer_tuple_field_5: int;
__infer_tuple_field_6: int; __infer_tuple_field_7: int;
__infer_tuple_field_8: int; __infer_tuple_field_9: int;
__infer_tuple_field_10: int; __infer_tuple_field_11: int;
__infer_tuple_field_12: int;
__infer_tuple_field_13: *swift::method_descriptor;
__infer_tuple_field_14: *swift::method_descriptor;
__infer_tuple_field_15: *swift::method_descriptor;
__infer_tuple_field_16: *swift::method_descriptor}

type __infer_tuple_class<int[],int> = {__infer_tuple_field_0: int[];
                                       __infer_tuple_field_1: int}

type objc_class = {field_0: *ptr_elt; field_1: *ptr_elt; field_2: *ptr_elt;
                   field_3: *ptr_elt; field_4: int}

type swift::metadata_response = {field_0: *ptr_elt; field_1: int}

type swift::method_descriptor = {field_0: int; field_1: int}

type swift::refcounted = {field_0: *ptr_elt; field_1: int}

type swift::type_metadata_record = {field_0: int}

